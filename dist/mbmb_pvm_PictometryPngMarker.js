(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{504:function(t,e,s){"use strict";s.r(e);var r={name:"PictometryPngMarker",props:["icon","latlng","height","width"],render(t){},computed:{ipa(){return this.$store.state.pictometry.ipa}},mounted(){this.placeMarker(this.$props.latlng)},beforeDestroy(){this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds)},watch:{latlng(t){this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds),this.placeMarker(t)}},methods:{constructLocalUrl(t,e,s){let r;return r="https:"===window.location.protocol?"https://"+t+e+s:"http://"+t+e+s},placeMarker(t){const e=window.location.port;let s;s=""!=e?window.location.hostname+":"+e:window.location.hostname;const r={type:this.ipa.SHAPE_TYPE.MARKER,center:{y:t[0],x:t[1]},markerImageHeight:this.$props.height,markerImageWidth:this.$props.width,markerOffsetX:this.$props.offsetX,markerOffsetY:this.$props.offsetY,markerImage:this.constructLocalUrl(s,"/",this.$props.icon),onShapeClick:"true"};this.ipa.addShapes([r],this.didAddShapes)},didAddShapes(t){for(var e=0;e<t.length;e++)if("false"===t[e].success)console.log(t[e].error);else{this.$store.state.pictometry.pngMarkerIds.push(t[e].shapeId)}}}},o=s(37),a=Object(o.a)(r,void 0,void 0,!1,null,null,null);e.default=a.exports}}]);