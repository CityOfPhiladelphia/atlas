(window.webpackJsonp=window.webpackJsonp||[]).push([[12,17],{272:function(e,t,n){"use strict";n.r(t);var o=n(0),r={name:"Control",props:["position"],methods:{createLeafletElement(e){return new class extends e.Control{constructor(e,t){super(t),this.el=e}onAdd(){const t=this.el;return e.DomEvent.disableClickPropagation(t),e.DomEvent.disableScrollPropagation(t),t}}(this.$el,{position:this.position})},parentMounted(e,t){const n=this.createLeafletElement(o);this.$leafletElement=n;const r=e.$leafletElement;n.addTo(r)}}},a=n(47),s=Object(a.a)(r,function(){var e=this.$createElement;return(this._self._c||e)("div",[this._t("default")],2)},[],!1,null,null,null);t.default=s.exports},332:function(e,t,n){var o=n(476);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(12)(o,r);o.locals&&(e.exports=o.locals)},475:function(e,t,n){"use strict";var o=n(332);n.n(o).a},476:function(e,t,n){(e.exports=n(11)(!1)).push([e.i,"\n.basetooltip {\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 5px 13px;\r\n  font: 20px/22px Arial, Helvetica, sans-serif;\r\n  background: white;\r\n  background: rgba(255,255,255,1);\r\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\r\n  border-radius: 5px;\n}\n.basetooltip2 {\r\n  float: right;\r\n  width: 80%;\r\n  height: 32px;\r\n  padding: 3px 10px;\r\n  padding-right: 40px;\r\n  font: 12px/14px Arial, Helvetica, sans-serif;\r\n  background: white;\r\n  background: rgba(255,255,255,1);\r\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\r\n  border-radius: 5px;\n}\n.basetooltip a {\r\n  color: black\n}\n.basetooltip2 a {\r\n  color: black\n}\r\n\r\n",""])},508:function(e,t,n){"use strict";n.r(t);var o=n(272);const{props:r,methods:a}=o.default;var s={name:"BasemapTooltip",props:["position"],data:()=>({basemap:"none"}),computed:{activeBasemap(){return this.$store.state.map.basemap},activeTopic(){return this.$store.state.activeTopic}},methods:Object.assign(a,{onMouseover(){const e=this.activeBasemap;let t=e;(e.includes("imagery")||e.includes("historic"))&&(t="deeds"===this.activeTopic||"zoning"===this.activeTopic?"dor":"pwd"),this.basemap=t},onMouseout(){this.basemap="none"}})},i=(n(475),n(47)),p=Object(i.a)(s,function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("div",{class:"none"===this.basemap?"basetooltip":"basetooltip2",on:{mouseover:this.onMouseover,mouseout:this.onMouseout}},["pwd"===this.basemap?t("div",[this._v("\n      The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Boundaries are generalized for ease of visualization. Source: Philadelphia Water\n    ")]):"dor"===this.basemap?t("div",[this._v("\n      The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Dimension lengths are calculated using the GIS feature. Source: Department of Records.\n    ")]):t("div",[this._v("\n      i\n    ")])])])},[],!1,null,null,null);t.default=p.exports}}]);