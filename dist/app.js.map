{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/helpers.js","webpack:///./src/general/transforms.js","webpack:///./src/data-sources/condo-list.js","webpack:///./src/data-sources/crime-incidents.js","webpack:///./src/data-sources/dor-documents.js","webpack:///./src/data-sources/elected-officials.js","webpack:///./src/data-sources/regmaps.js","webpack:///./src/data-sources/vacant-indicator-points.js","webpack:///./src/data-sources/zoning-appeals.js","webpack:///./src/topics/deeds.js","webpack:///./src/topics/li.js","webpack:///./src/topics/zoning.js","webpack:///./src/topics/nearby.js","webpack:///./src/topics/voting.js","webpack:///./src/main.js","webpack:///./node_modules/moment/locale sync en","webpack:///./public/styles.css","webpack:///./public/styles.css?7705","webpack:///./src/general/map.js","webpack:///./src/general/parcels.js","webpack:///./src/general/imageOverlayGroups.js","webpack:///./src/general/legendControls.js","webpack:///./public/index.html","webpack:///./src/general/greeting.js","webpack:///./src/data-sources/divisions.js","webpack:///./src/data-sources/dor-condo-list.js","webpack:///./src/data-sources/li-business-licenses.js","webpack:///./src/data-sources/li-inspections.js","webpack:///./src/data-sources/li-permits.js","webpack:///./src/data-sources/li-violations.js","webpack:///./src/data-sources/nearby-zoning-appeals.js","webpack:///./src/data-sources/election-next.js","webpack:///./src/data-sources/opa.js","webpack:///./src/data-sources/polling-places.js","webpack:///./src/data-sources/rco.js","webpack:///./src/data-sources/zoning-base.js","webpack:///./src/data-sources/zoning-overlay.js","webpack:///./src/topics/property.js","webpack:///./src/topics/condos.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","helpers","GATEKEEPER_KEY","ZONING_CODE_MAP","RSD-1","RSD-2","RSD-3","RSA-1","RSA-2","RSA-3","RSA-4","RSA-5","RTA-1","RM-1","RM-2","RM-3","RM-4","RMX-1","RMX-2","RMX-3","CA-1","CA-2","CMX-1","CMX-2","CMX-2.5","CMX-3","CMX-4","CMX-5","I-1","I-2","I-3","IP","ICMX","IRMX","SPENT","SPAIR","SPINS","SPSTA","SPPOA","SP-PO-A","SPPOP","cleanDorAttribute","attr","cleanAttr","String","replace","indexOf","concatDorAddress","parcel","includeUnit","props","properties","addressLow","this","HOUSE","addressHigh","STEX","addressSuffix","SUF","address","unit","UNIT","comps","map","streetField","concat","filter","Boolean","join","getVacancyText","state","land","sources","vacantLand","building","vacantBuilding","accounting","settings","currency","precision","transforms","bold","transform","booleanToYesNo","thousandsPlace","match","globals","formatMoney","date","moment","format","dayofweek","feet","getNearest","field","distName","min","Math","item","integer","isNaN","parseInt","nowrap","nth","phoneNumber","prettyNumber","toLocaleString","rcoPrimaryContact","exec","std","orig","squareFeet","titleCase","str","toLowerCase","split","word","charAt","toUpperCase","urlFormatter","txt","expStr","RegExp","condo_list","success","type","url","options","feature","street_address","gatekeeperKey","include_units","table","dateMinType","dateField","dor_documents","where","targets","parcels","dor","getTargetId","parcelBaseAddress","target","OBJECTID","params","address_high","geocode","street_predir","address_low","address_low_frac","unitNum","address_low_suffix","unitNum2","street_postdir","unit_num","returnDistinctValues","BASEREG","outFields","q","regmaps","id","deps","coordPair","relationship","targetGeometry","y","Leaflet","xVals","yVals","geometry","coordinates","forEach","coordPairs","coordsAreDefined","isArray","innerCoordPair","x","bounds","yMin","yMax","max","distances","xMin","xMax","every","coord","latLngBounds","showTopicBasedOnOtherData","otherData","undefined","requiredData","getValue","pathToDataArray","minDataLength","plural","condoList","label","slots","items","fields","getKey","opa_account_num","title","highestPageRetrieved","page","pageCount","page_count","totalSize","total_size","features","row","identifyFeature","deeds","icon","dataSources","components","desc","descriptor","STATUS","context","list","types","getTitle","MAPREG","sort","order","ORIG_DATE","defaultIncrement","INACTDATE","attributes","DOCUMENT_ID","SUFFIX","showAllRowsOnFirstClick","recmap","condoparcel","condo_name","condounit","dorCondoList","rows","imageOverlayGroup","DOCUMENT_TYPE","permitissuedate","nullValue","GRANTORS","GRANTEES","status","DISPLAY_DATE","action","dorDocuments","count","num_pages","RECMAP","app_id","li","key","limit","topicKey","permitnumber","addresskey","permitdescription","href","externalLink","encodeURIComponent","addressEncoded","itemRow","scan_date","permit_number","appId","doc_id","inspectioncompleted","casenumber","licensenum","inspectiondescription","business_name","inspectionstatus","caseaddeddate","violationdescription","text","singular","getAddress","initialissuedate","titleBackground","shouldShowFilters","shouldShowHeaders","licensetype","longCodesUnique","zoning","hf","currentZoning","zoningOverlay","overlayRowsFiltered","overlayRowsFilteredWithType","zoningAndOverlays","rowsFilteredWithType","_target$data","zoningBase","_data$rows","longCodes","long_code","longCodesUniqueSet","Set","from","date_scheduled","code_section_link","code_section","billType","pendingbillurl","pendingbill","_data$rows2","pending","forceShow","overlay_name","dynamicMapLayers","processeddate","appeal_key","appealno","appealgrounds","decision","filters","ORGANIZATION_NAME","ORGANIZATION_ADDRESS","values","MEETING_LOCATION_ADDRESS","PRIMARY_NAME","PRIMARY_PHONE","PRIMARY_EMAIL","tables","PREFFERED_CONTACT_METHOD","select","sortFields","val","sortField","nearby","direction","weight","opacity","fillOpacity","distance","requested_datetime","filterByText","mapOverlay","marker","radius","fillColor","color","hoverStyle","location_block","text_general_code","media_url","service_name","dispatch_date","style","_distance","ADDRESS","decisiondate","errorMessage","VACANT_FLAG","answer","pollingData","council","pwd","voting_phone","voting_titleCase","voting_nth","voting","geojsonForTopic","electedOfficials","ballot_file_id","prefix","shadow","moment_default","nextElectionAPI","election_date","library","pollingPlaces","PARKING_CODE","office_label","website","first_name","last_name","council_district_2016","main_contact_address_2","main_contact_phone_1","main_contact_phone_2","email","console","BASE_CONFIG_URL","next_election","panels","router","enabled","divisions","wideStyle","narrowStyle","markersForTopic","lng","addressInput","width","mapWidth","position","autocompleteEnabled","autocompleteMax","placeholder","bottom","left","add","faBook","faWrench","faUniversity","faGavel","faMapMarkerAlt","faLandmark","faBuilding","main_location$hostname","location","hostname","main_hostname","log","info","debug","error","accounting_default","a","mapboard_default","line-height","max-width","right","defaultBasemap","defaultIdentifyFeature","imagery","initialImagery","multipleAllowed","geocodeFailAttemptParcel","clearStateOnError","wipeOutOtherParcelsOnReverseGeocodeOnly","geocodeField","parcelIdInGeocoder","getByLatLngIfIdFails","legendControls","water","topics","showWithBaseMapOnly","Roof","background-color","Other Impervious Surface","Easements","border-color","border-style","border-weight","height","font-size","Trans Parcels","Rights of Way","message","urlAddition","election_precinct","eclipse_location_id","li_address_key","toString","parcel_number","returnGeometry","f","geometryServerUrl","stmt","addressKey","dependent","numCondos","opa_address","opa_owners","opa","market_value","showTopicOnlyIfDataExists","sale_date","sale_price","shouldPluralize"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([376,1,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\r\n  GATEKEEPER_KEY: '82fe014b6575b8c38b44235580bc8b11',\r\n  ZONING_CODE_MAP: {\r\n    'RSD-1': 'Residential Single Family Detached-1',\r\n    'RSD-2': 'Residential Single Family Detached-2',\r\n    'RSD-3': 'Residential Single Family Detached-3',\r\n    'RSA-1': 'Residential Single Family Attached-1',\r\n    'RSA-2': 'Residential Single Family Attached-2',\r\n    'RSA-3': 'Residential Single Family Attached-3',\r\n    'RSA-4': 'Residential Single Family Attached-4',\r\n    'RSA-5': 'Residential Single Family Attached-5',\r\n    'RTA-1': 'Residential Two-Family Attached-1',\r\n    'RM-1': 'Residential Multi-Family-1',\r\n    'RM-2': 'Residential Multi-Family-2',\r\n    'RM-3': 'Residential Multi-Family-3',\r\n    'RM-4': 'Residential Multi-Family-4',\r\n    'RMX-1': 'Residential Mixed-Use-1',\r\n    'RMX-2': 'Residential Mixed-Use-2',\r\n    'RMX-3': 'Residential (Center City) Mixed-Use-3',\r\n    'CA-1': 'Auto-Oriented Commercial-1',\r\n    'CA-2': 'Auto-Oriented Commercial-2',\r\n    'CMX-1': 'Neighborhood Commercial Mixed-Use-1',\r\n    'CMX-2': 'Neighborhood Commercial Mixed-Use-2',\r\n    'CMX-2.5': 'Neighborhood Commercial Mixed-Use-2.5',\r\n    'CMX-3': 'Community Commercial Mixed-Use',\r\n    'CMX-4': 'Center City Commercial Mixed-Use',\r\n    'CMX-5': 'Center City Core Commercial Mixed-Use',\r\n    'I-1': 'Light Industrial',\r\n    'I-2': 'Medium Industrial',\r\n    'I-3': 'Heavy Industrial',\r\n    'IP': 'Port Industrial',\r\n    'ICMX': 'Industrial Commercial Mixed-Use',\r\n    'IRMX': 'Industrial Residential Mixed-Use',\r\n    'SPENT': 'Commercial Entertainment (Casinos)',\r\n    'SPAIR': 'Airport',\r\n    'SPINS': 'Institutional Development',\r\n    'SPSTA': 'Stadium',\r\n    'SPPOA': 'Recreation',\r\n    'SP-PO-A': 'Recreation',\r\n    'SPPOP': 'Recreation',\r\n  },\r\n\r\n  cleanDorAttribute(attr) {\r\n    // console.log('cleanDorAttribute is running with attr', attr);\r\n    // trim leading and trailing whitespace\r\n    var cleanAttr = attr ? String(attr) : '';\r\n    cleanAttr = cleanAttr.replace(/\\s+/g, '');\r\n\r\n    // return null for zeros and empty strings\r\n    // if (['', '0'].indexOf(cleanAttr) > -1) {\r\n    //   return null;\r\n    // }\r\n\r\n    // return empty for zeros and null\r\n    if ([null, '0'].indexOf(cleanAttr) > -1) {\r\n      return '';\r\n    }\r\n\r\n    // console.log('cleanDorAttribute cleanAttr result:', cleanAttr);\r\n    return cleanAttr;\r\n  },\r\n\r\n  // TODO put this in base config transforms\r\n  concatDorAddress(parcel, includeUnit) {\r\n    includeUnit = !!includeUnit;\r\n    var STREET_FIELDS = ['STDIR', 'STNAM', 'STDES', 'STDESSUF'];\r\n    var props = parcel.properties;\r\n\r\n    // handle house num\r\n    var addressLow = this.cleanDorAttribute(props.HOUSE);\r\n    var addressHigh = this.cleanDorAttribute(props.STEX);\r\n    // maybe should be props.SUF below (it said props.SUFFIX)\r\n    var addressSuffix = this.cleanDorAttribute(props.SUF);\r\n    var address = addressLow;\r\n    address = address + (addressHigh ? '-' + addressHigh : '');\r\n    address = address + (addressSuffix || '');\r\n\r\n    // handle unit\r\n    var unit = this.cleanDorAttribute(props.UNIT);\r\n    if (unit) unit = '# ' + unit;\r\n\r\n    // clean up attributes\r\n    var comps = STREET_FIELDS.map(function(streetField) {\r\n      return props[streetField];\r\n    });\r\n    comps = comps.map(this.cleanDorAttribute);\r\n        // TODO handle individual address comps (like mapping stex=2 => 1/2)\r\n        // addressLow = comps.HOUSE,\r\n        // addressHigh = comps.STEX,\r\n        // streetPredir = comps.STDIR,\r\n        // streetName = comps.STNAM,\r\n        // streetSuffix = comps.STDES,\r\n        // streetPostdir = comps.STDESSUF,\r\n\r\n    // add address to front\r\n    comps = [address].concat(comps);\r\n\r\n    // add unit to end\r\n    if (includeUnit) comps = comps.concat([unit]);\r\n\r\n    // remove nulls and concat\r\n    address = comps.filter(Boolean).join(' ');\r\n\r\n    // console.log('concatDorAddress address result:', address);\r\n    if (address === '') {\r\n      address = 'Parcel has no address';\r\n    }\r\n    return address;\r\n  },\r\n\r\n  getVacancyText(state) {\r\n    var land = state.sources.vacantLand.data\r\n    var building = state.sources.vacantBuilding.data\r\n    if (land.length === 0 && building.length === 0) {\r\n      return 'Not Likely Vacant'\r\n    } else if (land.length > 0) {\r\n      return 'Likely Vacant Land'\r\n    } else if (building.length > 0) {\r\n      return 'Likely Vacant Building'\r\n    }\r\n  }\r\n}\r\n","import accounting from 'accounting';\r\nimport moment from 'moment';\r\n\r\naccounting.settings.currency.precision = 0;\r\n\r\nexport default {\r\n  bold: {\r\n    transform: function (value) {\r\n      return '<strong>' + value + '</strong>';\r\n    },\r\n  },\r\n  booleanToYesNo: {\r\n    transform: function(value) {\r\n      return value ? 'Yes' : 'No';\r\n    }\r\n  },\r\n  thousandsPlace: {\r\n    transform: function(value) {\r\n      var number = String(value).match(/\\d+/)[0].replace(/(.)(?=(\\d{3})+$)/g,'$1,');\r\n      var label = String(value).replace(/[0-9]/g, '') || '';\r\n      return number + ' ' + label;\r\n    }\r\n  },\r\n  currency: {\r\n    // a list of global objects this transform depends on\r\n    globals: ['accounting'],\r\n    // this is the function that gets called to perform the transform\r\n    transform: function (value, globals) {\r\n      // var accounting = globals.accounting;\r\n      return accounting.formatMoney(value);\r\n    }\r\n  },\r\n  date: {\r\n    globals: ['moment'],\r\n    transform: function (value, globals) {\r\n      // var moment = globals.moment;\r\n      return moment(value).format('MM/DD/YYYY');\r\n    },\r\n  },\r\n  dayofweek: {\r\n    // a list of global objects this transform depends on\r\n    transform: function (value) {\r\n      switch(value) {\r\n        case \"FRI\":\r\n        value = \"Friday\";\r\n        break;\r\n        case \"SAT\":\r\n        value = \"Saturday\";\r\n        break;\r\n        case \"SUN\":\r\n        value = \"Sunday\";\r\n        break;\r\n        case \"MON\":\r\n        value = \"Monday\";\r\n        break;\r\n        case \"TUE\":\r\n        value = \"Tuesday\";\r\n        break;\r\n        case \"WED\":\r\n        value = \"Wednesday\";\r\n        break;\r\n        case \"THU\":\r\n        value = \"Thursday\";\r\n      };\r\n      return value\r\n    }\r\n  },\r\n  feet: {\r\n    transform: function (value) {\r\n      return value && value + ' ft';\r\n    },\r\n  },\r\n  getNearest: {\r\n    transform: function(state, field, distName) {\r\n      let min = Math.min.apply(null, state.sources[field].data.map(function(item) {return item[distName];}));\r\n      let result  = state.sources[field].data.filter(function(item){return item[distName] == min;} );\r\n      let nearest = result? result[0] : null;\r\n      return nearest\r\n    }\r\n  },\r\n  integer: {\r\n    transform: function (value) {\r\n      return !isNaN(value) && parseInt(value);\r\n    },\r\n  },\r\n  nowrap: {\r\n    transform: function (value) {\r\n      return '<span style=\"white-space: nowrap;\">' + value + '</span>';\r\n    },\r\n  },\r\n  nth: {\r\n     transform: function(n) {\r\n       return n + ([,'st','nd','rd'][n%100>>3^1&&n%10]||'th')\r\n     }\r\n  },\r\n  phoneNumber: {\r\n    transform: function (value) {\r\n      var s2 = (\"\"+value).replace(/\\D/g, '');\r\n      var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n      return (!m) ? null : \"(\" + m[1] + \") \" + m[2] + \"-\" + m[3];\r\n    }\r\n  },\r\n  prettyNumber: {\r\n    transform: function (value) {\r\n      return !isNaN(value) && value.toLocaleString();\r\n    },\r\n  },\r\n  rcoPrimaryContact: {\r\n    transform: function (value) {\r\n      var PHONE_NUMBER_PAT = /\\(?(\\d{3})\\)?( |-)?(\\d{3})(-| )?(\\d{4})/g;\r\n      var m = PHONE_NUMBER_PAT.exec(value);\r\n\r\n      // check for non-match\r\n      if (!m) {\r\n        return value;\r\n      }\r\n\r\n      // standardize phone number\r\n      var std = ['(', m[1], ') ', m[3], '-', m[5]].join('');\r\n      var orig = m[0]\r\n      var valueStd = value.replace(orig, std);\r\n\r\n      return valueStd;\r\n    }\r\n  },\r\n  squareFeet: {\r\n    transform: function (value) {\r\n      return value && value + ' sq ft';\r\n    },\r\n  },\r\n  titleCase: {\r\n    transform: function(str) {\r\n      str = str.toLowerCase().split(' ').map(function(word) {\r\n        return (word.charAt(0).toUpperCase() + word.slice(1));\r\n      });\r\n      return str.join(' ');\r\n    }\r\n  },\r\n  urlFormatter: {\r\n    transform: function(txt) {\r\n      var uselessWordsArray =\r\n        [\r\n          \"http//\", \"http://\", \"https://\", \"www.\", \"//\", \"//:\"\r\n        ];\r\n      var expStr = uselessWordsArray.join(\"|\");\r\n      return txt.replace(new RegExp(expStr, 'gi'), '');\r\n    }\r\n  },\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  id: 'condoList',\r\n  type: 'http-get',\r\n  url: '//api.phila.gov/ais/v1/search/',\r\n  options: {\r\n    params: {\r\n      urlAddition: function (feature) {\r\n        return feature.properties.street_address;\r\n      },\r\n      gatekeeperKey: helpers.GATEKEEPER_KEY,\r\n      include_units: true,\r\n      opa_only: true,\r\n      page: 1,\r\n    },\r\n    success: function(data) {\r\n      return data;\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'crimeIncidents',\r\n  type: 'http-get-nearby',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    table: 'incidents_part1_part2',\r\n    dateMinNum: 1,\r\n    dateMinType: 'year',\r\n    dateField: 'dispatch_date',\r\n  }\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  id: 'dorDocuments',\r\n  type: 'http-get',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  // url: '//gis.phila.gov/arcgis/rest/services/DOR/rtt_service/MapServer/0/query',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/ArcGIS/rest/services/RTT_SUMMARY/FeatureServer/0/query',\r\n  options: {\r\n    params: {\r\n      where: function(feature, state) {\r\n        // METHOD 1: via address\r\n        var parcelBaseAddress = helpers.concatDorAddress(feature);\r\n        var geocode = state.geocode.data.properties;\r\n\r\n        // REVIEW if the parcel has no address, we don't want to query\r\n        // WHERE ADDRESS = 'null' (doesn't make sense), so use this for now\r\n        if (!parcelBaseAddress || parcelBaseAddress === 'null'){\r\n          var where = \"MATCHED_REGMAP = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n        } else {\r\n          // TODO make these all camel case\r\n          var props = state.geocode.data.properties,\r\n              address_low = props.address_low,\r\n              address_floor = Math.floor(address_low / 100, 1) * 100,\r\n              address_remainder = address_low - address_floor,\r\n              addressHigh = props.address_high,\r\n              addressCeil = addressHigh || address_low;\r\n\r\n          // form where clause\r\n          var where = \"(((ADDRESS_LOW >= \" + address_low + \" AND ADDRESS_LOW <= \" + addressCeil + \")\"\r\n                    + \" OR (ADDRESS_LOW >= \" + address_floor + \" AND ADDRESS_LOW <= \" + addressCeil + \" AND ADDRESS_HIGH >= \" + address_remainder + \" ))\"\r\n                    + \" AND STREET_NAME = '\" + geocode.street_name\r\n                    + \"' AND STREET_SUFFIX = '\" + geocode.street_suffix\r\n                    + \"' AND (MOD(ADDRESS_LOW,2) = MOD( \" + address_low + \",2))\";\r\n\r\n\r\n\r\n          if (geocode.street_predir != '') {\r\n            where += \" AND STREET_PREDIR = '\" + geocode.street_predir + \"'\";\r\n          }\r\n\r\n          if (geocode.address_low_suffix != '') {\r\n            where += \" AND ADDRESS_LOW_SUFFIX = '\" + geocode.address_low_suffix + \"'\";\r\n          }\r\n\r\n          // this is hardcoded right now to handle DOR address suffixes that are actually fractions\r\n          if (geocode.address_low_frac === '1/2') {\r\n            where += \" AND ADDRESS_LOW_SUFFIX = '2'\" //+ geocode.address_low_frac + \"'\";\r\n          }\r\n\r\n          if (geocode.street_postdir != '') {\r\n            where += \" AND STREET_POSTDIR = '\" + geocode.street_postdir + \"'\";\r\n          }\r\n\r\n          // check for unit num\r\n          var unitNum = helpers.cleanDorAttribute(feature.properties.UNIT),\r\n              unitNum2 = geocode.unit_num;\r\n\r\n          if (unitNum) {\r\n            where += \" AND UNIT_NUM = '\" + unitNum + \"'\";\r\n          } else if (unitNum2 !== '') {\r\n            where += \" AND UNIT_NUM = '\" + unitNum2 + \"'\";\r\n          }\r\n\r\n          where += \") or MATCHED_REGMAP = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n          // where += \") or MATCHED_REGMAP like '%\" + state.parcels.dor.data[0].properties.BASEREG + \"%'\";\r\n          where += \" or REG_MAP_ID = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n        }\r\n\r\n        return where;\r\n      },\r\n      outFields: \"DOCUMENT_ID, DISPLAY_DATE, DOCUMENT_TYPE, GRANTORS, GRANTEES\",\r\n      // outFields: \"R_NUM, DISPLAY_DATE, DOCUMENT_TYPE, GRANTORS, GRANTEES\",\r\n      returnDistinctValues: 'true',\r\n      returnGeometry: 'false',\r\n      f: 'json',\r\n      sqlFormat: 'standard',\r\n    },\r\n    success: function(data) {\r\n      return data.features;\r\n      // return data.rows;\r\n    }\r\n  },\r\n}\r\n","export default {\r\n  id: 'electedOfficials',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){\r\n        // console.log(feature.properties.election_precinct);\r\n        return \"WITH split AS (SELECT * FROM splits WHERE precinct = '\" + feature.properties.election_precinct + \"') \\\r\n                SELECT eo.*, s.ballot_file_id\\\r\n                FROM elected_officials eo, split s \\\r\n                WHERE eo.office = 'city_council' AND eo.district = s.city_district \\\r\n                           OR eo.office = 'state_house' AND eo.district = s.state_house \\\r\n                           OR eo.office = 'state_senate' AND eo.district = s.state_senate \\\r\n                           OR eo.office = 'us_house' AND eo.district = s.federal_house \\\r\n                \";\r\n      },// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'regmaps',\r\n  type: 'esri',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/MASTERMAPINDEX/FeatureServer/0',\r\n  // deps: ['dorParcels'],\r\n  deps: ['parcels.dor'],\r\n  options: {\r\n    relationship: 'intersects',\r\n    targetGeometry: function (state, Leaflet) {\r\n      // get combined extent of dor parcels\r\n      // var parcels = state.dorParcels.data;\r\n      var parcels = state.parcels.dor.data;\r\n\r\n      // build up sets of x and y values\r\n      var xVals = [],\r\n          yVals = [];\r\n\r\n      // loop over parcels\r\n      parcels.forEach(function (parcel) {\r\n        var geom = parcel.geometry,\r\n            parts = geom.coordinates;\r\n\r\n        // loop over parts (whether it's simple or multipart)\r\n        parts.forEach(function (coordPairs) {\r\n          coordPairs.forEach(function (coordPair) {\r\n            // if the polygon has a hole, it has another level of coord\r\n            // pairs, presumably one for the outer coords and another for\r\n            // inner. for simplicity, add them all.\r\n            var hasHole = Array.isArray(coordPair[0]);\r\n\r\n            if (hasHole) {\r\n              // loop through inner pairs\r\n              coordPair.forEach(function (innerCoordPair) {\r\n                var x = innerCoordPair[0],\r\n                    y = innerCoordPair[1];\r\n\r\n                xVals.push(x);\r\n                yVals.push(y)\r\n              });\r\n            // for all other polys\r\n            } else {\r\n              var x = coordPair[0],\r\n                  y = coordPair[1];\r\n\r\n              xVals.push(x);\r\n              yVals.push(y)\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      // take max/min\r\n      var xMin = Math.min.apply(null, xVals);\r\n      var xMax = Math.max.apply(null, xVals);\r\n      var yMin = Math.min.apply(null, yVals);\r\n      var yMax = Math.max.apply(null, yVals);\r\n\r\n      // make sure all coords are defined. no NaNs allowed.\r\n      var coordsAreDefined = [xMin, xMax, yMin, yMax].every(\r\n        function (coord) { return coord; }\r\n      );\r\n\r\n      // if they aren't\r\n      if (!coordsAreDefined) {\r\n        //  exit with null to avoid an error calling lat lng bounds\r\n        // constructor\r\n        return null;\r\n      }\r\n\r\n      // construct geometry\r\n      var bounds = Leaflet.latLngBounds([\r\n        [yMin, xMin],\r\n        [yMax, xMax]\r\n      ]);\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n  success: function(data) {\r\n    return data;\r\n  }\r\n}\r\n","export default {\r\n  id: 'vacantIndicatorsPoints',\r\n  type: 'esri-nearby',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Vacant_Indicators_Points/FeatureServer/0',\r\n  options: {\r\n    geometryServerUrl: '//gis.phila.gov/arcgis/rest/services/Geometry/GeometryServer/',\r\n    calculateDistance: true,\r\n    distances: 500,\r\n  },\r\n}\r\n","export default {\r\n  id: 'zoningAppeals',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature) {\r\n        var stmt = \"select * from li_appeals where address = '\" + feature.properties.street_address + \"'\";\r\n        var addressKey = feature.properties.li_address_key;\r\n\r\n        if (addressKey && addressKey.length > 0) {\r\n          stmt += \" or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\";\r\n        }\r\n\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  key: 'deeds',\r\n  icon: 'book',\r\n  label: 'Deeds',\r\n  // TODO uncommenting this causes the no-content view to show up.\r\n  dataSources: ['dorDocuments'],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Deed information and document transactions for this address.\\\r\n          The map faithfully reflects property boundaries as described in \\\r\n          recorded deeds including multiple types of easements.\\\r\n          The property boundaries displayed on the map are for reference \\\r\n          only and should not be used in place of the recorded deeds or \\\r\n          land surveys. Source: Department of Records\\\r\n        ',\r\n      }\r\n    },\r\n    {\r\n      type: 'collection-summary',\r\n      options: {\r\n        descriptor: 'parcel',\r\n        // this will include zero quantities\r\n        // includeZeroes: true,\r\n        getValue: function(item) {\r\n          return item.properties.STATUS;\r\n        },\r\n        context: {\r\n          singular: function(list){ return 'There is ' + list + ' at this address.'},\r\n          plural: function(list){ return 'There are ' + list + ' at this address.'}\r\n        },\r\n        types: [\r\n          {\r\n            value: 1,\r\n            label: 'active parcel'\r\n          },\r\n          {\r\n            value: 2,\r\n            label: 'inactive parcel'\r\n          },\r\n          {\r\n            value: 3,\r\n            label: 'remainder parcel'\r\n          }\r\n        ]\r\n      },\r\n      slots: {\r\n        items: function(state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      type: 'tab-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.OBJECTID;\r\n        },\r\n        getTitle: function(item) {\r\n          return item.properties.MAPREG;\r\n        },\r\n        getAddress: function(item) {\r\n          var address = helpers.concatDorAddress(item);\r\n          return address;\r\n        },\r\n        // components for the content pane. this essentially a topic body.\r\n        components: [\r\n        //   {\r\n        //     type: 'table-group',\r\n        //     options: {\r\n        //       showBoth: {\r\n        //         mainTable: {\r\n        //           dataSource: null,\r\n        //           id:'dorData',\r\n        //         },\r\n        //         dependentTable: {\r\n        //           dataSource: 'condoList',\r\n        //           id: 'condoList_dor',\r\n        //         }\r\n        //       },\r\n        //       components: [\r\n\r\n          {\r\n            type: 'vertical-table',\r\n            options: {\r\n              nullValue: 'None',\r\n              // id: 'dorData',\r\n            },\r\n            slots: {\r\n              title: 'Parcel Details',\r\n              fields: [\r\n                {\r\n                  label: 'Map Registry #',\r\n                  value: function(state, item) {\r\n                    return item.properties.MAPREG;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Parcel Address',\r\n                  value: function(state, item) {\r\n                    return helpers.concatDorAddress(item);\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Status',\r\n                  value: function(state, item) {\r\n                    var status = item.properties.STATUS;\r\n                    var desc;\r\n                    switch(status) {\r\n                      case 1:\r\n                        desc = 'Active';\r\n                        break;\r\n                      case 2:\r\n                        desc = 'Inactive';\r\n                        break;\r\n                      case 3:\r\n                        desc = 'Remainder';\r\n                        break;\r\n                      default:\r\n                        break;\r\n                    }\r\n                    return desc;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Origination Date',\r\n                  value: function(state, item) {\r\n                    return item.properties.ORIG_DATE;\r\n                  },\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Inactive Date',\r\n                  value: function(state, item) {\r\n                    return item.properties.INACTDATE;\r\n                  },\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Has Air Rights',\r\n                  value: function(state, item) {\r\n                    var suffix = item.properties.SUFFIX;\r\n                    return suffix === 'A' ? 'Yes' : 'No';\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Is Condo',\r\n                  value: function(state, item) {\r\n                    if (!item.properties.CONDOFLAG) {\r\n                      return 'No';\r\n                    } else {\r\n                      return 'Yes';\r\n                    }\r\n                    // return item.properties.CONDOFLAG ? 'Yes' : 'No';\r\n                  },\r\n                  // fieldFunction: function(state, item) {\r\n                  //   console.log('state', state);\r\n                  // }\r\n                },\r\n                {\r\n                  label: 'Perimeter',\r\n                  value: function (state, item) {\r\n                    return (item.properties || {})['TURF_PERIMETER'];\r\n                  },\r\n                  transforms: [\r\n                    'integer',\r\n                    'prettyNumber',\r\n                    'feet',\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Area',\r\n                  value: function(state, item) {\r\n                    return (item.properties || {})['TURF_AREA'];\r\n                  },\r\n                  transforms: [\r\n                    'integer',\r\n                    'prettyNumber',\r\n                    'squareFeet',\r\n                  ]\r\n                },\r\n              ]\r\n            }  // end slots\r\n          },  // end vertical table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'dorCondoList',\r\n              defaultIncrement: 10,\r\n              showAllRowsOnFirstClick: true,\r\n              showOnlyIfData: true,\r\n              fields: [\r\n                {\r\n                  label: 'Condo Parcel',\r\n                  value: function(state, item) {\r\n                    return item.recmap + '-' + item.condoparcel;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Condo Name',\r\n                  value: function(state, item) {\r\n                    // return item.attributes.RECORDING_DATE;\r\n                    return item.condo_name;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Unit #',\r\n                  value: function(state, item) {\r\n                    return 'Unit #' + item.condounit;\r\n                  },\r\n                },\r\n                // {\r\n                //   label: 'Grantor',\r\n                //   value: function(state, item) {\r\n                //     return item.attributes.GRANTORS;\r\n                //   },\r\n                // },\r\n                // {\r\n                //   label: 'Grantee',\r\n                //   value: function(state, item) {\r\n                //     return item.attributes.GRANTEES;\r\n                //   },\r\n                // },\r\n              ], // end fields\r\n              sort: {\r\n                // this should return the val to sort on\r\n                getValue: function(item) {\r\n                  // return item.attributes.RECORDING_DATE;\r\n                  return item.condounit;\r\n                },\r\n                // asc or desc\r\n                order: 'asc'\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Deeded Condominiums',\r\n              items: function (state, item) {\r\n                var id = item.properties.OBJECTID;\r\n\r\n                if (state.sources.dorCondoList.targets[id]) {\r\n                  if (state.sources.dorCondoList.targets[id].data) {\r\n                    return state.sources.dorCondoList.targets[id].data.rows;\r\n                  }\r\n                } else {\r\n                  return [];\r\n                }\r\n              },\r\n            } // end slots\r\n          }, // end condos table\r\n\r\n          {\r\n            type: 'callout',\r\n            slots: {\r\n              text: 'You can access digital copies of the deeds \\\r\n                below by purchasing a subscription to \\\r\n                <a target=\"_blank\" href=\"http://epay.phila-records.com/phillyepay/web/\">PhilaDox <i class=\"fa fa-external-link\"></i></a></a>.\\\r\n                Please note that the following list\\\r\n                shows documents recorded from\\\r\n                December 1999 forward, and may not be a complete history\\\r\n                of title for the parcel.\\\r\n              '\r\n            },\r\n          },\r\n\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'dorDocuments',\r\n              defaultIncrement: 25,\r\n              fields: [\r\n                {\r\n                  label: 'ID',\r\n                  value: function (state, item) {\r\n                    // return \"<a target='_blank' href='//pdx-app01/recorder/eagleweb/viewDoc.jsp?node=DOCC\"+item.attributes.R_NUM+\"'>\"+item.attributes.R_NUM+\"<i class='fa fa-external-link'></i></a>\"\r\n                    // return item.document_id;\r\n                    return item.attributes.DOCUMENT_ID;\r\n                    // return item.attributes.R_NUM;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    // return item.attributes.RECORDING_DATE;\r\n                    // return item.display_date;\r\n                    return item.attributes.DISPLAY_DATE;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Type',\r\n                  value: function(state, item) {\r\n                    // return item.document_type;\r\n                    return item.attributes.DOCUMENT_TYPE;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Grantor',\r\n                  value: function(state, item) {\r\n                    // return item.grantors;\r\n                    return item.attributes.GRANTORS;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Grantee',\r\n                  value: function(state, item) {\r\n                    // return item.grantees;\r\n                    return item.attributes.GRANTEES;\r\n                  },\r\n                },\r\n              ], // end fields\r\n              sort: {\r\n                // this should return the val to sort on\r\n                getValue: function(item) {\r\n                  // return item.attributes.RECORDING_DATE;\r\n                  // console.log('dor docs sort function running, display_date:', Date.parse(item.display_date));\r\n                  return item.attributes.DISPLAY_DATE;\r\n                  // return Date.parse(item.display_date);\r\n                },\r\n                // asc or desc\r\n                order: 'desc'\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Documents',\r\n              // defaultIncrement: 25,\r\n              items: function(state, item) {\r\n                var id = item.properties.OBJECTID;\r\n                if (state.sources.dorDocuments.targets[id]) {\r\n                  return state.sources.dorDocuments.targets[id].data;\r\n                } else {\r\n                  return [];\r\n                }\r\n              },\r\n            } // end slots\r\n\r\n            // slots: {\r\n            //   title: 'Condominiums',\r\n            //   highestPageRetrieved: function(state) { return state.sources['condoList'].data.page },\r\n            //   pageCount: function(state) { return state.sources['condoList'].data.page_count },\r\n            //   totalSize: function(state) { return state.sources['condoList'].data.total_size },\r\n            //   items: function(state) {\r\n            //     var data = state.sources['condoList'].data.features;\r\n            //     var rows = data.map(function(row){\r\n            //       var itemRow = row;\r\n            //       return itemRow;\r\n            //     });\r\n            //     return rows;\r\n            //   },\r\n            // } // end slots\r\n\r\n          }, // end docs table\r\n        ] // end parcel tab content comps\r\n      }, // end parcel tab options\r\n      slots: {\r\n        items: function (state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      },\r\n    }, // end dor parcel tab group comp\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Use the buttons below to view images of hard-copy deed maps, some\\\r\n          of which have handwritten information that may be useful for\\\r\n          historical deed research.\\\r\n        ',\r\n      },\r\n    },\r\n    {\r\n      type: 'overlay-toggle-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.RECMAP;\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Registry Maps',\r\n        items: function(state) {\r\n          return state.sources.regmaps.data;\r\n        }\r\n      }\r\n    },\r\n    // {\r\n    //   type: 'callout',\r\n    //   slots: {\r\n    //     text: 'The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Source: Department of Records.'\r\n    //   }\r\n    // }\r\n  ], // end deeds comps\r\n  identifyFeature: 'dor-parcel',\r\n  parcels: 'dor',\r\n  imageOverlayGroup: 'regmaps',\r\n}\r\n","export default {\r\n  key: 'li',\r\n  icon: 'wrench',\r\n  label: 'Licenses & Inspections',\r\n  dataSources: [\r\n    'liPermits',\r\n    'liInspections',\r\n    'liViolations',\r\n    'liBusinessLicenses',\r\n    'zoningDocs'\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Licenses, inspections, permits, property maintenance \\\r\n          violations, and zoning permit documents at your search address. \\\r\n          Source: Department of Licenses & Inspections\\\r\n        '\r\n      }\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liPermits',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.permitissuedate\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=permits&eid=\"+item.permitnumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.permitnumber+\" <i class='fa fa-external-link'></i></a>\"\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.permitdescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.status\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.permitissuedate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older permits at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Permits',\r\n        items: function(state) {\r\n          var data = state.sources['liPermits'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            return itemRow;\r\n          });\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        topicKey: 'zoning',\r\n        id: 'zoningDocs',\r\n        // limit: 100,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.scan_date\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Permit Number',\r\n            value: function(state, item){\r\n              return item.permit_number\r\n            }\r\n          },\r\n          // {\r\n          //   label: 'Type',\r\n          //   value: function(state, item){\r\n          //     return item.doc_type\r\n          //   }\r\n          // },\r\n          {\r\n            label: '# Pages',\r\n            value: function(state, item){\r\n              return item.num_pages\r\n            }\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function (state, item) {\r\n              // console.log('zoning doc', item);\r\n\r\n              var appId = item.app_id;\r\n\r\n              if (appId.length < 3) {\r\n                appId = '0' + appId;\r\n              }\r\n\r\n              return '<a target=\"_blank\" href=\"//s3.amazonaws.com/lni-zoning-pdfs/'\r\n                      + item.doc_id\r\n                      + '.pdf\">'\r\n                      + item.doc_id\r\n                      + ' <i class=\"fa fa-external-link\"></i></a>'\r\n                      + '</a>'\r\n              // return item.appid + '-' + item.docid\r\n            }\r\n          },\r\n          // {\r\n          //   label: 'Link',\r\n          //   value: function(state, item){\r\n          //     // return \"<a href='//www.washingtonpost.com/'>View Scan</a>\"\r\n          //     return \"<a target='_blank' href='//www.phila.gov/zoningarchive/Preview.aspx?address=\" + item.address + \"&&docType=\" + item.doctype + \"&numofPages=\" + item.page_numbers + \"&docID=\" + item.docid + \"&app=\" + item.appid +\"'>View Scan <i class='fa fa-external-link'></i></a>\"\r\n          //   }\r\n          // },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.scan_date;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Zoning Permit Documents',\r\n        subtitle: 'formerly \"Zoning Archive\"',\r\n        items: function(state) {\r\n          if (state.sources['zoningDocs'].data) {\r\n            if (state.sources['zoningDocs'].data.rows) {\r\n              var data = state.sources['zoningDocs'].data.rows;\r\n              var rows = data.map(function(row){\r\n                var itemRow = row;\r\n                // var itemRow = Object.assign({}, row);\r\n                //itemRow.DISTANCE = 'TODO';\r\n                return itemRow;\r\n              });\r\n              return rows;\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        topicKey: 'permits',\r\n        id: 'liInspections',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.inspectioncompleted\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              // return item.casenumber\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.inspectiondescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.inspectionstatus\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.inspectioncompleted;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            // return `See ${count} older inspections at L&I Property History`;\r\n            return 'See ' + count + ' older inspections at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Inspections',\r\n        items: function(state) {\r\n          var data = state.sources['liInspections'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liViolations',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.caseaddeddate\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              // return item.casenumber\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.violationdescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.status\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.caseaddeddate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older violations at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Violations',\r\n        items: function(state) {\r\n          var data = state.sources['liViolations'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liBusinessLicenses',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Issue Date',\r\n            value: function(state, item){\r\n              return item.initialissuedate\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'License Number',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=licenses&eid=\"+item.licensenum+\"&key=\"+item.street_address+\"&address=\"+item.street_address+\"'>\"+item.licensenum+\" <i class='fa fa-external-link'></i></a>\"\r\n              return item.licensenum\r\n            }\r\n          },\r\n          {\r\n            label: 'Name',\r\n            value: function(state, item){\r\n              return item.business_name\r\n            }\r\n          },\r\n          {\r\n            label: 'Type',\r\n            value: function(state, item){\r\n              return item.licensetype\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.licensestatus\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.caseaddeddate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older business licenses at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Business Licenses',\r\n        items: function(state) {\r\n          var data = state.sources['liBusinessLicenses'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  dynamicMapLayers: [\r\n    //'zoning'\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd'\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  key: 'zoning',\r\n  icon: 'university',\r\n  label: 'Zoning',\r\n  dataSources: [\r\n    'zoningOverlay',\r\n    'zoningBase',\r\n    'zoningAppeals',\r\n    'rco',\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Base district zoning maps, associated zoning overlays, and Registered Community Organizations applicable to your search address. Source: Department of Planning and Development'\r\n      }\r\n    },\r\n    {\r\n      type: 'collection-summary',\r\n      options: {\r\n        descriptor: 'parcel',\r\n        // this will include zero quantities\r\n        // includeZeroes: true,\r\n        getValue: function(item) {\r\n          return item.properties.STATUS;\r\n        },\r\n        context: {\r\n          singular: function(list){ return 'There is ' + list + ' at this address.'},\r\n          plural: function(list){ return 'There are ' + list + ' at this address.'}\r\n        },\r\n        types: [\r\n          {\r\n            value: 1,\r\n            label: 'active parcel'\r\n          },\r\n          {\r\n            value: 2,\r\n            label: 'inactive parcel'\r\n          },\r\n          {\r\n            value: 3,\r\n            label: 'remainder parcel'\r\n          }\r\n        ]\r\n      },\r\n      slots: {\r\n        items: function(state) {\r\n          return state.parcels.dor.data;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      type: 'tab-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.OBJECTID;\r\n        },\r\n        getTitle: function(item) {\r\n          return item.properties.MAPREG;\r\n        },\r\n        getAddress: function(item) {\r\n          var address = hf.concatDorAddress(item);\r\n          return address;\r\n        },\r\n        // components for the content pane. this essentially a topic body.\r\n        components: [\r\n          {\r\n            type: 'badge-custom',\r\n            options: {\r\n              titleBackground: '#58c04d',\r\n              components: [\r\n                {\r\n                  type: 'horizontal-table',\r\n                  options: {\r\n                    topicKey: 'zoning',\r\n                    shouldShowFilters: false,\r\n                    shouldShowHeaders: false,\r\n                    id: 'baseZoning',\r\n                    // defaultIncrement: 10,\r\n                    // showAllRowsOnFirstClick: true,\r\n                    // showOnlyIfData: true,\r\n                    fields: [\r\n                      {\r\n                        label: 'Code',\r\n                        value: function (state, item) {\r\n                          return item;\r\n                        },\r\n                        transforms: [\r\n                          'nowrap',\r\n                          'bold'\r\n                        ]\r\n                      },\r\n                      {\r\n                        label: 'Description',\r\n                        value: function (state, item) {\r\n                          return helpers.ZONING_CODE_MAP[item];\r\n                        },\r\n                      },\r\n                    ], // end fields\r\n                  },\r\n                  slots: {\r\n                    // title: 'Base Zoning',\r\n                    items(state, item) {\r\n                      // console.log('state.sources:', state.sources['zoningBase'].data.rows);\r\n                      const id = item.properties.OBJECTID;\r\n                      const target = state.sources.zoningBase.targets[id] || {};\r\n                      const { data={} } = target;\r\n                      const { rows=[] } = data;\r\n\r\n                      // get unique zoning codes\r\n                      const longCodes = rows.map(row => row.long_code);\r\n                      const longCodesUniqueSet = new Set(longCodes);\r\n                      const longCodesUnique = Array.from(longCodesUniqueSet);\r\n\r\n                      return longCodesUnique;\r\n                    },\r\n                  }, // end slots\r\n                }, // end table\r\n              ],\r\n            },\r\n            slots: {\r\n              title: 'Base District',\r\n            },\r\n          }, // end of badge-custom\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              topicKey: 'zoning',\r\n              id: 'zoningOverlay',\r\n              fields: [\r\n                {\r\n                  label: 'Name',\r\n                  value: function (state, item) {\r\n                    return item.overlay_name\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Code Section',\r\n                  value: function (state, item) {\r\n                    return \"<a target='_blank' href='\"+item.code_section_link+\"'>\"+item.code_section+\" <i class='fa fa-external-link'></i></a>\"\r\n                  }\r\n                },\r\n              ],\r\n            },\r\n            slots: {\r\n              title: 'Overlays',\r\n              items: function(state, item) {\r\n                var id = item.properties.OBJECTID,\r\n                    target = state.sources.zoningOverlay.targets[id] || {},\r\n                    data = target.data || {};\r\n                // console.log('zoningbase target:', target);\r\n                return data.rows || [];\r\n              },\r\n            },\r\n          },\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              topicKey: 'zoning',\r\n              // shouldShowFilters: false,\r\n              id: 'baseZoning',\r\n              // defaultIncrement: 10,\r\n              // showAllRowsOnFirstClick: true,\r\n              // showOnlyIfData: true,\r\n              fields: [\r\n                {\r\n                  label: 'Bill Type',\r\n                  value: function (state, item) {\r\n                    return item.billType;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Current Zoning',\r\n                  value: function(state, item) {\r\n                    return item.currentZoning;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Pending Bill',\r\n                  value: function (state, item) {\r\n                    return `<a target=\"_blank\" href=\"${item.pendingbillurl}\">${item.pendingbill} <i class=\"fa fa-external-link\"></i></a>`;\r\n                  }\r\n                },\r\n              ], // end fields\r\n            },\r\n            slots: {\r\n              title: 'Pending Bills',\r\n              items: function(state, item) {\r\n                // console.log('state.sources:', state.sources['zoningBase'].data.rows);\r\n                var id = item.properties.OBJECTID,\r\n                    target = state.sources.zoningBase.targets[id] || {},\r\n                    data = target.data || {};\r\n\r\n                // include only rows where pending is true\r\n                const { rows=[] } = data;\r\n                const rowsFiltered = rows.filter(row => row.pending === 'Yes');\r\n\r\n                // give each pending zoning bill a type of \"zoning\"\r\n                const rowsFilteredWithType = rowsFiltered.map((row) => {\r\n                  row.billType = 'Base District';\r\n                  row.currentZoning = row.long_code;\r\n                  return row;\r\n                });\r\n\r\n                let overlayRowsFilteredWithType = [];\r\n\r\n                // append pending overlays\r\n                if (state.sources.zoningOverlay.targets[id]) {\r\n                  const overlayRows = state.sources.zoningOverlay.targets[id].data.rows;\r\n                  const overlayRowsFiltered = overlayRows.filter(row => row.pending === 'Yes');\r\n                  overlayRowsFilteredWithType = overlayRowsFiltered.map((row) => {\r\n                    row.billType = 'Overlay';\r\n                    row.currentZoning = row.overlay_name;\r\n                    return row;\r\n                  });\r\n                } else {\r\n                  overlayRowsFilteredWithType = [];\r\n                }\r\n\r\n                // combine pending zoning and overlays\r\n                const zoningAndOverlays = rowsFilteredWithType.concat(overlayRowsFilteredWithType);\r\n\r\n                return zoningAndOverlays;\r\n              },\r\n            }, // end slots\r\n          }, // end table\r\n        ], // end of tab-group components\r\n      },\r\n      slots: {\r\n        items: function (state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'zoningAppeals',\r\n        fields: [\r\n          {\r\n            label: 'Processed Date',\r\n            value: function(state, item) {\r\n              return item.processeddate;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              //return item.appeal_key\r\n              // return \"<a target='_blank' href='//li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=appeals&eid=\"+item.appeal_key+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.appealno+\"<i class='fa fa-external-link'></i></a>\"\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.appealgrounds;\r\n            }\r\n          },\r\n          {\r\n            label: 'Scheduled Date',\r\n            value: function(state, item) {\r\n              return item.date_scheduled;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              // return item.properties.CODE_SECTION\r\n              return item.decision\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.date_scheduled;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n      },\r\n      slots: {\r\n        title : 'Appeals',\r\n        items: function(state) {\r\n          if (state.sources['zoningAppeals'].data) {\r\n            if (state.sources['zoningAppeals'].data.rows) {\r\n              var data = state.sources['zoningAppeals'].data.rows;\r\n              var rows = data.map(function(row){\r\n                var itemRow = row;\r\n                // var itemRow = Object.assign({}, row);\r\n                //itemRow.DISTANCE = 'TODO';\r\n                return itemRow;\r\n              });\r\n              return rows;\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Looking for zoning documents? They are now located in the Licenses & Inspections tab under \"Zoning Permit Documents\".',\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'rco',\r\n        fields: [\r\n          {\r\n            label: 'RCO',\r\n            value: function(state, item) {\r\n              return '<b>' + item.properties.ORGANIZATION_NAME + '</b><br>'\r\n              + item.properties.ORGANIZATION_ADDRESS\r\n            },\r\n          },\r\n          {\r\n            label: 'Meeting Address',\r\n            value: function(state, item) {\r\n              return item.properties.MEETING_LOCATION_ADDRESS\r\n            }\r\n          },\r\n          {\r\n            label: 'Primary Contact',\r\n            value: function(state, item) {\r\n              // return item.properties.PRIMARY_PHONE\r\n              return item.properties.PRIMARY_NAME + '<br>'\r\n              + item.properties.PRIMARY_PHONE + '<br>'\r\n              // + `<b><a :href=\"'mailto:' + item.properties.PRIMARY_EMAIL\">`\r\n              + item.properties.PRIMARY_EMAIL// + '</a></b>'\r\n            },\r\n            transforms: [\r\n              'rcoPrimaryContact'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Preferred Method',\r\n            value: function(state, item){\r\n              return item.properties.PREFFERED_CONTACT_METHOD\r\n            }\r\n          },\r\n        ],\r\n        externalLink: {\r\n          forceShow: true,\r\n          action: function() {\r\n            return 'See a list of all RCOs in the city [PDF]';\r\n          },\r\n          name: '',\r\n          href: function(state) {\r\n            // var address = state.geocode.data.properties.street_address;\r\n            // var addressEncoded = encodeURIComponent(address);\r\n            return '//www.phila.gov/CityPlanning/projectreviews/RCO%20Related/List_of_RCOs.pdf';\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Registered Community Organizations',\r\n        items: function(state) {\r\n          if (state.sources['rco'].data) {\r\n            var data = state.sources['rco'].data;\r\n            var rows = data.map(function(row){\r\n              var itemRow = row;\r\n              // var itemRow = Object.assign({}, row);\r\n              return itemRow;\r\n            });\r\n            return rows;\r\n          }\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  dynamicMapLayers: [\r\n    'zoning'\r\n  ],\r\n  identifyFeature: 'dor-parcel',\r\n  parcels: 'dor'\r\n}\r\n","export default {\r\n  key: 'nearby',\r\n  icon: 'map-marker-alt',\r\n  label: 'Nearby',\r\n  dataSources: ['threeOneOneCarto', 'crimeIncidents', 'nearbyZoningAppeals'],\r\n  // dataSources: ['311Carto', 'crimeIncidents', 'nearbyZoningAppeals', 'vacantIndicatorsPoints'],\r\n  // dataSources: ['vacantLand', 'vacantBuilding', '311Carto', 'crimeIncidents', 'nearbyZoningAppeals'],\r\n  // featureLayers: [\r\n  //   'vacantLand',\r\n  //   'vacantBuilding'\r\n  // ],\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd',\r\n  // TODO implement this\r\n  // computed: {\r\n  //   label(state) {\r\n  //     var land = state.sources.vacantLand.data\r\n  //     var building = state.sources.vacantBuilding.data\r\n  //     if (land.length === 0 && building.length === 0) {\r\n  //       return 'Not Likely Vacant';\r\n  //     } else if (land.length > 0) {\r\n  //       return 'Likely Vacant Land';\r\n  //     } else if (building.length > 0) {\r\n  //       return 'Likely Vacant Building';\r\n  //     }\r\n  //   }\r\n  // },\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          See recent activity near your search address including 311 \\\r\n          service requests, crimes, zoning appeals, and more. Hover over a\\\r\n          record below to highlight it on the map.\\\r\n        '\r\n      }\r\n    },\r\n    // {\r\n    //   type: 'badge',\r\n    //   options: {\r\n    //     titleBackground: function(state) {\r\n    //       var text = getVacancyText(state);\r\n    //       if (text.includes('Land')) {\r\n    //         return 'orange';\r\n    //       } else if (text.includes('Building')) {\r\n    //         return 'purple';\r\n    //       } else {\r\n    //         return '#58c04d';\r\n    //       }\r\n    //     }\r\n    //   },\r\n    //   slots: {\r\n    //     title: 'Vacancy',\r\n    //     value: function(state) {\r\n    //       return getVacancyText(state);\r\n    //     },\r\n    //     // description: function(state) {\r\n    //     //   var code = state.geocode.data.properties.zoning;\r\n    //     //   return ZONING_CODE_MAP[code];\r\n    //     // },\r\n    //   }\r\n    // },\r\n    {\r\n      type: 'horizontal-table-group',\r\n      options: {\r\n        filters: [\r\n          {\r\n            type: 'data',\r\n            getValue: function(item) {\r\n              return item;\r\n            },\r\n            label: 'What nearby activity would you like to see?',\r\n            values: [\r\n              {\r\n                label: '311 Requests',\r\n                value: '311',\r\n              },\r\n              {\r\n                label: 'Crime Incidents',\r\n                value: 'crimeIncidents',\r\n              },\r\n              {\r\n                label: 'Zoning Appeals',\r\n                value: 'nearbyZoningAppeals',\r\n              },\r\n              {\r\n                label: 'Vacant Properties',\r\n                value: 'vacantIndicatorsPoints',\r\n              }\r\n            ]\r\n          },\r\n        ],\r\n        // components for the content pane.\r\n        tables: [\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: '311',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.requested_datetime;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                }\r\n              },\r\n              filters: [\r\n                {\r\n                  type: 'time',\r\n                  getValue: function(item) {\r\n                    return item.requested_datetime;\r\n                  },\r\n                  label: 'From the last',\r\n                  values: [\r\n                    {\r\n                      label: '30 days',\r\n                      value: '30',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: '90 days',\r\n                      value: '90',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: 'year',\r\n                      value: '1',\r\n                      unit: 'years',\r\n                      direction: 'subtract',\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              filterByText: {\r\n                label: 'Filter by text',\r\n                fields: [\r\n                  'service_name',\r\n                  'address'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#ff3f3f',\r\n                  color: '#ff0000',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#ff0000',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.requested_datetime;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Address',\r\n                  value: function(state, item) {\r\n                    return item.address;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Subject',\r\n                  value: function(state, item) {\r\n                    if (item.media_url) {\r\n                      return '<a target=\"_blank\" href='+item.media_url+'>'+item.service_name+'</a>';\r\n                    } else {\r\n                      return item.service_name;\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Nearby Service Requests',\r\n              data: 'threeOneOneCarto',\r\n              items: function(state) {\r\n                var data = state.sources['threeOneOneCarto'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            }\r\n          },\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'crimeIncidents',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.dispatch_date;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                },\r\n              },\r\n              filters: [\r\n                {\r\n                  type: 'time',\r\n                  getValue: function(item) {\r\n                    return item.dispatch_date;\r\n                  },\r\n                  label: 'From the last',\r\n                  values: [\r\n                    {\r\n                      label: '30 days',\r\n                      value: '30',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: '90 days',\r\n                      value: '90',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                  ]\r\n                }\r\n              ],\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'text_general_code',\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#6674df',\r\n                  color: '#6674df',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#6674df',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.dispatch_date;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Location',\r\n                  value: function(state, item) {\r\n                    return item.location_block;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Description',\r\n                  value: function(state, item) {\r\n                    return item.text_general_code;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Crime Incidents',\r\n              data: 'crimeIncidents',\r\n              items: function(state) {\r\n                var data = state.sources['crimeIncidents'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'nearbyZoningAppeals',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.decisiondate;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                },\r\n              },\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'appealgrounds'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#009900',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.decisiondate;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Location',\r\n                  value: function(state, item) {\r\n                    return item.address;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Description',\r\n                  value: function(state, item) {\r\n                    return item.appealgrounds;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Zoning Appeals',\r\n              data: 'nearbyZoningAppeals',\r\n              items: function(state) {\r\n                var data = state.sources['nearbyZoningAppeals'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'vacantIndicatorsPoints',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'type',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'type' || !sortField) {\r\n                    val = item.properties.VACANT_FLAG;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item._distance;\r\n                  }\r\n                  return val;\r\n                }\r\n              },\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'ADDRESS',\r\n                  'VACANT_FLAG'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#9400c6',\r\n                  color: '#9400c6',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Address',\r\n                  value: function(state, item) {\r\n                    return item.properties.ADDRESS;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Property Type',\r\n                  value: function(state, item) {\r\n                    return item.properties.VACANT_FLAG;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return item._distance + ' ft';\r\n                  }\r\n                },\r\n              ],\r\n              externalLink: {\r\n                forceShow: true,\r\n                action: function(count) {\r\n                  return 'See more at Vacancy Property Viewer';\r\n                },\r\n                name: 'Vacancy Property Viewer',\r\n                href: function(state) {\r\n                  // var address = state.geocode.data.properties.street_address;\r\n                  // var addressEncoded = encodeURIComponent(address);\r\n                  return '//phl.maps.arcgis.com/apps/webappviewer/index.html?id=64ac160773d04952bc17ad895cc00680';\r\n                }\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Likely Vacant Properties',\r\n              data: 'vacantIndicatorsPoints',\r\n              items: function(state) {\r\n                var data = state.sources['vacantIndicatorsPoints'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n        ], // end comps\r\n      }, // end options\r\n      slots: {\r\n        // REVIEW should this go in options? maybe not, since it should be\r\n        // reactive.\r\n        items: function(state) {\r\n          // return state.pwdParcel;\r\n          return state.parcel.pwd\r\n        }\r\n      },\r\n    }\r\n  ]\r\n}\r\n","import transforms from '../general/transforms';\r\nimport moment from 'moment';\r\nconst phone = transforms.phoneNumber.transform;\r\nconst titleCase = transforms.titleCase.transform;\r\nconst nth = transforms.nth.transform;\r\n\r\nexport default {\r\n  key: 'voting',\r\n  icon: 'gavel',\r\n  label: 'Voting',\r\n  dataSources: ['divisions', 'pollingPlaces', 'electedOfficials', 'nextElectionAPI'],\r\n  errorMessage: function() {\r\n    return ' ';\r\n  },\r\n  components: [\r\n    {\r\n      type: 'badge',\r\n      options: {\r\n        titleBackground: '#2176d2',\r\n        externalLink: {\r\n          data: 'Preview ballot',\r\n          // action: function(state){return 'Preview ballot'},\r\n          href: function(state) {\r\n            // var address = state.geocode.data.properties.street_address;\r\n            // var addressEncoded = encodeURIComponent(address);\r\n            return 'https://files.philadelphiavotes.com/ballot_paper/' + state.sources.electedOfficials.data.rows[0].ballot_file_id + '.pdf';\r\n          },\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Next Eligible Election Is',\r\n        value: function(state) {\r\n          return moment(state.sources.nextElectionAPI.data.election_date).format('dddd, LL');\r\n        },\r\n      }, // end slots\r\n    }, // end of badge\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          The deadline to register for the next election \\\r\n          is 30 days prior to the election. \\\r\n          You can confirm your registration and learn about \\\r\n          registering to vote<a target=\"_blank\" \\\r\n          href=\"//www.philadelphiavotes.com/en/voters/registering-to-vote\"> \\\r\n          here</a>.\\\r\n        ',\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      options: {\r\n        nullValue: 'None',\r\n        externalLink: {\r\n          action: function() {\r\n            return 'Learn about your voting options if you cannot vote in person on Election Day';\r\n          },\r\n          href: function(state) {\r\n            return 'https://www.philadelphiavotes.com/en/voters/absentee-and-alternative-ballots';\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Polling Place',\r\n        fields: [\r\n          {\r\n            label: 'Location',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n                   return \"<b>Ward \" + pollingData.WARD +\r\n                   \", Division \" + pollingData.DIVISION + \"</b><br>\" +\r\n                   titleCase(pollingData.PLACENAME) + \"<br>\" +\r\n                   titleCase(pollingData.STREET_ADDRESS) + \"<br>\\\r\n                   All locations are open on Election Day <br>from 7am to 8pm.\";\r\n                  },\r\n          },\r\n          {\r\n            label: 'Accessibility',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n              const answer = pollingData.ACCESSIBILITY_CODE== \"F\" ? 'Building Fully Accessible' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"B\" ? 'Building Substantially Accessible' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"M\" ? 'Building Accessibility Modified' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"A\" ? 'Alternate Entrance' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"R\" ? 'Building Accessible With Ramp' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"N\" ? 'Building Not Accessible' :\r\n                            'Information not available';\r\n              return '<a href=\"//www.philadelphiavotes.com/en/voters/polling-place-accessibility\"\\\r\n                      target=\"_blank\">'+answer+'</a>';\r\n            },\r\n          },\r\n          {\r\n            label: 'Parking',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n              const parking = pollingData.PARKING_CODE == \"N\" ? 'No Parking' :\r\n                              pollingData.PARKING_CODE == \"G\" ? 'General Parking' :\r\n                              pollingData.PARKING_CODE == \"L\" ? 'Loading Zone' :\r\n                              'Information not available';\r\n              return parking;\r\n            },\r\n          },\r\n        ]\r\n      },\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      options: {\r\n        nullValue: 'None',\r\n        externalLink: {\r\n          action: function() {\r\n            return 'See all citywide, state, and federal representatives';\r\n          },\r\n          href: function(state) {\r\n            return '//www.philadelphiavotes.com/en/voters/elected-officials';\r\n          }\r\n        }\r\n      },\r\n\r\n      slots: {\r\n        title: 'Elected Representatives',\r\n        fields: [\r\n          {\r\n            label: 'District Council Member',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return '<a href=\"http://' + council[0].website + '\" target=\"_blank\">' +\r\n                council[0].first_name +\" \" +council[0].last_name + \" - \" + nth(state.geocode.data.properties.council_district_2016) + \" Council District </a>\";\r\n            },\r\n          },\r\n          {\r\n            label: 'City Hall Office',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return council[0].main_contact_address_2 + '<br>' +\r\n                     phone(council[0].main_contact_phone_1) + \", \" + phone(council[0].main_contact_phone_2) + '<br>\\\r\n                      F: '+ phone(council[0].main_contact_fax) + ' <br>\\\r\n                      <b><a href=mailto:\"' + council[0].email + '\">' + council[0].email + '</a></b>';\r\n            },\r\n          },\r\n          {\r\n            label: 'Current Term',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return council[0].next_election - 4 + ' - ' + council[0].next_election\r\n            },\r\n          },\r\n        ]\r\n      },\r\n    }, // end table\r\n  ],\r\n  zoomToShape: ['geojsonForTopic', 'markersForTopic'],\r\n  geojsonForTopic: {\r\n    data: function(state) {\r\n      return state.sources.divisions.data\r\n    },\r\n    key: 'id',\r\n    style: {\r\n      fillColor: '#9e9ac8',\r\n      color: '#9e9ac8',\r\n      weight: 2,\r\n      opacity: 1,\r\n      fillOpacity: 0.3\r\n    }\r\n  },\r\n  markersForTopic: {\r\n    data: function(state) {\r\n      return state.sources.pollingPlaces.data\r\n    },\r\n    lat: 'LAT',\r\n    lng: 'LON',\r\n    key: 'STREET_ADDRESS',\r\n    color: '#54278f',\r\n    icon: {\r\n      prefix: 'fas',\r\n      icon: 'landmark',\r\n      shadow: false,\r\n      size: 35,\r\n    }\r\n  },\r\n  basemap: 'pwd',\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd'\r\n}\r\n","/*\r\n   _____   __  .__\r\n  /  _  \\_/  |_|  | _____    ______\r\n /  /_\\  \\   __\\  | \\__  \\  /  ___/\r\n/    |    \\  | |  |__/ __ \\_\\___ \\\r\n\\____|__  /__| |____(____  /____  >\r\n        \\/               \\/     \\/\r\n*/\r\n\r\n\r\n// import * as Sentry from '@sentry/browser';\r\n// Sentry.init({ dsn: 'https://276ef359f45543ff91b7db449d3035f8@sentry.io/1330874' });\r\n\r\n// Font Awesome Icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome } from '@fortawesome/pro-solid-svg-icons/faHome';\r\nimport { faBook } from '@fortawesome/pro-solid-svg-icons/faBook';\r\nimport { faWrench } from '@fortawesome/pro-solid-svg-icons/faWrench';\r\nimport { faUniversity } from '@fortawesome/pro-solid-svg-icons/faUniversity';\r\nimport { faGavel } from '@fortawesome/pro-solid-svg-icons/faGavel';\r\nimport { faMapMarkerAlt } from '@fortawesome/pro-solid-svg-icons/faMapMarkerAlt';\r\nimport { faLandmark } from '@fortawesome/pro-solid-svg-icons/faLandmark';\r\nimport { faBuilding } from '@fortawesome/pro-solid-svg-icons/faBuilding';\r\nlibrary.add(faHome, faBook, faWrench, faUniversity, faGavel, faMapMarkerAlt, faLandmark, faBuilding);\r\n\r\nimport accounting from 'accounting';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport mapboard from '@cityofphiladelphia/mapboard';\r\n\r\n// General Config Modules\r\nimport helpers from './util/helpers';\r\nimport map from './general/map';\r\nimport transforms from './general/transforms';\r\nimport parcels from './general/parcels';\r\nimport legendControls from './general/legendControls';\r\nimport imageOverlayGroups from './general/imageOverlayGroups';\r\nimport greeting from './general/greeting';\r\n\r\n// data sources\r\nimport threeOneOneCarto from './data-sources/311-carto';\r\nimport condoList from './data-sources/condo-list';\r\nimport crimeIncidents from './data-sources/crime-incidents';\r\nimport divisions from './data-sources/divisions';\r\nimport dorCondoList from './data-sources/dor-condo-list';\r\nimport dorDocuments from './data-sources/dor-documents';\r\nimport electedOfficials from './data-sources/elected-officials'\r\nimport liBusinessLicenses from './data-sources/li-business-licenses';\r\nimport liInspections from './data-sources/li-inspections';\r\nimport liPermits from './data-sources/li-permits';\r\nimport liViolations from './data-sources/li-violations';\r\nimport nearbyZoningAppeals from './data-sources/nearby-zoning-appeals';\r\nimport nextElectionAPI from './data-sources/election-next';\r\nimport opa from './data-sources/opa';\r\nimport pollingPlaces from './data-sources/polling-places';\r\nimport rco from './data-sources/rco';\r\nimport regmaps from './data-sources/regmaps';\r\nimport vacantIndicatorsPoints from './data-sources/vacant-indicator-points';\r\nimport zoningAppeals from './data-sources/zoning-appeals';\r\nimport zoningBase from './data-sources/zoning-base';\r\nimport zoningDocs from './data-sources/zoning-docs';\r\nimport zoningOverlay from './data-sources/zoning-overlay';\r\n// import charterSchools from './data-sources/charter-schools';\r\n// import neighboringProperties from './data-sources/neighboring-properties';\r\n\r\n// Topics\r\nimport property from './topics/property';\r\nimport condos from './topics/condos';\r\nimport deeds from './topics/deeds';\r\nimport li from './topics/li';\r\nimport zoning from './topics/zoning';\r\n// import polling from './topics/polling';\r\n// import rcoTopic from './topics/rco';\r\nimport nearby from './topics/nearby';\r\nimport voting from './topics/voting';\r\n\r\n// styles\r\n// TODO move all styles here (that have a npm package)\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-easybutton/src/easy-button.css';\r\nimport 'leaflet-measure/dist/leaflet-measure.css';\r\n// REVIEW not sure why the hard path is necessary for vector icon\r\n// REVIEW the vector icons seem to be working without this - why?\r\n// import '../node_modules/@cityofphiladelphia/mapboard/node_modules/leaflet-vector-icon/dist/leaflet-vector-icon.css';\r\n\r\n// turn off console logging in production\r\n// TODO come up with better way of doing this with webpack + env vars\r\nconst { hostname='' } = location;\r\nif (hostname !== 'localhost' && !hostname.match(/(\\d+\\.){3}\\d+/)) {\r\n  console.log = console.info = console.debug = console.error = function () {};\r\n}\r\n\r\nvar BASE_CONFIG_URL = 'https://cdn.jsdelivr.net/gh/ajrothwell/mapboard-base-config@d18a86feb27b7e7c4496ed422ce30b5d80e64c1b/config.js';\r\n\r\n// configure accounting.js\r\naccounting.settings.currency.precision = 0;\r\n\r\nmapboard({\r\n  // DEV\r\n  // defaultAddress: '1234 MARKET ST',\r\n  // plugin: true,\r\n  panels: [\r\n    'topics',\r\n    'map'\r\n  ],\r\n  router: {\r\n    enabled: true\r\n  },\r\n  defaultAddressTextPlaceholder: {\r\n    // text: \"Search Address or 9-digit OPA Property Number\",\r\n    wideStyle: {\r\n      'max-width': '100%',\r\n      'font-size': '24px',\r\n      'line-height': '28px'\r\n    },\r\n    narrowStyle: {\r\n      'max-width': '100%',\r\n      'font-size': '20px',\r\n      'line-height': '24px'\r\n    }\r\n  },\r\n  geolocation: {\r\n    enabled: true\r\n  },\r\n  addressInput: {\r\n    width: 415,\r\n    mapWidth: 300,\r\n    position: 'right',\r\n    autocompleteEnabled: false,\r\n    autocompleteMax: 15,\r\n    placeholder: 'Search the map',\r\n  },\r\n  rootStyle: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  gatekeeperKey: helpers.GATEKEEPER_KEY,\r\n  map,\r\n  baseConfig: BASE_CONFIG_URL,\r\n  parcels,\r\n  imageOverlayGroups,\r\n  legendControls,\r\n  cyclomedia: {\r\n    enabled: true,\r\n    measurementAllowed: false,\r\n    popoutAble: true,\r\n  },\r\n  pictometry: {\r\n    enabled: true,\r\n  },\r\n  transforms,\r\n  greeting,\r\n  dataSources: {\r\n    threeOneOneCarto,\r\n    condoList,\r\n    crimeIncidents,\r\n    divisions,\r\n    dorCondoList,\r\n    dorDocuments,\r\n    electedOfficials,\r\n    liBusinessLicenses,\r\n    liInspections,\r\n    liPermits,\r\n    liViolations,\r\n    nearbyZoningAppeals,\r\n    nextElectionAPI,\r\n    opa,\r\n    pollingPlaces,\r\n    rco,\r\n    regmaps,\r\n    vacantIndicatorsPoints,\r\n    zoningAppeals,\r\n    zoningBase,\r\n    zoningDocs,\r\n    zoningOverlay,\r\n    // charterSchools,\r\n    // neighboringProperties,\r\n  },\r\n  topics: [\r\n    property,\r\n    condos,\r\n    deeds,\r\n    li,\r\n    zoning,\r\n    // polling,\r\n    // rcoTopic,\r\n    voting,\r\n    nearby,\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'topic-set',\r\n      options: {\r\n        defaultTopic: 'property'\r\n      }\r\n    },\r\n  ],\r\n});\r\n","var map = {\n\t\"./en-au\": 121,\n\t\"./en-au.js\": 121,\n\t\"./en-ca\": 120,\n\t\"./en-ca.js\": 120,\n\t\"./en-gb\": 119,\n\t\"./en-gb.js\": 119,\n\t\"./en-ie\": 118,\n\t\"./en-ie.js\": 118,\n\t\"./en-il\": 117,\n\t\"./en-il.js\": 117,\n\t\"./en-nz\": 116,\n\t\"./en-nz.js\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 353;","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".greeting > h2 {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.greeting > .callout {\\r\\n  border-color: #58c04d;\\r\\n  background: #fff;\\r\\n  /*margin: 0 0 1rem 0;*/\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n.greeting > .callout > ul {\\r\\n  margin: 0 0 0 1.42857rem;\\r\\n  padding: 0 0 0 1.42857rem;\\r\\n}\\r\\n\\r\\n#application .site-header, #application .app-footer {\\r\\n\\tbackground: #2176d2;\\r\\n}\\r\\n\\r\\n#application .site-header .page-title-container h1 {\\r\\n\\tfont-size: 2.14286rem;\\r\\n}\\r\\n\\r\\n/*this fixes an issue with the topic panel scrolling over the footer padding*/\\r\\n#application .app-footer {\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\n/*small*/\\r\\n@media screen and (max-width: 39.9375em) {\\r\\n\\t.logo {\\r\\n\\t\\tfloat: left;\\r\\n\\t}\\r\\n\\r\\n\\t.page-title-container {\\r\\n\\t\\tfloat: right;\\r\\n\\t}\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export default {\r\n  // possibly should move to base config\r\n  defaultBasemap: 'pwd',\r\n  defaultIdentifyFeature: 'address-marker',\r\n  imagery: {\r\n    enabled: true\r\n  },\r\n  initialImagery: 'imagery2018',\r\n}\r\n","export default {\r\n  pwd: {\r\n    multipleAllowed: false,\r\n    geocodeFailAttemptParcel: null,\r\n    clearStateOnError: false,\r\n    wipeOutOtherParcelsOnReverseGeocodeOnly: true,\r\n    geocodeField: 'PARCELID',\r\n    parcelIdInGeocoder: 'pwd_parcel_id',\r\n    getByLatLngIfIdFails: false\r\n  },\r\n  dor: {\r\n    multipleAllowed: true,\r\n    geocodeFailAttemptParcel: 'pwd',\r\n    clearStateOnError: true,\r\n    wipeOutOtherParcelsOnReverseGeocodeOnly: false,\r\n    geocodeField: 'MAPREG',\r\n    parcelIdInGeocoder: 'dor_parcel_id',\r\n    getByLatLngIfIdFails: true\r\n  }\r\n}\r\n","export default {\r\n  regmaps: {\r\n    items: function(state) {\r\n      // console.log('main.js imageOverlayGroups', state)\r\n      return state.sources.regmaps.data;\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  water: {\r\n    options: {\r\n      topics: ['water'],\r\n      showWithBaseMapOnly: false\r\n    },\r\n    // TODO give these an id instead of using the label as a key\r\n    data: {\r\n      'Roof': {\r\n        'background-color': '#FEFF7F',\r\n      },\r\n      'Other Impervious Surface': {\r\n        'background-color': '#F2DCFF',\r\n      }\r\n    }\r\n  },\r\n  deeds: {\r\n    options: {\r\n      topics: ['deeds', 'zoning'],\r\n      showWithBaseMapOnly: true\r\n    },\r\n    data: {\r\n      // TODO give these an id instead of using the label as a key\r\n      'Easements': {\r\n        'border-color': 'rgb(255, 0, 197)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      },\r\n      'Trans Parcels': {\r\n        'border-color': 'rgb(0, 168, 132)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      },\r\n      'Rights of Way': {\r\n        'border-color': 'rgb(249, 147, 0)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"index.html\";","export default {\r\n  message: '\\\r\n    <h2>Atlas is your front door to the City of Philadelphia.</h2>\\\r\n    <p>Here are some things you can do with Atlas:</p>\\\r\n    <div class=\"callout\">\\\r\n      <ul>\\\r\n        <li>Get the history of permits, licenses, and inspections at any address</li>\\\r\n        <li>Research real estate information including property values, zoning, and document archives</li>\\\r\n        <li>Get easy access to a variety of hard-to-find City resources</li>\\\r\n        <li>View recent activity around your address, such as crimes, 311 service requests, and more</li>\\\r\n        <li>Explore historical imagery and maps</li>\\\r\n      </ul>\\\r\n    </div>\\\r\n    <p>To get started, click anywhere on the map, or type an address, intersection, property assessment account number, or Department of Records Map Registry number into the search box.</p>\\\r\n  ',\r\n}\r\n","export default {\r\n  id: 'divisions',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Political_Divisions/FeatureServer/0',\r\n  type: 'esri',\r\n  options: {\r\n    relationship: 'contains',\r\n  },\r\n  success(data) {\r\n    return data;\r\n  },\r\n};\r\n","export default {\r\n  id: 'dorCondoList',\r\n  type: 'http-get',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state){\r\n        return \"select * from condominium where mapref = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'\\\r\n                                          and status in (1,3)\"\r\n      },\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liBusinessLicenses',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      // q: function(feature){ return \"select * from li_business_licenses where street_address = '\" + feature.properties.street_address + \"'\"},// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n      q: function(feature){ return \"select * from li_business_licenses where eclipse_addressobjectid = '\" + feature.properties.eclipse_location_id + \"'\"},// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liInspections',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_case_inspections where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liPermits',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_permits where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liViolations',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_violations where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'nearbyZoningAppeals',\r\n  type: 'http-get-nearby',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    table: 'li_appeals',\r\n    dateMinNum: 1,\r\n    dateMinType: 'year',\r\n    dateField: 'decisiondate',\r\n  }\r\n}\r\n","export default {\r\n  id: 'nextElectionAPI',\r\n  type: 'http-get',\r\n  url: 'https://apis.philadelphiavotes.com/election',\r\n  options: {\r\n  },\r\n  success: function(data) {\r\n    return data;\r\n  }\r\n}\r\n","export default {\r\n  id: 'opa',\r\n  type: 'http-get',\r\n  url: 'https://data.phila.gov/resource/w7rb-qrn8.json',\r\n  options: {\r\n    params: {\r\n      parcel_number: function(feature) { return feature.properties.opa_account_num; }\r\n    },\r\n    success: function(data) {\r\n      return data[0];\r\n    }\r\n  }\r\n}\r\n","export default {\r\nid: 'pollingPlaces',\r\n type: 'http-get',\r\n url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/POLLING_PLACES/FeatureServer/0/query',\r\n options: {\r\n   params: {\r\n     where: function(feature) {\r\n       return \"PRECINCT = '\" + feature.properties.election_precinct + \"'\";\r\n     },\r\n     outFields: \"WARD, DIVISION, PRECINCT, PLACENAME,\\\r\n                 STREET_ADDRESS, ZIP_CODE, ACCESSIBILITY_CODE, PARKING_CODE,\\\r\n                 LAT, LON\",\r\n     returnDistinctValues: 'true',\r\n     returnGeometry: 'false',\r\n     f: 'json'\r\n   },\r\n   success: function(data) {\r\n     // console.log('polling-places.js success, data:', data);\r\n     if (data.features[0]) {\r\n       return data.features[0].attributes;\r\n     } else {\r\n       return null;\r\n     }\r\n   },\r\n }\r\n}\r\n","export default {\r\n  id: 'rco',\r\n  type: 'esri',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Zoning_RCO/FeatureServer/0',\r\n  options: {\r\n    relationship: 'contains',\r\n  },\r\n  // success(data) {\r\n  //   // format phone numbers\r\n  //   console.log('rco success', data);\r\n  //\r\n  //   var s2 = (\"\"+s).replace(/\\D/g, '');\r\n  //   var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n  //   return (!m) ? null : \"(\" + m[1] + \") \" + m[2] + \"-\" + m[3];\r\n  //\r\n  //   return data;\r\n  // }\r\n}\r\n","export default {\r\n  id: 'zoningBase',\r\n  type: 'http-get',\r\n  dependent: 'parcel',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state) {\r\n        // console.log('feature:', feature, 'state.parcels.dor:', state.parcels.dor, 'state.parcels.dor.data[0]', state.parcels.dor.data[0]);\r\n        // var stmt = \"with all_zoning as (select * from zoning_basedistricts),\"\r\n        //          + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.MAPREG + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'),\"\r\n        //          + \"zp as (select all_zoning.* from all_zoning, parcel where st_intersects(parcel.the_geom, all_zoning.the_geom)),\"\r\n        //          // + \"select zp.source_object_id, zp.value, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as geom from zp, parcel\";\r\n        //          + \"total as (select zp.objectid, zp.long_code, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as overlap_area from zp, parcel)\"\r\n        //          + \"select * from total where overlap_area >= 0.01\"\r\n        //          // + \"select * from zp\";\r\n        var mapreg = feature.properties.MAPREG,\r\n            stmt = \"\\\r\n              WITH all_zoning AS \\\r\n                ( \\\r\n                  SELECT * \\\r\n                  FROM   phl.zoning_basedistricts \\\r\n                ), \\\r\n              parcel AS \\\r\n                ( \\\r\n                  SELECT * \\\r\n                  FROM   phl.dor_parcel \\\r\n                  WHERE  dor_parcel.mapreg = '\" + mapreg + \"' \\\r\n                ), \\\r\n              zp AS \\\r\n                ( \\\r\n                  SELECT all_zoning.* \\\r\n                  FROM   all_zoning, parcel \\\r\n                  WHERE  St_intersects(parcel.the_geom, all_zoning.the_geom) \\\r\n                ), \\\r\n              combine AS \\\r\n                ( \\\r\n                  SELECT zp.objectid, \\\r\n                  zp.long_code, \\\r\n                  zp.pending, \\\r\n                  zp.pendingbill, \\\r\n                  zp.pendingbillurl, \\\r\n                  St_area(St_intersection(zp.the_geom, parcel.the_geom)) / St_area(parcel.the_geom) AS overlap_area \\\r\n                  FROM zp, parcel \\\r\n                ), \\\r\n              total AS \\\r\n                ( \\\r\n                  SELECT long_code, pending, pendingbill, pendingbillurl, sum(overlap_area) as sum_overlap_area \\\r\n                  FROM combine \\\r\n                  GROUP BY long_code, pending, pendingbill, pendingbillurl \\\r\n                ) \\\r\n              SELECT * \\\r\n              FROM total \\\r\n              WHERE sum_overlap_area >= 0.01 \\\r\n            \";\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'zoningOverlay',\r\n  type: 'http-get',\r\n  dependent: 'parcel',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state) {\r\n        // var stmt = \"with all_zoning as (select * from zoning_overlays),\"\r\n        //          + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.dor_parcel_id + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.MAPREG + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'),\"\r\n        //          + \"zp as (select all_zoning.* from all_zoning, parcel where st_intersects(parcel.the_geom, all_zoning.the_geom)),\"\r\n        //          + \"total as (select zp.*, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as overlap_area from zp, parcel)\"\r\n        //          + \"select * from total where overlap_area >= 0.01\"\r\n        var mapreg = feature.properties.MAPREG,\r\n            stmt = \"\\\r\n            WITH all_zoning AS \\\r\n              ( \\\r\n                SELECT * \\\r\n                FROM   phl.zoning_overlays \\\r\n              ), \\\r\n            parcel AS \\\r\n              ( \\\r\n                SELECT * \\\r\n                FROM   phl.dor_parcel \\\r\n                WHERE  dor_parcel.mapreg = '\" + mapreg + \"' \\\r\n              ), \\\r\n            zp AS \\\r\n              ( \\\r\n                SELECT all_zoning.* \\\r\n                FROM all_zoning, parcel \\\r\n                WHERE st_intersects(parcel.the_geom, all_zoning.the_geom) \\\r\n              ), \\\r\n            total AS \\\r\n              ( \\\r\n                SELECT zp.*, st_area(St_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) AS overlap_area \\\r\n                FROM   zp, parcel \\\r\n              ) \\\r\n            SELECT cartodb_id, \\\r\n                  code_section, \\\r\n                  code_section_link, \\\r\n                  objectid, \\\r\n                  overlap_area, \\\r\n                  overlay_name, \\\r\n                  overlay_symbol, \\\r\n                  pending, \\\r\n                  pendingbill, \\\r\n                  pendingbillurl, \\\r\n                  sunset_date, \\\r\n                  type \\\r\n            FROM total \\\r\n            WHERE overlap_area >= 0.01 \\\r\n          \";\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  key: 'property',\r\n  icon: 'home',\r\n  label: 'Property Assessments',\r\n  // REVIEW can these be calculated from vue deps?\r\n  dataSources: ['opa'],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Property assessment and sale information for this address. Source: Office of Property Assessments (OPA). OPA was formerly a part of the Bureau of Revision of Taxes (BRT) and some City records may still use that name.\\\r\n        '\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      slots: {\r\n        fields: [\r\n          {\r\n            label: 'OPA Account #',\r\n            value: function(state) {\r\n              return state.geocode.data.properties.opa_account_num;\r\n            }\r\n          },\r\n          {\r\n            label: 'OPA Address',\r\n            value: function(state) {\r\n              return state.geocode.data.properties.opa_address;\r\n            }\r\n          },\r\n          {\r\n            label: 'Owners',\r\n            value: function(state) {\r\n              var owners = state.geocode.data.properties.opa_owners;\r\n              var ownersJoined = owners.join(', ');\r\n              return ownersJoined;\r\n            }\r\n          },\r\n          {\r\n            label: 'Assessed Value',// + new Date().getFullYear(),\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.market_value;\r\n              var result;\r\n              if (data) {\r\n                result = data.market_value;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'currency'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Sale Date',\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.sale_date;\r\n              var result;\r\n              if (data) {\r\n                result = data.sale_date;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Sale Price',\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.sale_price;\r\n              var result;\r\n              if (data) {\r\n                result = data.sale_price;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'currency'\r\n            ]\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        id: 'opaData',\r\n        // requiredSources: ['opa'],\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See more';\r\n          },\r\n          name: 'Property Search',\r\n          href: function(state) {\r\n            var id = state.geocode.data.properties.opa_account_num;\r\n            return 'http://property.phila.gov/?p=' + id;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //     ]\r\n    //   }\r\n    // }\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  // we might not need this anymore, now that we have identifyFeature\r\n  parcels: 'pwd',\r\n  errorMessage: function (state) {\r\n    var data = state.sources.condoList.data;\r\n        // features = data.features;\r\n\r\n    if (data) {\r\n      var numCondos = data.total_size;\r\n\r\n      if (numCondos > 0) {\r\n        var shouldPluralize = numCondos > 1,\r\n            isOrAre = shouldPluralize ? 'are' : 'is',\r\n            unitOrUnits = shouldPluralize ? 'units' : 'unit',\r\n            message = [\r\n              '<h3>',\r\n              'There ',\r\n              isOrAre,\r\n              // ' <strong>',\r\n              ' ',\r\n              numCondos,\r\n              ' condominium ',\r\n              unitOrUnits,\r\n              // '</strong> at this address.</h3>',\r\n              ' at this address.</h3>',\r\n              // ' at this address. ',\r\n              '<p>You can use the Condominiums tab below to see information for an individual unit.</p>'\r\n              // 'Please select a unit from the Condominiums tab below.'\r\n            ].join('');\r\n\r\n        return message;\r\n      }\r\n    } else {\r\n      return 'There is no property assessment record for this address.';\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  key: 'condos',\r\n  icon: 'building',\r\n  label: 'Condominiums',\r\n  dataSources: ['condoList'],\r\n  // showTopicBasedOnOtherData takes precedence over showTopicOnlyIfDataExists\r\n  showTopicBasedOnOtherData: {\r\n    'otherData': {\r\n      'opa': {\r\n        data: undefined\r\n      }\r\n    },\r\n    'requiredData': {\r\n      'condoList': {\r\n        pathToDataArray: ['features'],\r\n        minDataLength: 1,\r\n      }\r\n    }\r\n  },\r\n  // showTopicOnlyIfDataExists can be overruled by showTopicBasedOnOtherData\r\n  showTopicOnlyIfDataExists: {\r\n    'condoList': {\r\n      pathToDataArray: ['features'],\r\n      minDataLength: 2,\r\n    }\r\n  },\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Condominium units at your search address, as recorded for property assessment purposes. Click one of the addresses below to see information for that unit.  Use the back button to return to this list. Source: Office of Property Assessment'\r\n      }\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'condoList',\r\n        useApiCount: true,\r\n        defaultIncrement: 25,\r\n        fields: [\r\n          {\r\n            label: 'Address',\r\n            value: function (state, item) {\r\n              var address = item.properties.street_address;\r\n              return '<a href=\"#/' + address + '/property\">' + address + '</a>';\r\n            },\r\n          },\r\n          {\r\n            label: 'OPA Account #',\r\n            value: function (state, item) {\r\n              return item.properties.opa_account_num;\r\n            },\r\n          },\r\n        ], // end fields\r\n        // sort: {\r\n        //   // this should return the val to sort on\r\n        //   getValue: function(item) {\r\n        //     // return item.attributes.RECORDING_DATE;\r\n        //     return item.attributes.DOCUMENT_DATE;\r\n        //   },\r\n        //   // asc or desc\r\n        //   order: 'desc'\r\n        // }\r\n      },\r\n      slots: {\r\n        title: 'Condominiums',\r\n        highestPageRetrieved: function(state) { return state.sources['condoList'].data.page },\r\n        pageCount: function(state) { return state.sources['condoList'].data.page_count },\r\n        totalSize: function(state) { return state.sources['condoList'].data.total_size },\r\n        items: function(state) {\r\n          var data = state.sources['condoList'].data.features;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            return itemRow;\r\n          });\r\n          return rows;\r\n        },\r\n      } // end slots\r\n    },\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  // we might not need this anymore, now that we have identifyFeature\r\n  parcels: 'pwd'\r\n}\r\n"],"sourceRoot":""}