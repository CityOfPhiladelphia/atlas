{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/helpers.js","webpack:///./src/general/transforms.js","webpack:///./src/data-sources/condo-list.js","webpack:///./src/data-sources/crime-incidents.js","webpack:///./src/data-sources/dor-documents.js","webpack:///./src/data-sources/elected-officials.js","webpack:///./src/data-sources/regmaps.js","webpack:///./src/data-sources/vacant-indicator-points.js","webpack:///./src/data-sources/zoning-appeals.js","webpack:///./src/topics/deeds.js","webpack:///./src/topics/li.js","webpack:///./src/topics/zoning.js","webpack:///./src/topics/nearby.js","webpack:///./src/topics/historic.js","webpack:///./src/topics/voting.js","webpack:///./src/main.js","webpack:///../node_modules/rollup-plugin-node-builtins/src/es6/punycode.js","webpack:///./src/general/map.js","webpack:///./src/general/parcels.js","webpack:///./src/general/imageOverlayGroups.js","webpack:///./src/general/legendControls.js","webpack:///./src/general/greeting.js","webpack:///./src/data-sources/divisions.js","webpack:///./src/data-sources/dor-condo-list.js","webpack:///./src/data-sources/historic.js","webpack:///./src/data-sources/li-inspections.js","webpack:///./src/data-sources/li-permits.js","webpack:///./src/data-sources/historic-nearby.js","webpack:///./src/data-sources/historic-legal-cards.js","webpack:///./src/data-sources/historic-streets.js","webpack:///./src/data-sources/li-business-licenses.js","webpack:///./src/data-sources/li-violations.js","webpack:///./src/data-sources/nearby-zoning-appeals.js","webpack:///./src/data-sources/neigh-conservation.js","webpack:///./src/data-sources/election-next.js","webpack:///./src/data-sources/opa.js","webpack:///./src/data-sources/polling-places.js","webpack:///./src/data-sources/rco.js","webpack:///./src/data-sources/zoning-base.js","webpack:///./src/data-sources/zoning-overlay.js","webpack:///./src/topics/property.js","webpack:///./src/topics/condos.js","webpack:///../node_modules/buffer-es6/base64.js","webpack:///../node_modules/buffer-es6/ieee754.js","webpack:///../node_modules/buffer-es6/index.js","webpack:///../node_modules/rollup-plugin-node-builtins/src/es6/qs.js","webpack:///../node_modules/process-es6/browser.js","webpack:///../node_modules/rollup-plugin-node-builtins/src/es6/util.js","webpack:///../node_modules/buffer-es6/isArray.js","webpack:///../node_modules/rollup-plugin-node-builtins/src/es6/url.js","webpack:///../src/controller/router.js","webpack:///../node_modules/@turf/helpers/main.es.js","webpack:///../node_modules/@turf/distance/main.es.js","webpack:///../node_modules/@turf/meta/main.es.js","webpack:///../node_modules/@turf/invariant/main.es.js","webpack:///../src/controller/clients/base-client.js","webpack:///../node_modules/@turf/area/main.es.js","webpack:///../src/controller/clients/geocode-client.js","webpack:///../src/controller/clients/owner-search-client.js","webpack:///../src/controller/clients/http-client.js","webpack:///../node_modules/@turf/clone/main.es.js","webpack:///../node_modules/@turf/explode/main.es.js","webpack:///../src/controller/clients/esri-client.js","webpack:///../node_modules/@turf/nearest-point/main.es.js","webpack:///../src/controller/data-manager.js","webpack:///../src/controller/controller.js","webpack:///../src/controller/store.js","webpack:///../src/controller/index.js","webpack:///./node_modules/moment/locale sync en","webpack:///./public/styles.css","webpack:///./public/styles.css?7705","webpack:///./public/index.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","helpers","GATEKEEPER_KEY","ZONING_CODE_MAP","RSD-1","RSD-2","RSD-3","RSA-1","RSA-2","RSA-3","RSA-4","RSA-5","RTA-1","RM-1","RM-2","RM-3","RM-4","RMX-1","RMX-2","RMX-3","CA-1","CA-2","CMX-1","CMX-2","CMX-2.5","CMX-3","CMX-4","CMX-5","I-1","I-2","I-3","IP","ICMX","IRMX","SPENT","SPAIR","SPINS","SPSTA","SPPOA","SP-PO-A","SPPOP","cleanDorAttribute","attr","cleanAttr","String","replace","indexOf","concatDorAddress","parcel","includeUnit","props","properties","addressLow","this","HOUSE","addressHigh","STEX","addressSuffix","SUF","address","unit","UNIT","comps","map","streetField","concat","filter","Boolean","join","getVacancyText","state","land","sources","vacantLand","building","vacantBuilding","accounting","settings","currency","precision","transforms","bold","transform","booleanToYesNo","thousandsPlace","match","globals","formatMoney","date","moment","format","dayofweek","feet","getNearest","field","distName","min","Math","item","integer","isNaN","parseInt","nowrap","nth","phoneNumber","prettyNumber","toLocaleString","rcoPrimaryContact","exec","std","orig","squareFeet","titleCase","str","toLowerCase","split","word","charAt","toUpperCase","urlFormatter","txt","expStr","RegExp","condo_list","success","type","url","options","feature","street_address","gatekeeperKey","include_units","table","dateMinType","dateField","dor_documents","where","targets","parcels","dor","getTargetId","parcelBaseAddress","target","OBJECTID","params","address_high","geocode","street_predir","address_low","address_low_frac","unitNum","address_low_suffix","unitNum2","street_postdir","unit_num","returnDistinctValues","BASEREG","outFields","q","regmaps","id","deps","coordPair","relationship","targetGeometry","y","Leaflet","xVals","yVals","geometry","coordinates","forEach","coordPairs","coordsAreDefined","isArray","innerCoordPair","x","bounds","yMin","yMax","max","distances","xMin","xMax","every","coord","latLngBounds","showTopicBasedOnOtherData","otherData","undefined","requiredData","getValue","pathToDataArray","minDataLength","plural","condoList","label","slots","items","fields","getKey","opa_account_num","title","highestPageRetrieved","page","pageCount","page_count","totalSize","total_size","features","row","identifyFeature","deeds","icon","dataSources","components","desc","descriptor","STATUS","context","list","types","getTitle","MAPREG","sort","order","ORIG_DATE","defaultIncrement","INACTDATE","attributes","DOCUMENT_ID","SUFFIX","showAllRowsOnFirstClick","recmap","condoparcel","condo_name","condounit","dorCondoList","rows","imageOverlayGroup","DOCUMENT_TYPE","permitissuedate","nullValue","GRANTORS","GRANTEES","status","DISPLAY_DATE","action","dorDocuments","count","num_pages","RECMAP","app_id","li","key","limit","topicKey","permitnumber","addresskey","permitdescription","href","externalLink","encodeURIComponent","addressEncoded","itemRow","scan_date","permit_number","appId","doc_id","inspectioncompleted","casenumber","licensenum","inspectiondescription","business_name","inspectionstatus","caseaddeddate","violationdescription","text","singular","getAddress","initialissuedate","titleBackground","shouldShowFilters","shouldShowHeaders","licensetype","longCodesUnique","zoning","hf","currentZoning","zoningOverlay","overlayRowsFiltered","overlayRowsFilteredWithType","zoningAndOverlays","rowsFilteredWithType","_target$data","zoningBase","_data$rows","longCodes","long_code","longCodesUniqueSet","Set","from","date_scheduled","code_section_link","code_section","billType","pendingbillurl","pendingbill","_data$rows2","pending","forceShow","overlay_name","dynamicMapLayers","processeddate","appeal_key","appealno","appealgrounds","decision","filters","ORGANIZATION_NAME","ORGANIZATION_ADDRESS","values","MEETING_LOCATION_ADDRESS","PRIMARY_NAME","PRIMARY_PHONE","PRIMARY_EMAIL","tables","PREFFERED_CONTACT_METHOD","select","sortFields","val","sortField","nearby","direction","weight","opacity","fillOpacity","distance","requested_datetime","filterByText","mapOverlay","marker","radius","fillColor","color","hoverStyle","location_block","text_general_code","media_url","service_name","dispatch_date","style","_distance","ADDRESS","decisiondate","VACANT_FLAG","histDesignated","estimated","year_built_estimate","pwd","historic_titleCase","topics_historic","IDESIGDATE1","IDESIGDATE2","DDESIGDATE","opa","year_built","building_code_description","neighConservation","CODE_SECTION_LINK","historicStreets","ON_STREET","PRIMARYROA","histLegalCards","LINK","pollingPlaces","pollingData","answer","ACCESSIBILITY_CODE","LOC","imagery","markersForTopic","lng","voting","prefix","shadow","size","errorMessage","WARD","DIVISION","voting_titleCase","PLACENAME","STREET_ADDRESS","PARKING_CODE","location","BASE_CONFIG_URL","electedOfficials","mapboard","office_label","council","main_contact_address_2","voting_phone","main_contact_phone_1","main_contact_phone_2","main_contact_fax","email","wideStyle","next_election","zoomToShape","geojsonForTopic","geolocation","enabled","divisions","addressInput","width","mapWidth","position","autocompleteEnabled","autocompleteMax","placeholder","bottom","left","lat","baseConfig","imageOverlayGroups","legendControls","cyclomedia","basemap","pictometry","greeting","index_es","add","faHome","faBook","faWrench","faUniversity","faGavel","faMapMarkerAlt","faLandmark","faBuilding","faScrollOld","main_location$hostname","hostname","mapboard_default","line-height","narrowStyle","font-size","right","defaultBasemap","defaultIdentifyFeature","initialImagery","multipleAllowed","geocodeFailAttemptParcel","clearStateOnError","wipeOutOtherParcelsOnReverseGeocodeOnly","geocodeField","parcelIdInGeocoder","getByLatLngIfIdFails","water","topics","showWithBaseMapOnly","Roof","background-color","Other Impervious Surface","Easements","border-color","border-style","border-weight","height","Trans Parcels","Rights of Way","popoutAble","message","urlAddition","election_precinct","eclipse_location_id","geometryServerUrl","calculateDistance","seg_id","returnGeometry","f","liInspections","li_address_key","toString","liPermits","liViolations","nearbyZoningAppeals","parcel_number","BRT_ID","zoningAppeals","stmt","addressKey","dependent","zoningDocs","numCondos","opa_address","opa_owners","market_value","useApiCount","sale_date","shouldPluralize","defaultTopic","factory","axios","base","tMax","skew","damp","initialBias","initialN","delimiter","invalid-input","baseMinusTMin","tMin","floor","stringFromCharCode","fromCharCode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","toASCII","input","string","fn","parts","array","regexSeparators","encoded","mapDomain","regexNonASCII","test","handledCPCount","bias","L","t","currentValue","inputLength","handledCPCountPlusOne","baseMinusT","qMinusT","output","extra","counter","charCodeAt","ucs2decode","basicLength","maxInt","error","encode","global$1","global","self","lookup","revLookup","Arr","Uint8Array","Array","init","inited","code","len","fromByteArray","uint8","tmp","extraBytes","len2","encodeChunk","eMax","eLen","eBias","nBits","isLE","nBytes","buffer","offset","e","mLen","NaN","Infinity","pow","log","LN2","rt","arr","kMaxLength","createBuffer","that","RangeError","Buffer","arg","encodingOrOffset","TYPED_ARRAY_SUPPORT","Error","allocUnsafe","TypeError","ArrayBuffer","byteLength","byteOffset","encoding","isEncoding","actual","write","obj","checked","copy","fromArrayLike","fromObject","assertSize","internalIsBuffer","b","isView","loweredCase","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read$$1","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","asciiWrite","blitBuffer","asciiToBytes","base64Write","units","hi","lo","byteArray","utf16leToBytes","base64Slice","start","end","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","codePoint","bytesPerSequence","firstByte","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","poolSize","__proto__","alloc","fill","_isBuffer","isFastBuffer","readFloatLE","isSlowBuffer","a","pos","swap32","swap","hexSlice","asciiSlice","utf16leSlice","arguments","compare","thisStart","thisEnd","read","targetCopy","thisCopy","base64.fromByteArray","isFinite","latin1Write","ucs2Write","toJSON","_arr","ret","latin1Slice","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","writeFloat","noAssert","checkIEEE754","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","ieee754.read","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt32LE","readInt32BE","readFloatBE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","ieee754.write","sub","writeInt8","writeInt16LE","writeInt16BE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleBE","writeDouble","targetStart","set","utf8ToBytes","INVALID_BASE64_RE","leadSurrogate","b64","placeHolders","L$$1","trim","dst","src","constructor","isBuffer","setTimeout","clearTimeout","performance","hasOwnProperty$1","prop","stringifyPrimitive","v","xs","objectKeys","keys","parse","qs","sep","eq","regexp","maxKeys","kstr","idx","vstr","decodeURIComponent","Url","slashes","auth","port","hash","simplePathPattern","unwise","autoEscape","hostEndingChars","hostnameMaxLen","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","http","gopher","https:","gopher:","file:","urlParse","parseQueryString","slashesDenoteHost","u","format$1","protocol","pathname","host","query","isObject","map$1","ks","isArray$2","stringify","search","slashedProtocol","parseHost","portPattern","isString","queryIndex","splitter","uSplit","rest","simplePath","path","hec","proto","protocolPattern","lowerProto","atSign","hostEnd","nonHostChars","ipv6Hostname","hostparts","part","hostnamePartPattern","qsStringify","newpart","validParts","notHost","bit","unshift","h","ae","esc","qm","resolve","relative","resolveObject","rel","tkeys","tkey","tk","rkey","rkeys","rk","relPath","authInHost","isSourceAbs","mustEndAbs","isRelAbs","removeAllDots","srcPath","pop","psychotic","hasTrailingSlash","last","up","parseUrl","isAbsolute","isNull","Router","opts","config","store","controller","dataManager","silent","router","onhashchange","hashChanged","activeTopicConfig","topic","makeHash","getAddressFromState","geocodeData","pathComps","addressComp","routeToModal","resetGeocode","nextTopic","nextAddress","modals","routeToAddress","searchCategory","prevAddress","routeToOwner","nextOwner","configForBasemap","selectedModal","commit","routeToTopic","prevTopic","activeTopic","nextImagery","nextHash","lastHistoryState","history","replaceState","didGeocode","pushState","nextHistoryState","factors","metres","millimeters","earthRadius","millimetres","centimeters","centimetres","isObject$1","bbox","feat","isNumber$1","ring","num","validateId","getCoord","to","coordinates1","coordinates2","dLat","degreesToRadians","dLon","lat2","sin","cos","lat1","radians","factor","geojson","isFeatureCollection","isFeature","stop","coords","callback","coordIndex","featureIndex","multiFeatureIndex","geometryIndex","geomType","wrapShrink","geometry$$1","geometries","coordEach","excludeWrapCoord","geomReduce","initialValue","previousValue","g","stopG","geometryMaybeCollection","featureBBox","isGeometryCollection","featureProperties","featureId","currentGeometry","let","geom","area","polygonArea","calculateArea","RADIUS","abs","ringArea","const","lowerIndex","middleIndex","coordsLength","upperIndex","p1","p2","rad","_","PI","ref","valOrGetter","BaseClient","topicId","_featureId","stateData","setSourceStatusOpts","setSourceDataOpts","targetId","BaseClient$$1","GeocodeClient","fetch","geocodeConfig","then","catch","response","assignFeatureIds","relatedFeature","relatedFeatures","ownerSearchConfig","ownerSearch","OwnerSearchClient","console","subHours","error$1","HttpClient","create","dataSource","dataSourceKey","targetIdFn","points","successFn","this$1","didFetchData","didFetchMoreData","dateMinNum","distQuery","subFn","dateFns","subMonths","subYears","Date","featureEach","feature$$1","points$$1","point","fc","featureCollection","clone","cloneFeature","cloned","cloneProperties","cloneGeometry","exclude","EsriClient","objectWithoutProperties","parameters","sourceField","fetchBySpatialQuery","fetchNearby","dataSourceUrl","proj4","inSR","outSR","bufferSR","unionResults","bufferUrl","xyCoords","rings","xyCoord","reverse","esriLeaflet","reduce","acc","optionsKey","optionsVal","featureCollection$$1","calculateDistancePt","featureCoords","vertices","explode","polygon","targetPoint","pt","distanceToPoint","minDist","nearest","dist","closestVertex","distFeet","DataManager","clients","clientOpts","fetchMoreData","setSecondarySourceStatusOpts","secondaryStatus","nextPage","dataSourceKeys","entries","list$1","i$1","targetsDef","targetsFn","targetIds","targetIdStr","stateTargetIdsStr","includes","geocodeObj","esri","fetchData","resetData","parcelLayer","activeParcel","activeAddress","activeMapreg","pathKeys","L.latLng","pathKey","checkDataSourcesFetched","targetObj","isReady","parcelId","warn","featuresWithIds","evaluateParams","paramEntries","configForOtherParcelLayer","category","didTryGeocode","didOwnerSearch","latlng","activeParcelLayer","lastSearchMethod","configForActiveParcelLayer","parcelLayers","otherParcelLayers","assign$1","latLng","clickCoords","configForParcelLayer","getParcelsByLatLng","otherParcelLayer","parcelIdInGeocoder$1","parcelId$1","turfPolygon","getParcelsById","featureLayers","parcelQuery","run","didGetParcels","contains","featuresSorted","sortDorParcelFeatures","featureSorted","areas","TURF_PERIMETER","turfPolygon$1","distances$1","getDistances","setParcelsInState","coords$1","i$2","list$2","otherMultipleAllowed","turfCoordinates","coordinate","payload","3","mapregA","mapregB","statusA","STATUS_PRIORITY","statusB","Controller","getMoreRecords","process","handleSearchFormSubmit","handleConfigurableInputSubmit","handleMapClick","keyCode","handleTopicHeaderClick","els","document","querySelectorAll","el","Vue","nextTick","scrollIntoView","goToDefaultAddress","createSources","createParcels","shouldShowAddressCandidateList","related","mutations","setSecondarySourceStatus","setSourceData","setSourceDataMore","allData","center","setMapZoom","zoom","setParcelData"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([598,1,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\r\n  GATEKEEPER_KEY: '82fe014b6575b8c38b44235580bc8b11',\r\n  ZONING_CODE_MAP: {\r\n    'RSD-1': 'Residential Single Family Detached-1',\r\n    'RSD-2': 'Residential Single Family Detached-2',\r\n    'RSD-3': 'Residential Single Family Detached-3',\r\n    'RSA-1': 'Residential Single Family Attached-1',\r\n    'RSA-2': 'Residential Single Family Attached-2',\r\n    'RSA-3': 'Residential Single Family Attached-3',\r\n    'RSA-4': 'Residential Single Family Attached-4',\r\n    'RSA-5': 'Residential Single Family Attached-5',\r\n    'RTA-1': 'Residential Two-Family Attached-1',\r\n    'RM-1': 'Residential Multi-Family-1',\r\n    'RM-2': 'Residential Multi-Family-2',\r\n    'RM-3': 'Residential Multi-Family-3',\r\n    'RM-4': 'Residential Multi-Family-4',\r\n    'RMX-1': 'Residential Mixed-Use-1',\r\n    'RMX-2': 'Residential Mixed-Use-2',\r\n    'RMX-3': 'Residential (Center City) Mixed-Use-3',\r\n    'CA-1': 'Auto-Oriented Commercial-1',\r\n    'CA-2': 'Auto-Oriented Commercial-2',\r\n    'CMX-1': 'Neighborhood Commercial Mixed-Use-1',\r\n    'CMX-2': 'Neighborhood Commercial Mixed-Use-2',\r\n    'CMX-2.5': 'Neighborhood Commercial Mixed-Use-2.5',\r\n    'CMX-3': 'Community Commercial Mixed-Use',\r\n    'CMX-4': 'Center City Commercial Mixed-Use',\r\n    'CMX-5': 'Center City Core Commercial Mixed-Use',\r\n    'I-1': 'Light Industrial',\r\n    'I-2': 'Medium Industrial',\r\n    'I-3': 'Heavy Industrial',\r\n    'IP': 'Port Industrial',\r\n    'ICMX': 'Industrial Commercial Mixed-Use',\r\n    'IRMX': 'Industrial Residential Mixed-Use',\r\n    'SPENT': 'Commercial Entertainment (Casinos)',\r\n    'SPAIR': 'Airport',\r\n    'SPINS': 'Institutional Development',\r\n    'SPSTA': 'Stadium',\r\n    'SPPOA': 'Recreation',\r\n    'SP-PO-A': 'Recreation',\r\n    'SPPOP': 'Recreation',\r\n  },\r\n\r\n  cleanDorAttribute(attr) {\r\n    // console.log('cleanDorAttribute is running with attr', attr);\r\n    // trim leading and trailing whitespace\r\n    var cleanAttr = attr ? String(attr) : '';\r\n    cleanAttr = cleanAttr.replace(/\\s+/g, '');\r\n\r\n    // return null for zeros and empty strings\r\n    // if (['', '0'].indexOf(cleanAttr) > -1) {\r\n    //   return null;\r\n    // }\r\n\r\n    // return empty for zeros and null\r\n    if ([null, '0'].indexOf(cleanAttr) > -1) {\r\n      return '';\r\n    }\r\n\r\n    // console.log('cleanDorAttribute cleanAttr result:', cleanAttr);\r\n    return cleanAttr;\r\n  },\r\n\r\n  // TODO put this in base config transforms\r\n  concatDorAddress(parcel, includeUnit) {\r\n    includeUnit = !!includeUnit;\r\n    var STREET_FIELDS = ['STDIR', 'STNAM', 'STDES', 'STDESSUF'];\r\n    var props = parcel.properties;\r\n\r\n    // handle house num\r\n    var addressLow = this.cleanDorAttribute(props.HOUSE);\r\n    var addressHigh = this.cleanDorAttribute(props.STEX);\r\n    // maybe should be props.SUF below (it said props.SUFFIX)\r\n    var addressSuffix = this.cleanDorAttribute(props.SUF);\r\n    var address = addressLow;\r\n    address = address + (addressHigh ? '-' + addressHigh : '');\r\n    address = address + (addressSuffix || '');\r\n\r\n    // handle unit\r\n    var unit = this.cleanDorAttribute(props.UNIT);\r\n    if (unit) unit = '# ' + unit;\r\n\r\n    // clean up attributes\r\n    var comps = STREET_FIELDS.map(function(streetField) {\r\n      return props[streetField];\r\n    });\r\n    comps = comps.map(this.cleanDorAttribute);\r\n        // TODO handle individual address comps (like mapping stex=2 => 1/2)\r\n        // addressLow = comps.HOUSE,\r\n        // addressHigh = comps.STEX,\r\n        // streetPredir = comps.STDIR,\r\n        // streetName = comps.STNAM,\r\n        // streetSuffix = comps.STDES,\r\n        // streetPostdir = comps.STDESSUF,\r\n\r\n    // add address to front\r\n    comps = [address].concat(comps);\r\n\r\n    // add unit to end\r\n    if (includeUnit) comps = comps.concat([unit]);\r\n\r\n    // remove nulls and concat\r\n    address = comps.filter(Boolean).join(' ');\r\n\r\n    // console.log('concatDorAddress address result:', address);\r\n    if (address === '') {\r\n      address = 'Parcel has no address';\r\n    }\r\n    return address;\r\n  },\r\n\r\n  getVacancyText(state) {\r\n    var land = state.sources.vacantLand.data\r\n    var building = state.sources.vacantBuilding.data\r\n    if (land.length === 0 && building.length === 0) {\r\n      return 'Not Likely Vacant'\r\n    } else if (land.length > 0) {\r\n      return 'Likely Vacant Land'\r\n    } else if (building.length > 0) {\r\n      return 'Likely Vacant Building'\r\n    }\r\n  }\r\n}\r\n","import accounting from 'accounting';\r\nimport moment from 'moment';\r\n\r\naccounting.settings.currency.precision = 0;\r\n\r\nexport default {\r\n  bold: {\r\n    transform: function (value) {\r\n      return '<strong>' + value + '</strong>';\r\n    },\r\n  },\r\n  booleanToYesNo: {\r\n    transform: function(value) {\r\n      return value ? 'Yes' : 'No';\r\n    }\r\n  },\r\n  thousandsPlace: {\r\n    transform: function(value) {\r\n      var number = String(value).match(/\\d+/)[0].replace(/(.)(?=(\\d{3})+$)/g,'$1,');\r\n      var label = String(value).replace(/[0-9]/g, '') || '';\r\n      return number + ' ' + label;\r\n    }\r\n  },\r\n  currency: {\r\n    // a list of global objects this transform depends on\r\n    globals: ['accounting'],\r\n    // this is the function that gets called to perform the transform\r\n    transform: function (value, globals) {\r\n      // var accounting = globals.accounting;\r\n      return accounting.formatMoney(value);\r\n    }\r\n  },\r\n  date: {\r\n    globals: ['moment'],\r\n    transform: function (value, globals) {\r\n      // var moment = globals.moment;\r\n      return moment(value).format('MM/DD/YYYY');\r\n    },\r\n  },\r\n  dayofweek: {\r\n    // a list of global objects this transform depends on\r\n    transform: function (value) {\r\n      switch(value) {\r\n        case \"FRI\":\r\n        value = \"Friday\";\r\n        break;\r\n        case \"SAT\":\r\n        value = \"Saturday\";\r\n        break;\r\n        case \"SUN\":\r\n        value = \"Sunday\";\r\n        break;\r\n        case \"MON\":\r\n        value = \"Monday\";\r\n        break;\r\n        case \"TUE\":\r\n        value = \"Tuesday\";\r\n        break;\r\n        case \"WED\":\r\n        value = \"Wednesday\";\r\n        break;\r\n        case \"THU\":\r\n        value = \"Thursday\";\r\n      };\r\n      return value\r\n    }\r\n  },\r\n  feet: {\r\n    transform: function (value) {\r\n      return value && value + ' ft';\r\n    },\r\n  },\r\n  getNearest: {\r\n    transform: function(state, field, distName) {\r\n      let min = Math.min.apply(null, state.sources[field].data.map(function(item) {return item[distName];}));\r\n      let result  = state.sources[field].data.filter(function(item){return item[distName] == min;} );\r\n      let nearest = result? result[0] : null;\r\n      return nearest\r\n    }\r\n  },\r\n  integer: {\r\n    transform: function (value) {\r\n      return !isNaN(value) && parseInt(value);\r\n    },\r\n  },\r\n  nowrap: {\r\n    transform: function (value) {\r\n      return '<span style=\"white-space: nowrap;\">' + value + '</span>';\r\n    },\r\n  },\r\n  nth: {\r\n     transform: function(n) {\r\n       return n + ([,'st','nd','rd'][n%100>>3^1&&n%10]||'th')\r\n     }\r\n  },\r\n  phoneNumber: {\r\n    transform: function (value) {\r\n      var s2 = (\"\"+value).replace(/\\D/g, '');\r\n      var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n      return (!m) ? null : \"(\" + m[1] + \") \" + m[2] + \"-\" + m[3];\r\n    }\r\n  },\r\n  prettyNumber: {\r\n    transform: function (value) {\r\n      return !isNaN(value) && value.toLocaleString();\r\n    },\r\n  },\r\n  rcoPrimaryContact: {\r\n    transform: function (value) {\r\n      var PHONE_NUMBER_PAT = /\\(?(\\d{3})\\)?( |-)?(\\d{3})(-| )?(\\d{4})/g;\r\n      var m = PHONE_NUMBER_PAT.exec(value);\r\n\r\n      // check for non-match\r\n      if (!m) {\r\n        return value;\r\n      }\r\n\r\n      // standardize phone number\r\n      var std = ['(', m[1], ') ', m[3], '-', m[5]].join('');\r\n      var orig = m[0]\r\n      var valueStd = value.replace(orig, std);\r\n\r\n      return valueStd;\r\n    }\r\n  },\r\n  squareFeet: {\r\n    transform: function (value) {\r\n      return value && value + ' sq ft';\r\n    },\r\n  },\r\n  titleCase: {\r\n    transform: function(str) {\r\n      str = str.toLowerCase().split(' ').map(function(word) {\r\n        return (word.charAt(0).toUpperCase() + word.slice(1));\r\n      });\r\n      return str.join(' ');\r\n    }\r\n  },\r\n  urlFormatter: {\r\n    transform: function(txt) {\r\n      var uselessWordsArray =\r\n        [\r\n          \"http//\", \"http://\", \"https://\", \"www.\", \"//\", \"//:\"\r\n        ];\r\n      var expStr = uselessWordsArray.join(\"|\");\r\n      return txt.replace(new RegExp(expStr, 'gi'), '');\r\n    }\r\n  },\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  id: 'condoList',\r\n  type: 'http-get',\r\n  url: '//api.phila.gov/ais/v1/search/',\r\n  options: {\r\n    params: {\r\n      urlAddition: function (feature) {\r\n        return feature.properties.street_address;\r\n      },\r\n      gatekeeperKey: helpers.GATEKEEPER_KEY,\r\n      include_units: true,\r\n      opa_only: true,\r\n      page: 1,\r\n    },\r\n    success: function(data) {\r\n      return data;\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'crimeIncidents',\r\n  type: 'http-get-nearby',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    table: 'incidents_part1_part2',\r\n    dateMinNum: 1,\r\n    dateMinType: 'year',\r\n    dateField: 'dispatch_date',\r\n  }\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  id: 'dorDocuments',\r\n  type: 'http-get',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  // url: '//gis.phila.gov/arcgis/rest/services/DOR/rtt_service/MapServer/0/query',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/ArcGIS/rest/services/RTT_SUMMARY/FeatureServer/0/query',\r\n  options: {\r\n    params: {\r\n      where: function(feature, state) {\r\n        // METHOD 1: via address\r\n        var parcelBaseAddress = helpers.concatDorAddress(feature);\r\n        var geocode = state.geocode.data.properties;\r\n\r\n        // REVIEW if the parcel has no address, we don't want to query\r\n        // WHERE ADDRESS = 'null' (doesn't make sense), so use this for now\r\n        if (!parcelBaseAddress || parcelBaseAddress === 'null'){\r\n          var where = \"MATCHED_REGMAP = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n        } else {\r\n          // TODO make these all camel case\r\n          var props = state.geocode.data.properties,\r\n              address_low = props.address_low,\r\n              address_floor = Math.floor(address_low / 100, 1) * 100,\r\n              address_remainder = address_low - address_floor,\r\n              addressHigh = props.address_high,\r\n              addressCeil = addressHigh || address_low;\r\n\r\n          // form where clause\r\n          var where = \"(((ADDRESS_LOW >= \" + address_low + \" AND ADDRESS_LOW <= \" + addressCeil + \")\"\r\n                    + \" OR (ADDRESS_LOW >= \" + address_floor + \" AND ADDRESS_LOW <= \" + addressCeil + \" AND ADDRESS_HIGH >= \" + address_remainder + \" ))\"\r\n                    + \" AND STREET_NAME = '\" + geocode.street_name\r\n                    + \"' AND STREET_SUFFIX = '\" + geocode.street_suffix\r\n                    + \"' AND (MOD(ADDRESS_LOW,2) = MOD( \" + address_low + \",2))\";\r\n\r\n\r\n\r\n          if (geocode.street_predir != '') {\r\n            where += \" AND STREET_PREDIR = '\" + geocode.street_predir + \"'\";\r\n          }\r\n\r\n          if (geocode.address_low_suffix != '') {\r\n            where += \" AND ADDRESS_LOW_SUFFIX = '\" + geocode.address_low_suffix + \"'\";\r\n          }\r\n\r\n          // this is hardcoded right now to handle DOR address suffixes that are actually fractions\r\n          if (geocode.address_low_frac === '1/2') {\r\n            where += \" AND ADDRESS_LOW_SUFFIX = '2'\" //+ geocode.address_low_frac + \"'\";\r\n          }\r\n\r\n          if (geocode.street_postdir != '') {\r\n            where += \" AND STREET_POSTDIR = '\" + geocode.street_postdir + \"'\";\r\n          }\r\n\r\n          // check for unit num\r\n          var unitNum = helpers.cleanDorAttribute(feature.properties.UNIT),\r\n              unitNum2 = geocode.unit_num;\r\n\r\n          if (unitNum) {\r\n            where += \" AND UNIT_NUM = '\" + unitNum + \"'\";\r\n          } else if (unitNum2 !== '') {\r\n            where += \" AND UNIT_NUM = '\" + unitNum2 + \"'\";\r\n          }\r\n\r\n          where += \") or MATCHED_REGMAP = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n          // where += \") or MATCHED_REGMAP like '%\" + state.parcels.dor.data[0].properties.BASEREG + \"%'\";\r\n          where += \" or REG_MAP_ID = '\" + state.parcels.dor.data[0].properties.BASEREG + \"'\";\r\n        }\r\n\r\n        return where;\r\n      },\r\n      outFields: \"DOCUMENT_ID, DISPLAY_DATE, DOCUMENT_TYPE, GRANTORS, GRANTEES\",\r\n      // outFields: \"R_NUM, DISPLAY_DATE, DOCUMENT_TYPE, GRANTORS, GRANTEES\",\r\n      returnDistinctValues: 'true',\r\n      returnGeometry: 'false',\r\n      f: 'json',\r\n      sqlFormat: 'standard',\r\n    },\r\n    success: function(data) {\r\n      return data.features;\r\n      // return data.rows;\r\n    }\r\n  },\r\n}\r\n","export default {\r\n  id: 'electedOfficials',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){\r\n        // console.log(feature.properties.election_precinct);\r\n        return \"WITH split AS (SELECT * FROM splits WHERE precinct = '\" + feature.properties.election_precinct + \"') \\\r\n                SELECT eo.*, s.ballot_file_id\\\r\n                FROM elected_officials eo, split s \\\r\n                WHERE eo.office = 'city_council' AND eo.district = s.city_district \\\r\n                           OR eo.office = 'state_house' AND eo.district = s.state_house \\\r\n                           OR eo.office = 'state_senate' AND eo.district = s.state_senate \\\r\n                           OR eo.office = 'us_house' AND eo.district = s.federal_house \\\r\n                \";\r\n      },// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'regmaps',\r\n  type: 'esri',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/MASTERMAPINDEX/FeatureServer/0',\r\n  // deps: ['dorParcels'],\r\n  deps: ['parcels.dor'],\r\n  options: {\r\n    relationship: 'intersects',\r\n    targetGeometry: function (state, Leaflet) {\r\n      // get combined extent of dor parcels\r\n      // var parcels = state.dorParcels.data;\r\n      var parcels = state.parcels.dor.data;\r\n\r\n      // build up sets of x and y values\r\n      var xVals = [],\r\n          yVals = [];\r\n\r\n      // loop over parcels\r\n      parcels.forEach(function (parcel) {\r\n        var geom = parcel.geometry,\r\n            parts = geom.coordinates;\r\n\r\n        // loop over parts (whether it's simple or multipart)\r\n        parts.forEach(function (coordPairs) {\r\n          coordPairs.forEach(function (coordPair) {\r\n            // if the polygon has a hole, it has another level of coord\r\n            // pairs, presumably one for the outer coords and another for\r\n            // inner. for simplicity, add them all.\r\n            var hasHole = Array.isArray(coordPair[0]);\r\n\r\n            if (hasHole) {\r\n              // loop through inner pairs\r\n              coordPair.forEach(function (innerCoordPair) {\r\n                var x = innerCoordPair[0],\r\n                    y = innerCoordPair[1];\r\n\r\n                xVals.push(x);\r\n                yVals.push(y)\r\n              });\r\n            // for all other polys\r\n            } else {\r\n              var x = coordPair[0],\r\n                  y = coordPair[1];\r\n\r\n              xVals.push(x);\r\n              yVals.push(y)\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      // take max/min\r\n      var xMin = Math.min.apply(null, xVals);\r\n      var xMax = Math.max.apply(null, xVals);\r\n      var yMin = Math.min.apply(null, yVals);\r\n      var yMax = Math.max.apply(null, yVals);\r\n\r\n      // make sure all coords are defined. no NaNs allowed.\r\n      var coordsAreDefined = [xMin, xMax, yMin, yMax].every(\r\n        function (coord) { return coord; }\r\n      );\r\n\r\n      // if they aren't\r\n      if (!coordsAreDefined) {\r\n        //  exit with null to avoid an error calling lat lng bounds\r\n        // constructor\r\n        return null;\r\n      }\r\n\r\n      // construct geometry\r\n      var bounds = Leaflet.latLngBounds([\r\n        [yMin, xMin],\r\n        [yMax, xMax]\r\n      ]);\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n  success: function(data) {\r\n    return data;\r\n  }\r\n}\r\n","export default {\r\n  id: 'vacantIndicatorsPoints',\r\n  type: 'esri-nearby',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Vacant_Indicators_Points/FeatureServer/0',\r\n  options: {\r\n    geometryServerUrl: 'https://gis-utils.databridge.phila.gov/arcgis/rest/services/Utilities/Geometry/GeometryServer',\r\n    calculateDistance: true,\r\n    distances: 500,\r\n  },\r\n}\r\n","export default {\r\n  id: 'zoningAppeals',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature) {\r\n        var stmt = \"select * from li_appeals where address = '\" + feature.properties.street_address + \"'\";\r\n        var addressKey = feature.properties.li_address_key;\r\n\r\n        if (addressKey && addressKey.length > 0) {\r\n          stmt += \" or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\";\r\n        }\r\n\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  key: 'deeds',\r\n  icon: 'book',\r\n  label: 'Deeds',\r\n  // TODO uncommenting this causes the no-content view to show up.\r\n  dataSources: ['dorDocuments'],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Deed information and document transactions for this address.\\\r\n          The map faithfully reflects property boundaries as described in \\\r\n          recorded deeds including multiple types of easements.\\\r\n          The property boundaries displayed on the map are for reference \\\r\n          only and should not be used in place of the recorded deeds or \\\r\n          land surveys. Source: Department of Records\\\r\n        ',\r\n      }\r\n    },\r\n    {\r\n      type: 'collection-summary',\r\n      options: {\r\n        descriptor: 'parcel',\r\n        // this will include zero quantities\r\n        // includeZeroes: true,\r\n        getValue: function(item) {\r\n          return item.properties.STATUS;\r\n        },\r\n        context: {\r\n          singular: function(list){ return 'There is ' + list + ' at this address.'},\r\n          plural: function(list){ return 'There are ' + list + ' at this address.'}\r\n        },\r\n        types: [\r\n          {\r\n            value: 1,\r\n            label: 'active parcel'\r\n          },\r\n          {\r\n            value: 2,\r\n            label: 'inactive parcel'\r\n          },\r\n          {\r\n            value: 3,\r\n            label: 'remainder parcel'\r\n          }\r\n        ]\r\n      },\r\n      slots: {\r\n        items: function(state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      type: 'tab-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.OBJECTID;\r\n        },\r\n        getTitle: function(item) {\r\n          return item.properties.MAPREG;\r\n        },\r\n        getAddress: function(item) {\r\n          var address = helpers.concatDorAddress(item);\r\n          return address;\r\n        },\r\n        // components for the content pane. this essentially a topic body.\r\n        components: [\r\n        //   {\r\n        //     type: 'table-group',\r\n        //     options: {\r\n        //       showBoth: {\r\n        //         mainTable: {\r\n        //           dataSource: null,\r\n        //           id:'dorData',\r\n        //         },\r\n        //         dependentTable: {\r\n        //           dataSource: 'condoList',\r\n        //           id: 'condoList_dor',\r\n        //         }\r\n        //       },\r\n        //       components: [\r\n\r\n          {\r\n            type: 'vertical-table',\r\n            options: {\r\n              nullValue: 'None',\r\n              // id: 'dorData',\r\n            },\r\n            slots: {\r\n              title: 'Parcel Details',\r\n              fields: [\r\n                {\r\n                  label: 'Map Registry #',\r\n                  value: function(state, item) {\r\n                    return item.properties.MAPREG;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Parcel Address',\r\n                  value: function(state, item) {\r\n                    return helpers.concatDorAddress(item);\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Status',\r\n                  value: function(state, item) {\r\n                    var status = item.properties.STATUS;\r\n                    var desc;\r\n                    switch(status) {\r\n                      case 1:\r\n                        desc = 'Active';\r\n                        break;\r\n                      case 2:\r\n                        desc = 'Inactive';\r\n                        break;\r\n                      case 3:\r\n                        desc = 'Remainder';\r\n                        break;\r\n                      default:\r\n                        break;\r\n                    }\r\n                    return desc;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Origination Date',\r\n                  value: function(state, item) {\r\n                    return item.properties.ORIG_DATE;\r\n                  },\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Inactive Date',\r\n                  value: function(state, item) {\r\n                    return item.properties.INACTDATE;\r\n                  },\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Has Air Rights',\r\n                  value: function(state, item) {\r\n                    var suffix = item.properties.SUFFIX;\r\n                    return suffix === 'A' ? 'Yes' : 'No';\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Is Condo',\r\n                  value: function(state, item) {\r\n                    if (!item.properties.CONDOFLAG) {\r\n                      return 'No';\r\n                    } else {\r\n                      return 'Yes';\r\n                    }\r\n                    // return item.properties.CONDOFLAG ? 'Yes' : 'No';\r\n                  },\r\n                  // fieldFunction: function(state, item) {\r\n                  //   console.log('state', state);\r\n                  // }\r\n                },\r\n                {\r\n                  label: 'Perimeter',\r\n                  value: function (state, item) {\r\n                    return (item.properties || {})['TURF_PERIMETER'];\r\n                  },\r\n                  transforms: [\r\n                    'integer',\r\n                    'prettyNumber',\r\n                    'feet',\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Area',\r\n                  value: function(state, item) {\r\n                    return (item.properties || {})['TURF_AREA'];\r\n                  },\r\n                  transforms: [\r\n                    'integer',\r\n                    'prettyNumber',\r\n                    'squareFeet',\r\n                  ]\r\n                },\r\n              ]\r\n            }  // end slots\r\n          },  // end vertical table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'dorCondoList',\r\n              defaultIncrement: 10,\r\n              showAllRowsOnFirstClick: true,\r\n              showOnlyIfData: true,\r\n              fields: [\r\n                {\r\n                  label: 'Condo Parcel',\r\n                  value: function(state, item) {\r\n                    return item.recmap + '-' + item.condoparcel;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Condo Name',\r\n                  value: function(state, item) {\r\n                    // return item.attributes.RECORDING_DATE;\r\n                    return item.condo_name;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Unit #',\r\n                  value: function(state, item) {\r\n                    return 'Unit #' + item.condounit;\r\n                  },\r\n                },\r\n                // {\r\n                //   label: 'Grantor',\r\n                //   value: function(state, item) {\r\n                //     return item.attributes.GRANTORS;\r\n                //   },\r\n                // },\r\n                // {\r\n                //   label: 'Grantee',\r\n                //   value: function(state, item) {\r\n                //     return item.attributes.GRANTEES;\r\n                //   },\r\n                // },\r\n              ], // end fields\r\n              sort: {\r\n                // this should return the val to sort on\r\n                getValue: function(item) {\r\n                  // return item.attributes.RECORDING_DATE;\r\n                  return item.condounit;\r\n                },\r\n                // asc or desc\r\n                order: 'asc'\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Deeded Condominiums',\r\n              items: function (state, item) {\r\n                var id = item.properties.OBJECTID;\r\n\r\n                if (state.sources.dorCondoList.targets[id]) {\r\n                  if (state.sources.dorCondoList.targets[id].data) {\r\n                    return state.sources.dorCondoList.targets[id].data.rows;\r\n                  }\r\n                } else {\r\n                  return [];\r\n                }\r\n              },\r\n            } // end slots\r\n          }, // end condos table\r\n\r\n          {\r\n            type: 'callout',\r\n            slots: {\r\n              text: 'You can access digital copies of the deeds \\\r\n                below by purchasing a subscription to \\\r\n                <a target=\"_blank\" href=\"http://epay.phila-records.com/phillyepay/web/\">PhilaDox <i class=\"fa fa-external-link\"></i></a></a>.\\\r\n                Please note that the following list\\\r\n                shows documents recorded from\\\r\n                December 1999 forward, and may not be a complete history\\\r\n                of title for the parcel.\\\r\n              '\r\n            },\r\n          },\r\n\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'dorDocuments',\r\n              defaultIncrement: 25,\r\n              fields: [\r\n                {\r\n                  label: 'ID',\r\n                  value: function (state, item) {\r\n                    // return \"<a target='_blank' href='//pdx-app01/recorder/eagleweb/viewDoc.jsp?node=DOCC\"+item.attributes.R_NUM+\"'>\"+item.attributes.R_NUM+\"<i class='fa fa-external-link'></i></a>\"\r\n                    // return item.document_id;\r\n                    return item.attributes.DOCUMENT_ID;\r\n                    // return item.attributes.R_NUM;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    // return item.attributes.RECORDING_DATE;\r\n                    // return item.display_date;\r\n                    return item.attributes.DISPLAY_DATE;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Type',\r\n                  value: function(state, item) {\r\n                    // return item.document_type;\r\n                    return item.attributes.DOCUMENT_TYPE;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Grantor',\r\n                  value: function(state, item) {\r\n                    // return item.grantors;\r\n                    return item.attributes.GRANTORS;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Grantee',\r\n                  value: function(state, item) {\r\n                    // return item.grantees;\r\n                    return item.attributes.GRANTEES;\r\n                  },\r\n                },\r\n              ], // end fields\r\n              sort: {\r\n                // this should return the val to sort on\r\n                getValue: function(item) {\r\n                  // return item.attributes.RECORDING_DATE;\r\n                  // console.log('dor docs sort function running, display_date:', Date.parse(item.display_date));\r\n                  return item.attributes.DISPLAY_DATE;\r\n                  // return Date.parse(item.display_date);\r\n                },\r\n                // asc or desc\r\n                order: 'desc'\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Documents',\r\n              // defaultIncrement: 25,\r\n              items: function(state, item) {\r\n                var id = item.properties.OBJECTID;\r\n                if (state.sources.dorDocuments.targets[id]) {\r\n                  return state.sources.dorDocuments.targets[id].data;\r\n                } else {\r\n                  return [];\r\n                }\r\n              },\r\n            } // end slots\r\n\r\n            // slots: {\r\n            //   title: 'Condominiums',\r\n            //   highestPageRetrieved: function(state) { return state.sources['condoList'].data.page },\r\n            //   pageCount: function(state) { return state.sources['condoList'].data.page_count },\r\n            //   totalSize: function(state) { return state.sources['condoList'].data.total_size },\r\n            //   items: function(state) {\r\n            //     var data = state.sources['condoList'].data.features;\r\n            //     var rows = data.map(function(row){\r\n            //       var itemRow = row;\r\n            //       return itemRow;\r\n            //     });\r\n            //     return rows;\r\n            //   },\r\n            // } // end slots\r\n\r\n          }, // end docs table\r\n        ] // end parcel tab content comps\r\n      }, // end parcel tab options\r\n      slots: {\r\n        items: function (state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      },\r\n    }, // end dor parcel tab group comp\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Use the buttons below to view images of hard-copy deed maps, some\\\r\n          of which have handwritten information that may be useful for\\\r\n          historical deed research.\\\r\n        ',\r\n      },\r\n    },\r\n    {\r\n      type: 'overlay-toggle-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.RECMAP;\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Registry Maps',\r\n        items: function(state) {\r\n          return state.sources.regmaps.data;\r\n        }\r\n      }\r\n    },\r\n    // {\r\n    //   type: 'callout',\r\n    //   slots: {\r\n    //     text: 'The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Source: Department of Records.'\r\n    //   }\r\n    // }\r\n  ], // end deeds comps\r\n  identifyFeature: 'dor-parcel',\r\n  parcels: 'dor',\r\n  imageOverlayGroup: 'regmaps',\r\n}\r\n","export default {\r\n  key: 'li',\r\n  icon: 'wrench',\r\n  label: 'Licenses & Inspections',\r\n  dataSources: [\r\n    'liPermits',\r\n    'liInspections',\r\n    'liViolations',\r\n    'liBusinessLicenses',\r\n    'zoningDocs'\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Licenses, inspections, permits, property maintenance \\\r\n          violations, and zoning permit documents at your search address. \\\r\n          Source: Department of Licenses & Inspections\\\r\n        '\r\n      }\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liPermits',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.permitissuedate\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=permits&eid=\"+item.permitnumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.permitnumber+\" <i class='fa fa-external-link'></i></a>\"\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.permitdescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.status\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.permitissuedate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older permits at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Permits',\r\n        items: function(state) {\r\n          var data = state.sources['liPermits'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            return itemRow;\r\n          });\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        topicKey: 'zoning',\r\n        id: 'zoningDocs',\r\n        // limit: 100,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.scan_date\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Permit Number',\r\n            value: function(state, item){\r\n              return item.permit_number\r\n            }\r\n          },\r\n          // {\r\n          //   label: 'Type',\r\n          //   value: function(state, item){\r\n          //     return item.doc_type\r\n          //   }\r\n          // },\r\n          {\r\n            label: '# Pages',\r\n            value: function(state, item){\r\n              return item.num_pages\r\n            }\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function (state, item) {\r\n              // console.log('zoning doc', item);\r\n\r\n              var appId = item.app_id;\r\n\r\n              if (appId.length < 3) {\r\n                appId = '0' + appId;\r\n              }\r\n\r\n              return '<a target=\"_blank\" href=\"//s3.amazonaws.com/lni-zoning-pdfs/'\r\n                      + item.doc_id\r\n                      + '.pdf\">'\r\n                      + item.doc_id\r\n                      + ' <i class=\"fa fa-external-link\"></i></a>'\r\n                      + '</a>'\r\n              // return item.appid + '-' + item.docid\r\n            }\r\n          },\r\n          // {\r\n          //   label: 'Link',\r\n          //   value: function(state, item){\r\n          //     // return \"<a href='//www.washingtonpost.com/'>View Scan</a>\"\r\n          //     return \"<a target='_blank' href='//www.phila.gov/zoningarchive/Preview.aspx?address=\" + item.address + \"&&docType=\" + item.doctype + \"&numofPages=\" + item.page_numbers + \"&docID=\" + item.docid + \"&app=\" + item.appid +\"'>View Scan <i class='fa fa-external-link'></i></a>\"\r\n          //   }\r\n          // },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.scan_date;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Zoning Permit Documents',\r\n        subtitle: 'formerly \"Zoning Archive\"',\r\n        items: function(state) {\r\n          if (state.sources['zoningDocs'].data) {\r\n            if (state.sources['zoningDocs'].data.rows) {\r\n              var data = state.sources['zoningDocs'].data.rows;\r\n              var rows = data.map(function(row){\r\n                var itemRow = row;\r\n                // var itemRow = Object.assign({}, row);\r\n                //itemRow.DISTANCE = 'TODO';\r\n                return itemRow;\r\n              });\r\n              return rows;\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        topicKey: 'permits',\r\n        id: 'liInspections',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.inspectioncompleted\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              // return item.casenumber\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.inspectiondescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.inspectionstatus\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.inspectioncompleted;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            // return `See ${count} older inspections at L&I Property History`;\r\n            return 'See ' + count + ' older inspections at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Inspections',\r\n        items: function(state) {\r\n          var data = state.sources['liInspections'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liViolations',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Date',\r\n            value: function(state, item){\r\n              return item.caseaddeddate\r\n            },\r\n            nullValue: 'no date available',\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              // return item.casenumber\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.violationdescription\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.status\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.caseaddeddate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older violations at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Violations',\r\n        items: function(state) {\r\n          var data = state.sources['liViolations'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'liBusinessLicenses',\r\n        limit: 5,\r\n        fields: [\r\n          {\r\n            label: 'Issue Date',\r\n            value: function(state, item){\r\n              return item.initialissuedate\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'License Number',\r\n            value: function(state, item){\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=licenses&eid=\"+item.licensenum+\"&key=\"+item.street_address+\"&address=\"+item.street_address+\"'>\"+item.licensenum+\" <i class='fa fa-external-link'></i></a>\"\r\n              return item.licensenum\r\n            }\r\n          },\r\n          {\r\n            label: 'Name',\r\n            value: function(state, item){\r\n              return item.business_name\r\n            }\r\n          },\r\n          {\r\n            label: 'Type',\r\n            value: function(state, item){\r\n              return item.licensetype\r\n            }\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              return item.licensestatus\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.caseaddeddate;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See ' + count + ' older business licenses at L&I Property History';\r\n          },\r\n          name: 'L&I Property History',\r\n          href: function(state) {\r\n            var address = state.geocode.data.properties.street_address;\r\n            var addressEncoded = encodeURIComponent(address);\r\n            return 'http://li.phila.gov/#summary?address=' + addressEncoded;\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Business Licenses',\r\n        items: function(state) {\r\n          var data = state.sources['liBusinessLicenses'].data.rows;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            //itemRow.DISTANCE = 'TODO';\r\n            return itemRow;\r\n          });\r\n          // console.log('rows', rows);\r\n          return rows;\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  dynamicMapLayers: [\r\n    //'zoning'\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd'\r\n}\r\n","import helpers from '../util/helpers';\r\n\r\nexport default {\r\n  key: 'zoning',\r\n  icon: 'university',\r\n  label: 'Zoning',\r\n  dataSources: [\r\n    'zoningOverlay',\r\n    'zoningBase',\r\n    'zoningAppeals',\r\n    'rco',\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Base district zoning maps, associated zoning overlays, and Registered Community Organizations applicable to your search address. Source: Department of Planning and Development'\r\n      }\r\n    },\r\n    {\r\n      type: 'collection-summary',\r\n      options: {\r\n        descriptor: 'parcel',\r\n        // this will include zero quantities\r\n        // includeZeroes: true,\r\n        getValue: function(item) {\r\n          return item.properties.STATUS;\r\n        },\r\n        context: {\r\n          singular: function(list){ return 'There is ' + list + ' at this address.'},\r\n          plural: function(list){ return 'There are ' + list + ' at this address.'}\r\n        },\r\n        types: [\r\n          {\r\n            value: 1,\r\n            label: 'active parcel'\r\n          },\r\n          {\r\n            value: 2,\r\n            label: 'inactive parcel'\r\n          },\r\n          {\r\n            value: 3,\r\n            label: 'remainder parcel'\r\n          }\r\n        ]\r\n      },\r\n      slots: {\r\n        items: function(state) {\r\n          return state.parcels.dor.data;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      type: 'tab-group',\r\n      options: {\r\n        getKey: function(item) {\r\n          return item.properties.OBJECTID;\r\n        },\r\n        getTitle: function(item) {\r\n          return item.properties.MAPREG;\r\n        },\r\n        getAddress: function(item) {\r\n          var address = hf.concatDorAddress(item);\r\n          return address;\r\n        },\r\n        // components for the content pane. this essentially a topic body.\r\n        components: [\r\n          {\r\n            type: 'badge-custom',\r\n            options: {\r\n              titleBackground: '#58c04d',\r\n              components: [\r\n                {\r\n                  type: 'horizontal-table',\r\n                  options: {\r\n                    topicKey: 'zoning',\r\n                    shouldShowFilters: false,\r\n                    shouldShowHeaders: false,\r\n                    id: 'baseZoning',\r\n                    // defaultIncrement: 10,\r\n                    // showAllRowsOnFirstClick: true,\r\n                    // showOnlyIfData: true,\r\n                    fields: [\r\n                      {\r\n                        label: 'Code',\r\n                        value: function (state, item) {\r\n                          return item;\r\n                        },\r\n                        transforms: [\r\n                          'nowrap',\r\n                          'bold'\r\n                        ]\r\n                      },\r\n                      {\r\n                        label: 'Description',\r\n                        value: function (state, item) {\r\n                          return helpers.ZONING_CODE_MAP[item];\r\n                        },\r\n                      },\r\n                    ], // end fields\r\n                  },\r\n                  slots: {\r\n                    // title: 'Base Zoning',\r\n                    items(state, item) {\r\n                      // console.log('state.sources:', state.sources['zoningBase'].data.rows);\r\n                      const id = item.properties.OBJECTID;\r\n                      const target = state.sources.zoningBase.targets[id] || {};\r\n                      const { data={} } = target;\r\n                      const { rows=[] } = data;\r\n\r\n                      // get unique zoning codes\r\n                      const longCodes = rows.map(row => row.long_code);\r\n                      const longCodesUniqueSet = new Set(longCodes);\r\n                      const longCodesUnique = Array.from(longCodesUniqueSet);\r\n\r\n                      return longCodesUnique;\r\n                    },\r\n                  }, // end slots\r\n                }, // end table\r\n              ],\r\n            },\r\n            slots: {\r\n              title: 'Base District',\r\n            },\r\n          }, // end of badge-custom\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              topicKey: 'zoning',\r\n              id: 'zoningOverlay',\r\n              fields: [\r\n                {\r\n                  label: 'Name',\r\n                  value: function (state, item) {\r\n                    return item.overlay_name\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Code Section',\r\n                  value: function (state, item) {\r\n                    return \"<a target='_blank' href='\"+item.code_section_link+\"'>\"+item.code_section+\" <i class='fa fa-external-link'></i></a>\"\r\n                  }\r\n                },\r\n              ],\r\n            },\r\n            slots: {\r\n              title: 'Overlays',\r\n              items: function(state, item) {\r\n                var id = item.properties.OBJECTID,\r\n                    target = state.sources.zoningOverlay.targets[id] || {},\r\n                    data = target.data || {};\r\n                // console.log('zoningbase target:', target);\r\n                return data.rows || [];\r\n              },\r\n            },\r\n          },\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              topicKey: 'zoning',\r\n              // shouldShowFilters: false,\r\n              id: 'baseZoning',\r\n              // defaultIncrement: 10,\r\n              // showAllRowsOnFirstClick: true,\r\n              // showOnlyIfData: true,\r\n              fields: [\r\n                {\r\n                  label: 'Bill Type',\r\n                  value: function (state, item) {\r\n                    return item.billType;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Current Zoning',\r\n                  value: function(state, item) {\r\n                    return item.currentZoning;\r\n                  },\r\n                },\r\n                {\r\n                  label: 'Pending Bill',\r\n                  value: function (state, item) {\r\n                    return `<a target=\"_blank\" href=\"${item.pendingbillurl}\">${item.pendingbill} <i class=\"fa fa-external-link\"></i></a>`;\r\n                  }\r\n                },\r\n              ], // end fields\r\n            },\r\n            slots: {\r\n              title: 'Pending Bills',\r\n              items: function(state, item) {\r\n                // console.log('state.sources:', state.sources['zoningBase'].data.rows);\r\n                var id = item.properties.OBJECTID,\r\n                    target = state.sources.zoningBase.targets[id] || {},\r\n                    data = target.data || {};\r\n\r\n                // include only rows where pending is true\r\n                const { rows=[] } = data;\r\n                const rowsFiltered = rows.filter(row => row.pending === 'Yes');\r\n\r\n                // give each pending zoning bill a type of \"zoning\"\r\n                const rowsFilteredWithType = rowsFiltered.map((row) => {\r\n                  row.billType = 'Base District';\r\n                  row.currentZoning = row.long_code;\r\n                  return row;\r\n                });\r\n\r\n                let overlayRowsFilteredWithType = [];\r\n\r\n                // append pending overlays\r\n                if (state.sources.zoningOverlay.targets[id]) {\r\n                  const overlayRows = state.sources.zoningOverlay.targets[id].data.rows;\r\n                  const overlayRowsFiltered = overlayRows.filter(row => row.pending === 'Yes');\r\n                  overlayRowsFilteredWithType = overlayRowsFiltered.map((row) => {\r\n                    row.billType = 'Overlay';\r\n                    row.currentZoning = row.overlay_name;\r\n                    return row;\r\n                  });\r\n                } else {\r\n                  overlayRowsFilteredWithType = [];\r\n                }\r\n\r\n                // combine pending zoning and overlays\r\n                const zoningAndOverlays = rowsFilteredWithType.concat(overlayRowsFilteredWithType);\r\n\r\n                return zoningAndOverlays;\r\n              },\r\n            }, // end slots\r\n          }, // end table\r\n        ], // end of tab-group components\r\n      },\r\n      slots: {\r\n        items: function (state) {\r\n          // return state.dorParcels.data;\r\n          return state.parcels.dor.data;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'zoningAppeals',\r\n        fields: [\r\n          {\r\n            label: 'Processed Date',\r\n            value: function(state, item) {\r\n              return item.processeddate;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'ID',\r\n            value: function(state, item){\r\n              //return item.appeal_key\r\n              // return \"<a target='_blank' href='//li.phila.gov/#details?entity=violationdetails&eid=\"+item.casenumber+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.casenumber+\" <i class='fa fa-external-link'></i></a>\"\r\n              return \"<a target='_blank' href='http://li.phila.gov/#details?entity=appeals&eid=\"+item.appeal_key+\"&key=\"+item.addresskey+\"&address=\"+item.address+\"'>\"+item.appealno+\"<i class='fa fa-external-link'></i></a>\"\r\n            }\r\n          },\r\n          {\r\n            label: 'Description',\r\n            value: function(state, item){\r\n              return item.appealgrounds;\r\n            }\r\n          },\r\n          {\r\n            label: 'Scheduled Date',\r\n            value: function(state, item) {\r\n              return item.date_scheduled;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Status',\r\n            value: function(state, item){\r\n              // return item.properties.CODE_SECTION\r\n              return item.decision\r\n            }\r\n          },\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item.date_scheduled;\r\n          },\r\n          // asc or desc\r\n          order: 'desc'\r\n        },\r\n      },\r\n      slots: {\r\n        title : 'Appeals',\r\n        items: function(state) {\r\n          if (state.sources['zoningAppeals'].data) {\r\n            if (state.sources['zoningAppeals'].data.rows) {\r\n              var data = state.sources['zoningAppeals'].data.rows;\r\n              var rows = data.map(function(row){\r\n                var itemRow = row;\r\n                // var itemRow = Object.assign({}, row);\r\n                //itemRow.DISTANCE = 'TODO';\r\n                return itemRow;\r\n              });\r\n              return rows;\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Looking for zoning documents? They are now located in the Licenses & Inspections tab under \"Zoning Permit Documents\".',\r\n      },\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'rco',\r\n        fields: [\r\n          {\r\n            label: 'RCO',\r\n            value: function(state, item) {\r\n              return '<b>' + item.properties.ORGANIZATION_NAME + '</b><br>'\r\n              + item.properties.ORGANIZATION_ADDRESS\r\n            },\r\n          },\r\n          {\r\n            label: 'Meeting Address',\r\n            value: function(state, item) {\r\n              return item.properties.MEETING_LOCATION_ADDRESS\r\n            }\r\n          },\r\n          {\r\n            label: 'Primary Contact',\r\n            value: function(state, item) {\r\n              // return item.properties.PRIMARY_PHONE\r\n              return item.properties.PRIMARY_NAME + '<br>'\r\n              + item.properties.PRIMARY_PHONE + '<br>'\r\n              // + `<b><a :href=\"'mailto:' + item.properties.PRIMARY_EMAIL\">`\r\n              + item.properties.PRIMARY_EMAIL// + '</a></b>'\r\n            },\r\n            transforms: [\r\n              'rcoPrimaryContact'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Preferred Method',\r\n            value: function(state, item){\r\n              return item.properties.PREFFERED_CONTACT_METHOD\r\n            }\r\n          },\r\n        ],\r\n        externalLink: {\r\n          forceShow: true,\r\n          action: function() {\r\n            return 'See a list of all RCOs in the city [PDF]';\r\n          },\r\n          name: '',\r\n          href: function(state) {\r\n            // var address = state.geocode.data.properties.street_address;\r\n            // var addressEncoded = encodeURIComponent(address);\r\n            return '//www.phila.gov/CityPlanning/projectreviews/RCO%20Related/List_of_RCOs.pdf';\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Registered Community Organizations',\r\n        items: function(state) {\r\n          if (state.sources['rco'].data) {\r\n            var data = state.sources['rco'].data;\r\n            var rows = data.map(function(row){\r\n              var itemRow = row;\r\n              // var itemRow = Object.assign({}, row);\r\n              return itemRow;\r\n            });\r\n            return rows;\r\n          }\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  dynamicMapLayers: [\r\n    'zoning'\r\n  ],\r\n  identifyFeature: 'dor-parcel',\r\n  parcels: 'dor'\r\n}\r\n","export default {\r\n  key: 'nearby',\r\n  icon: 'map-marker-alt',\r\n  label: 'Nearby',\r\n  dataSources: ['threeOneOneCarto', 'crimeIncidents', 'nearbyZoningAppeals'],\r\n  // dataSources: ['311Carto', 'crimeIncidents', 'nearbyZoningAppeals', 'vacantIndicatorsPoints'],\r\n  // dataSources: ['vacantLand', 'vacantBuilding', '311Carto', 'crimeIncidents', 'nearbyZoningAppeals'],\r\n  // featureLayers: [\r\n  //   'vacantLand',\r\n  //   'vacantBuilding'\r\n  // ],\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd',\r\n  // TODO implement this\r\n  // computed: {\r\n  //   label(state) {\r\n  //     var land = state.sources.vacantLand.data\r\n  //     var building = state.sources.vacantBuilding.data\r\n  //     if (land.length === 0 && building.length === 0) {\r\n  //       return 'Not Likely Vacant';\r\n  //     } else if (land.length > 0) {\r\n  //       return 'Likely Vacant Land';\r\n  //     } else if (building.length > 0) {\r\n  //       return 'Likely Vacant Building';\r\n  //     }\r\n  //   }\r\n  // },\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          See recent activity near your search address including 311 \\\r\n          service requests, crimes, zoning appeals, and more. Hover over a\\\r\n          record below to highlight it on the map.\\\r\n        '\r\n      }\r\n    },\r\n    // {\r\n    //   type: 'badge',\r\n    //   options: {\r\n    //     titleBackground: function(state) {\r\n    //       var text = getVacancyText(state);\r\n    //       if (text.includes('Land')) {\r\n    //         return 'orange';\r\n    //       } else if (text.includes('Building')) {\r\n    //         return 'purple';\r\n    //       } else {\r\n    //         return '#58c04d';\r\n    //       }\r\n    //     }\r\n    //   },\r\n    //   slots: {\r\n    //     title: 'Vacancy',\r\n    //     value: function(state) {\r\n    //       return getVacancyText(state);\r\n    //     },\r\n    //     // description: function(state) {\r\n    //     //   var code = state.geocode.data.properties.zoning;\r\n    //     //   return ZONING_CODE_MAP[code];\r\n    //     // },\r\n    //   }\r\n    // },\r\n    {\r\n      type: 'horizontal-table-group',\r\n      options: {\r\n        filters: [\r\n          {\r\n            type: 'data',\r\n            getValue: function(item) {\r\n              return item;\r\n            },\r\n            label: 'What nearby activity would you like to see?',\r\n            values: [\r\n              {\r\n                label: '311 Requests',\r\n                value: '311',\r\n              },\r\n              {\r\n                label: 'Crime Incidents',\r\n                value: 'crimeIncidents',\r\n              },\r\n              {\r\n                label: 'Zoning Appeals',\r\n                value: 'nearbyZoningAppeals',\r\n              },\r\n              {\r\n                label: 'Vacant Properties',\r\n                value: 'vacantIndicatorsPoints',\r\n              }\r\n            ]\r\n          },\r\n        ],\r\n        // components for the content pane.\r\n        tables: [\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: '311',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.requested_datetime;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                }\r\n              },\r\n              filters: [\r\n                {\r\n                  type: 'time',\r\n                  getValue: function(item) {\r\n                    return item.requested_datetime;\r\n                  },\r\n                  label: 'From the last',\r\n                  values: [\r\n                    {\r\n                      label: '30 days',\r\n                      value: '30',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: '90 days',\r\n                      value: '90',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: 'year',\r\n                      value: '1',\r\n                      unit: 'years',\r\n                      direction: 'subtract',\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              filterByText: {\r\n                label: 'Filter by text',\r\n                fields: [\r\n                  'service_name',\r\n                  'address'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#ff3f3f',\r\n                  color: '#ff0000',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#ff0000',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.requested_datetime;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Address',\r\n                  value: function(state, item) {\r\n                    return item.address;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Subject',\r\n                  value: function(state, item) {\r\n                    if (item.media_url) {\r\n                      return '<a target=\"_blank\" href='+item.media_url+'>'+item.service_name+'</a>';\r\n                    } else {\r\n                      return item.service_name;\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Nearby Service Requests',\r\n              data: 'threeOneOneCarto',\r\n              items: function(state) {\r\n                var data = state.sources['threeOneOneCarto'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            }\r\n          },\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'crimeIncidents',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.dispatch_date;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                },\r\n              },\r\n              filters: [\r\n                {\r\n                  type: 'time',\r\n                  getValue: function(item) {\r\n                    return item.dispatch_date;\r\n                  },\r\n                  label: 'From the last',\r\n                  values: [\r\n                    {\r\n                      label: '30 days',\r\n                      value: '30',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                    {\r\n                      label: '90 days',\r\n                      value: '90',\r\n                      unit: 'days',\r\n                      direction: 'subtract',\r\n                    },\r\n                  ]\r\n                }\r\n              ],\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'text_general_code',\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#6674df',\r\n                  color: '#6674df',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#6674df',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.dispatch_date;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Location',\r\n                  value: function(state, item) {\r\n                    return item.location_block;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Description',\r\n                  value: function(state, item) {\r\n                    return item.text_general_code;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Crime Incidents',\r\n              data: 'crimeIncidents',\r\n              items: function(state) {\r\n                var data = state.sources['crimeIncidents'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'nearbyZoningAppeals',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'date',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'date' || !sortField) {\r\n                    val = item.decisiondate;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item.distance;\r\n                  }\r\n                  return val;\r\n                },\r\n                order: function(sortField) {\r\n                  var val;\r\n                  if (sortField === 'date') {\r\n                    val = 'desc';\r\n                  } else {\r\n                    val = 'asc';\r\n                  }\r\n                  return val;\r\n                },\r\n              },\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'appealgrounds'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#009900',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Date',\r\n                  value: function(state, item) {\r\n                    return item.decisiondate;\r\n                  },\r\n                  nullValue: 'no date available',\r\n                  transforms: [\r\n                    'date'\r\n                  ]\r\n                },\r\n                {\r\n                  label: 'Location',\r\n                  value: function(state, item) {\r\n                    return item.address;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Description',\r\n                  value: function(state, item) {\r\n                    return item.appealgrounds;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return parseInt(item.distance) + ' ft';\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            slots: {\r\n              title: 'Zoning Appeals',\r\n              data: 'nearbyZoningAppeals',\r\n              items: function(state) {\r\n                var data = state.sources['nearbyZoningAppeals'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n          {\r\n            type: 'horizontal-table',\r\n            options: {\r\n              id: 'vacantIndicatorsPoints',\r\n              sort: {\r\n                select: true,\r\n                sortFields: [\r\n                  'distance',\r\n                  'type',\r\n                ],\r\n                getValue: function(item, sortField) {\r\n                  var val;\r\n                  if (sortField === 'type' || !sortField) {\r\n                    val = item.properties.VACANT_FLAG;\r\n                  } else if (sortField === 'distance') {\r\n                    val = item._distance;\r\n                  }\r\n                  return val;\r\n                }\r\n              },\r\n              filterByText: {\r\n                label: 'Filter by',\r\n                fields: [\r\n                  'ADDRESS',\r\n                  'VACANT_FLAG'\r\n                ]\r\n              },\r\n              mapOverlay: {\r\n                marker: 'circle',\r\n                style: {\r\n                  radius: 6,\r\n                  fillColor: '#9400c6',\r\n                  color: '#9400c6',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                },\r\n                hoverStyle: {\r\n                  radius: 6,\r\n                  fillColor: 'yellow',\r\n                  color: '#009900',\r\n                  weight: 1,\r\n                  opacity: 1,\r\n                  fillOpacity: 1.0\r\n                }\r\n              },\r\n              fields: [\r\n                {\r\n                  label: 'Address',\r\n                  value: function(state, item) {\r\n                    return item.properties.ADDRESS;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Property Type',\r\n                  value: function(state, item) {\r\n                    return item.properties.VACANT_FLAG;\r\n                  }\r\n                },\r\n                {\r\n                  label: 'Distance',\r\n                  value: function(state, item) {\r\n                    return item._distance + ' ft';\r\n                  }\r\n                },\r\n              ],\r\n              externalLink: {\r\n                forceShow: true,\r\n                action: function(count) {\r\n                  return 'See more at Vacancy Property Viewer';\r\n                },\r\n                name: 'Vacancy Property Viewer',\r\n                href: function(state) {\r\n                  // var address = state.geocode.data.properties.street_address;\r\n                  // var addressEncoded = encodeURIComponent(address);\r\n                  return '//phl.maps.arcgis.com/apps/webappviewer/index.html?id=64ac160773d04952bc17ad895cc00680';\r\n                }\r\n              }\r\n            },\r\n            slots: {\r\n              title: 'Likely Vacant Properties',\r\n              data: 'vacantIndicatorsPoints',\r\n              items: function(state) {\r\n                var data = state.sources['vacantIndicatorsPoints'].data || [];\r\n                var rows = data.map(function(row){\r\n                  var itemRow = row;\r\n                  // var itemRow = Object.assign({}, row);\r\n                  return itemRow;\r\n                });\r\n                return rows;\r\n              },\r\n            } // end of slots\r\n          }, // end of horizontal-table\r\n        ], // end comps\r\n      }, // end options\r\n      slots: {\r\n        // REVIEW should this go in options? maybe not, since it should be\r\n        // reactive.\r\n        items: function(state) {\r\n          // return state.pwdParcel;\r\n          return state.parcel.pwd\r\n        }\r\n      },\r\n    }\r\n  ]\r\n}\r\n","import moment from 'moment';\r\n\r\nconst titleCase = function(str) {\r\n  str = str.toLowerCase().split(' ').map(function(word) {\r\n    return (word.charAt(0).toUpperCase() + word.slice(1));\r\n  });\r\n  return str.join(' ');\r\n};\r\n\r\nexport default {\r\n  key: 'historic',\r\n  icon: 'scroll-old',\r\n  label: 'Historic',\r\n  dataSources: ['histDistrict', 'histLegalCards', 'histDesignated', 'historicNearby'  ],\r\n\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Results indicate likely status of historic designation for this property. <br>\\\r\n               Please contact the Historical Commision before taking any action. <br><br> \\\r\n               Phone: (215) 686-7660 <br> Mon-Fri, 8:30 a.m. to 4:00 p.m.'\r\n      }\r\n    },\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'The Philadelphia Historical Commission identifies and designates historic resources, listing them on \\\r\n               the Philadelphia Register of Historic Places, and inventory that currently includes more than 22,000\\\r\n               properties and 15 historic districts. <br> \\\r\n               Source: Philadelphia Historical Commission, Department of Planning, Streets Department.'\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      options: {\r\n        nullValue: 'None',\r\n        externalLink: {\r\n          action: function() {\r\n            return 'Learn more about owning a property on the historic register.';\r\n          },\r\n          href: function(state) {\r\n            return '//www.phila.gov/historical/designation/Pages/FAQ.aspx';\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        fields: [\r\n          {\r\n            label: 'Historic Designation',\r\n            value: function(state) {\r\n              if (state.sources.histDesignated.data) {\r\n                if (state.sources.histDesignated.data.length > 0) {\r\n                      if( state.sources.histDesignated.data[0].properties.DDESIGDATE != null ) {\r\n                        return \"Designated: \" + state.sources.histDesignated.data[0].properties.DDESIGDATE\r\n                      } else if (state.sources.histDesignated.data[0].properties.IDESIGDATE1 != null) {\r\n                        return \"Designated: \" + state.sources.histDesignated.data[0].properties.IDESIGDATE1\r\n                      } else if (state.sources.histDesignated.data[0].properties.IDESIGDATE2 != null) {\r\n                        return \"Designated: \" + state.sources.histDesignated.data[0].properties.IDESIGDATE2\r\n                      } else {\r\n                        return \"Not date available\"\r\n                      }\r\n                } else {\r\n                return \"Not designated as historic.\"\r\n                }\r\n              } else {\r\n                return \"Not designated as historic.\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Building Age',\r\n            value: function(state) {\r\n              var estimated;\r\n              var date;\r\n              if (state.sources.opa.data) {\r\n                if (state.sources.opa.data.year_built_estimate === \"Y\") {\r\n                  estimated = \" (estimated)\"\r\n                } else {\r\n                  estimated = \"\"\r\n                };\r\n                if (state.sources.opa.data.year_built_estimate === \"0000\") {\r\n                  date = \"No date available.\";\r\n                 return date\r\n               } else {\r\n                 date = state.sources.opa.data.year_built;\r\n                 return date\r\n               }\r\n              return state.sources.opa.data.year_built + estimated;\r\n              } else {\r\n                return \"No date available.\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Building Description',\r\n            value: function(state) {\r\n              if (state.sources.opa.data) {\r\n                return  titleCase(state.sources.opa.data.building_code_description);\r\n              } else {\r\n                return \"No description available.\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Historic District',\r\n            value: function(state) {\r\n              if (state.sources.histDistrict.data ) {\r\n                if (state.sources.histDistrict.data.length > 0) {\r\n                  return state.sources.histDistrict.data[0].properties.NAME\r\n                        +\"<br>Designated - \" + moment(state.sources.histDistrict.data[0].properties.DESIGNATED1).format(\"MMM Do, YYYY\")\r\n                        +\"<br><b><a href='https://www.phila.gov/historical/register/Pages/districts.aspx' target='_blank'>\\\r\n                        View a complete inventory of historic districts.</a></b>\";\r\n                  } else {\r\n                  return \"This property is not within a historic district.\\\r\n                  <br><b><a href='https://www.phila.gov/historical/register/Pages/districts.aspx' target='_blank'>\\\r\n                  View a complete inventory of historic districts.</a></b>\"\r\n                }\r\n              } else {\r\n                return \"This property is not within a historic district.\\\r\n                <br><b><a href='https://www.phila.gov/historical/register/Pages/districts.aspx' target='_blank'>\\\r\n                View a complete inventory of historic districts.</a></b>\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Conservation District',\r\n            value: function(state) {\r\n              if (state.sources.neighConservation.data) {\r\n                if (state.sources.neighConservation.data.length > 0) {\r\n                  return ('<a href='+state.sources.neighConservation.data[0].properties.CODE_SECTION_LINK +' target=\"_blank\">Yes - Click for more Info</a>'); } else {\r\n                  return \"<a href='https://www.phila.gov/CityPlanning/resources/Publications/Conservation%20districts%20fact%20sheet.pdf' target='_blank'>This property is not within a conservation district.</a>\"\r\n                }\r\n              } else {\r\n                return \"This property is not within a conservation district.\"\r\n              }\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Historic streets identify older streets with historical value and include information \\\r\n               such as construction materials used. Legal cards are a collection of cards containing \\\r\n               the official record of the legal description and drawings of city streets.\\\r\n               <br>Source: Streets Department.'\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      slots: {\r\n        title: 'Historic Street Details',\r\n        fields: [\r\n          {\r\n            label: 'Historic Street',\r\n            value: function(state) {\r\n              if (state.sources.historicStreets.data) {\r\n                return (titleCase(state.sources.historicStreets.data.ON_STREET)\r\n                + \" - \" + titleCase(state.sources.historicStreets.data.PRIMARYROA))\r\n              } else {\r\n                return \"Street not designated as historic.\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Legal Card of City Street',\r\n            value: function(state) {\r\n              if (state.sources.histLegalCards.data) {\r\n                return \"<a href='\"+state.sources.histLegalCards.data.LINK + \"' target='_blank'>\\\r\n                View Image of Legal Card</a>\" } else {\r\n                return \"Legal card not available.\"\r\n              }\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        fields: [\r\n          {\r\n            label: 'Designated',\r\n            value: function (state, item) {\r\n              if(item.properties.DDESIGDATE != null){\r\n                return item.properties.DDESIGDATE\r\n              } else if(item.properties.IDESIGDATE1 != null){\r\n                return item.properties.IDESIGDATE1\r\n              } else if(item.properties.IDESIGDATE2 != null){\r\n                return item.properties.IDESIGDATE2\r\n              } else {\r\n                return \"Not Available\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            label: 'Address',\r\n            value: function (state, item) {\r\n              return item.properties.LOC\r\n            }\r\n          },\r\n          {\r\n            label: 'Distance',\r\n            value: function(state, item) {\r\n              return parseInt(item._distance) + ' ft';\r\n            }\r\n          }\r\n        ],\r\n        sort: {\r\n          // this should return the val to sort on\r\n          getValue: function(item) {\r\n            return item._distance;\r\n          },\r\n          // asc or desc\r\n          order: 'asc',\r\n        },\r\n        externalLink: {\r\n          forceShow: true,\r\n          action: function() {\r\n            return 'See a full map of all properties and districts from the Philadelphia Register of Historic Places.';\r\n          },\r\n          name: '',\r\n          href: function(state) {\r\n            // var address = state.geocode.data.properties.street_address;\r\n            // var addressEncoded = encodeURIComponent(address);\r\n            return '//phl.maps.arcgis.com/apps/View/index.html?appid=0a0b23447b6b4f7097d59c580b9045fe';\r\n          }\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Nearby Historic Places',\r\n        data: 'historicNearby',\r\n        items: function(state) {\r\n          var data = state.sources['historicNearby'].data || [];\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            // var itemRow = Object.assign({}, row);\r\n            return itemRow;\r\n          });\r\n          return rows;\r\n        },\r\n      } // end of slots\r\n    }, // end table\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Know a spot that seems historically important that isn\\'t listed? Learn about the \\\r\n        <a href=\"//www.phila.gov/historical/designation/Pages/criteria.aspx\" target=\"_blank\">criteria\\\r\n        </a> for designating properties as historic and how to \\\r\n        <a href=\"//www.phila.gov/historical/designation/Pages/process.aspx\" target=\"_blank\">nominate\\\r\n        </a> a property for historic designation. The federal <a href=\"//www.nps.gov/nr/\" target=\"_blank\">\\\r\n        National Registry</a> designates historic places worthy of preservation independently from the \\\r\n        Philadelphia Register and each confers different protections. Finally, you can learn more \\\r\n        about the Mayor\\'s Historic Preservation\\\r\n        <a href=\"http://phl.maps.arcgis.com/apps/Cascade/index.html?appid=925708a09f264efd94932dd9300921bd\" \\\r\n        target=\"_blank\">Task Force</a> created in May 2017.'\r\n      }\r\n    },\r\n  ],\r\n\r\n  basemap: 'pwd',\r\n  imagery: 'historic1910',\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd'\r\n}\r\n","import transforms from '../general/transforms';\r\nimport moment from 'moment';\r\nconst phone = transforms.phoneNumber.transform;\r\nconst titleCase = transforms.titleCase.transform;\r\nconst nth = transforms.nth.transform;\r\n\r\nexport default {\r\n  key: 'voting',\r\n  icon: 'gavel',\r\n  label: 'Voting',\r\n  dataSources: ['divisions', 'pollingPlaces', 'electedOfficials', 'nextElectionAPI'],\r\n  errorMessage: function() {\r\n    return ' ';\r\n  },\r\n  components: [\r\n    {\r\n      type: 'badge',\r\n      options: {\r\n        titleBackground: '#2176d2',\r\n        externalLink: {\r\n          data: 'Preview ballot',\r\n          // action: function(state){return 'Preview ballot'},\r\n          href: function(state) {\r\n            // var address = state.geocode.data.properties.street_address;\r\n            // var addressEncoded = encodeURIComponent(address);\r\n            return 'https://files.philadelphiavotes.com/ballot_paper/' + state.sources.electedOfficials.data.rows[0].ballot_file_id + '.pdf';\r\n          },\r\n        },\r\n      },\r\n      slots: {\r\n        title: 'Next Eligible Election Is',\r\n        value: function(state) {\r\n          return moment(state.sources.nextElectionAPI.data.election_date).format('dddd, LL');\r\n        },\r\n      }, // end slots\r\n    }, // end of badge\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          The deadline to register for the next election \\\r\n          is 30 days prior to the election. \\\r\n          You can confirm your registration and learn about \\\r\n          registering to vote<a target=\"_blank\" \\\r\n          href=\"//www.philadelphiavotes.com/en/voters/registering-to-vote\"> \\\r\n          here <i class=\"fa fa-external-link\"></i></a>.\\\r\n        ',\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      options: {\r\n        nullValue: 'None',\r\n        externalLink: {\r\n          action: function() {\r\n            return 'Learn about your voting options if you cannot vote in person on Election Day';\r\n          },\r\n          href: function(state) {\r\n            return 'https://www.philadelphiavotes.com/en/voters/absentee-and-alternative-ballots';\r\n          }\r\n        }\r\n      },\r\n      slots: {\r\n        title: 'Polling Place',\r\n        fields: [\r\n          {\r\n            label: 'Location',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n                   return \"<b>Ward \" + pollingData.WARD +\r\n                   \", Division \" + pollingData.DIVISION + \"</b><br>\" +\r\n                   titleCase(pollingData.PLACENAME) + \"<br>\" +\r\n                   titleCase(pollingData.STREET_ADDRESS) + \"<br>\\\r\n                   All locations are open on Election Day <br>from 7am to 8pm.\";\r\n                  },\r\n          },\r\n          {\r\n            label: 'Accessibility',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n              const answer = pollingData.ACCESSIBILITY_CODE== \"F\" ? 'Building Fully Accessible' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"B\" ? 'Building Substantially Accessible' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"M\" ? 'Building Accessibility Modified' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"A\" ? 'Alternate Entrance' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"R\" ? 'Building Accessible With Ramp' :\r\n                             pollingData.ACCESSIBILITY_CODE== \"N\" ? 'Building Not Accessible' :\r\n                            'Information not available';\r\n              return '<a href=\"//www.philadelphiavotes.com/en/voters/polling-place-accessibility\"\\\r\n                      target=\"_blank\">'+answer+' <i class=\"fa fa-external-link\"></i></a>';\r\n            },\r\n          },\r\n          {\r\n            label: 'Parking',\r\n            value: function(state) {\r\n              const pollingData = state.sources.pollingPlaces.data;\r\n              const parking = pollingData.PARKING_CODE == \"N\" ? 'No Parking' :\r\n                              pollingData.PARKING_CODE == \"G\" ? 'General Parking' :\r\n                              pollingData.PARKING_CODE == \"L\" ? 'Loading Zone' :\r\n                              'Information not available';\r\n              return parking;\r\n            },\r\n          },\r\n        ]\r\n      },\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      options: {\r\n        nullValue: 'None',\r\n        externalLink: {\r\n          action: function() {\r\n            return 'See all citywide, state, and federal representatives';\r\n          },\r\n          href: function(state) {\r\n            return '//www.philadelphiavotes.com/en/voters/elected-officials';\r\n          }\r\n        }\r\n      },\r\n\r\n      slots: {\r\n        title: 'Elected Representatives',\r\n        fields: [\r\n          {\r\n            label: 'District Council Member',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return '<a href=\"' + council[0].website + '\" target=\"_blank\">' +\r\n                council[0].first_name +\" \" +council[0].last_name + \" - \" + nth(state.geocode.data.properties.council_district_2016) + \" Council District \\\r\n                <i class='fa fa-external-link'></i></a>\";\r\n            },\r\n          },\r\n          {\r\n            label: 'City Hall Office',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return council[0].main_contact_address_2 + '<br>' +\r\n                     phone(council[0].main_contact_phone_1) + \", \" + phone(council[0].main_contact_phone_2) + '<br>\\\r\n                      F: '+ phone(council[0].main_contact_fax) + ' <br>\\\r\n                      <b><a href=mailto:\"' + council[0].email + '\">' + council[0].email + '</a></b>';\r\n            },\r\n          },\r\n          {\r\n            label: 'Current Term',\r\n            value: function(state) {\r\n              const council = state.sources.electedOfficials.data.rows.filter( function(item) {return item.office_label == \"City Council\";});\r\n              return council[0].next_election - 4 + ' - ' + council[0].next_election\r\n            },\r\n          },\r\n        ]\r\n      },\r\n    }, // end table\r\n  ],\r\n  zoomToShape: ['geojsonForTopic', 'markersForTopic'],\r\n  geojsonForTopic: {\r\n    data: function(state) {\r\n      return state.sources.divisions.data\r\n    },\r\n    key: 'id',\r\n    style: {\r\n      fillColor: '#9e9ac8',\r\n      color: '#9e9ac8',\r\n      weight: 2,\r\n      opacity: 1,\r\n      fillOpacity: 0.3\r\n    }\r\n  },\r\n  markersForTopic: {\r\n    data: function(state) {\r\n      return state.sources.pollingPlaces.data\r\n    },\r\n    lat: 'LAT',\r\n    lng: 'LON',\r\n    key: 'STREET_ADDRESS',\r\n    color: '#54278f',\r\n    icon: {\r\n      prefix: 'fas',\r\n      icon: 'landmark',\r\n      shadow: false,\r\n      size: 35,\r\n    }\r\n  },\r\n  basemap: 'pwd',\r\n  identifyFeature: 'address-marker',\r\n  parcels: 'pwd'\r\n}\r\n","/*\r\n   _____   __  .__\r\n  /  _  \\_/  |_|  | _____    ______\r\n /  /_\\  \\   __\\  | \\__  \\  /  ___/\r\n/    |    \\  | |  |__/ __ \\_\\___ \\\r\n\\____|__  /__| |____(____  /____  >\r\n        \\/               \\/     \\/\r\n*/\r\n\r\n\r\n// import * as Sentry from '@sentry/browser';\r\n// Sentry.init({ dsn: 'https://276ef359f45543ff91b7db449d3035f8@sentry.io/1330874' });\r\n\r\n// Font Awesome Icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome } from '@fortawesome/pro-solid-svg-icons/faHome';\r\nimport { faBook } from '@fortawesome/pro-solid-svg-icons/faBook';\r\nimport { faScrollOld } from '@fortawesome/pro-solid-svg-icons/faScrollOld';\r\nimport { faWrench } from '@fortawesome/pro-solid-svg-icons/faWrench';\r\nimport { faUniversity } from '@fortawesome/pro-solid-svg-icons/faUniversity';\r\nimport { faGavel } from '@fortawesome/pro-solid-svg-icons/faGavel';\r\nimport { faMapMarkerAlt } from '@fortawesome/pro-solid-svg-icons/faMapMarkerAlt';\r\nimport { faLandmark } from '@fortawesome/pro-solid-svg-icons/faLandmark';\r\nimport { faBuilding } from '@fortawesome/pro-solid-svg-icons/faBuilding';\r\nlibrary.add(faHome, faBook, faWrench, faUniversity, faGavel, faMapMarkerAlt, faLandmark, faBuilding, faScrollOld);\r\n\r\nimport accounting from 'accounting';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport mapboard from '@cityofphiladelphia/mapboard';\r\n\r\n// General Config Modules\r\nimport helpers from './util/helpers';\r\nimport map from './general/map';\r\nimport transforms from './general/transforms';\r\nimport parcels from './general/parcels';\r\nimport legendControls from './general/legendControls';\r\nimport imageOverlayGroups from './general/imageOverlayGroups';\r\nimport greeting from './general/greeting';\r\n\r\n// data sources\r\nimport threeOneOneCarto from './data-sources/311-carto';\r\nimport condoList from './data-sources/condo-list';\r\nimport crimeIncidents from './data-sources/crime-incidents';\r\nimport divisions from './data-sources/divisions';\r\nimport dorCondoList from './data-sources/dor-condo-list';\r\nimport dorDocuments from './data-sources/dor-documents';\r\nimport electedOfficials from './data-sources/elected-officials'\r\nimport histDesignated from './data-sources/historic';\r\nimport histDistrict from './data-sources/historic-distr';\r\nimport historicNearby from './data-sources/historic-nearby';\r\nimport histLegalCards from './data-sources/historic-legal-cards';\r\nimport historicStreets from './data-sources/historic-streets';\r\nimport liBusinessLicenses from './data-sources/li-business-licenses';\r\nimport liInspections from './data-sources/li-inspections';\r\nimport liPermits from './data-sources/li-permits';\r\nimport liViolations from './data-sources/li-violations';\r\nimport nearbyZoningAppeals from './data-sources/nearby-zoning-appeals';\r\nimport neighConservation from './data-sources/neigh-conservation';\r\nimport nextElectionAPI from './data-sources/election-next';\r\nimport opa from './data-sources/opa';\r\nimport pollingPlaces from './data-sources/polling-places';\r\nimport rco from './data-sources/rco';\r\nimport regmaps from './data-sources/regmaps';\r\nimport vacantIndicatorsPoints from './data-sources/vacant-indicator-points';\r\nimport zoningAppeals from './data-sources/zoning-appeals';\r\nimport zoningBase from './data-sources/zoning-base';\r\nimport zoningDocs from './data-sources/zoning-docs';\r\nimport zoningOverlay from './data-sources/zoning-overlay';\r\n// import charterSchools from './data-sources/charter-schools';\r\n// import neighboringProperties from './data-sources/neighboring-properties';\r\n\r\n// Topics\r\nimport property from './topics/property';\r\nimport condos from './topics/condos';\r\nimport deeds from './topics/deeds';\r\nimport li from './topics/li';\r\nimport zoning from './topics/zoning';\r\n// import polling from './topics/polling';\r\n// import rcoTopic from './topics/rco';\r\nimport nearby from './topics/nearby';\r\nimport historic from './topics/historic';\r\nimport voting from './topics/voting';\r\n\r\n// styles\r\n// TODO move all styles here (that have a npm package)\r\n// import './styles.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-easybutton/src/easy-button.css';\r\nimport 'leaflet-measure/dist/leaflet-measure.css';\r\n// REVIEW not sure why the hard path is necessary for vector icon\r\n// REVIEW the vector icons seem to be working without this - why?\r\n// import '../node_modules/@cityofphiladelphia/mapboard/node_modules/leaflet-vector-icon/dist/leaflet-vector-icon.css';\r\n\r\n// turn off console logging in production\r\n// TODO come up with better way of doing this with webpack + env vars\r\nconst { hostname='' } = location;\r\nif (hostname !== 'localhost' && !hostname.match(/(\\d+\\.){3}\\d+/)) {\r\n  console.log = console.info = console.debug = console.error = function () {};\r\n}\r\n\r\nvar BASE_CONFIG_URL = 'https://cdn.jsdelivr.net/gh/ajrothwell/mapboard-base-config@d18a86feb27b7e7c4496ed422ce30b5d80e64c1b/config.js';\r\n\r\n// configure accounting.js\r\naccounting.settings.currency.precision = 0;\r\n\r\nmapboard({\r\n  // DEV\r\n  // defaultAddress: '1234 MARKET ST',\r\n  // plugin: true,\r\n  panels: [\r\n    'topics',\r\n    'map'\r\n  ],\r\n  router: {\r\n    enabled: true\r\n  },\r\n  defaultAddressTextPlaceholder: {\r\n    // text: \"Search Address or 9-digit OPA Property Number\",\r\n    wideStyle: {\r\n      'max-width': '100%',\r\n      'font-size': '24px',\r\n      'line-height': '28px'\r\n    },\r\n    narrowStyle: {\r\n      'max-width': '100%',\r\n      'font-size': '20px',\r\n      'line-height': '24px'\r\n    }\r\n  },\r\n  geolocation: {\r\n    enabled: true\r\n  },\r\n  addressInput: {\r\n    width: 415,\r\n    mapWidth: 300,\r\n    position: 'right',\r\n    autocompleteEnabled: false,\r\n    autocompleteMax: 15,\r\n    placeholder: 'Search the map',\r\n  },\r\n  rootStyle: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  gatekeeperKey: helpers.GATEKEEPER_KEY,\r\n  map,\r\n  baseConfig: BASE_CONFIG_URL,\r\n  parcels,\r\n  imageOverlayGroups,\r\n  legendControls,\r\n  cyclomedia: {\r\n    enabled: true,\r\n    measurementAllowed: false,\r\n    popoutAble: true,\r\n  },\r\n  pictometry: {\r\n    enabled: true,\r\n  },\r\n  transforms,\r\n  greeting,\r\n  dataSources: {\r\n    threeOneOneCarto,\r\n    condoList,\r\n    crimeIncidents,\r\n    divisions,\r\n    dorCondoList,\r\n    dorDocuments,\r\n    electedOfficials,\r\n    liBusinessLicenses,\r\n    histDesignated,\r\n    histDistrict,\r\n    histLegalCards,\r\n    historicNearby,\r\n    historicStreets,\r\n    liInspections,\r\n    liPermits,\r\n    liViolations,\r\n    nearbyZoningAppeals,\r\n    neighConservation,\r\n    nextElectionAPI,\r\n    opa,\r\n    pollingPlaces,\r\n    rco,\r\n    regmaps,\r\n    vacantIndicatorsPoints,\r\n    zoningAppeals,\r\n    zoningBase,\r\n    zoningDocs,\r\n    zoningOverlay,\r\n    // charterSchools,\r\n    // neighboringProperties,\r\n  },\r\n  topics: [\r\n    property,\r\n    condos,\r\n    deeds,\r\n    li,\r\n    zoning,\r\n    historic,\r\n    // polling,\r\n    // rcoTopic,\r\n    voting,\r\n    nearby,\r\n  ],\r\n  components: [\r\n    {\r\n      type: 'topic-set',\r\n      options: {\r\n        defaultTopic: 'property'\r\n      }\r\n    },\r\n  ],\r\n});\r\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n","export default {\r\n  // possibly should move to base config\r\n  defaultBasemap: 'pwd',\r\n  defaultIdentifyFeature: 'address-marker',\r\n  imagery: {\r\n    enabled: true\r\n  },\r\n  initialImagery: 'imagery2018',\r\n}\r\n","export default {\r\n  pwd: {\r\n    multipleAllowed: false,\r\n    geocodeFailAttemptParcel: null,\r\n    clearStateOnError: false,\r\n    wipeOutOtherParcelsOnReverseGeocodeOnly: true,\r\n    geocodeField: 'PARCELID',\r\n    parcelIdInGeocoder: 'pwd_parcel_id',\r\n    getByLatLngIfIdFails: false\r\n  },\r\n  dor: {\r\n    multipleAllowed: true,\r\n    geocodeFailAttemptParcel: 'pwd',\r\n    clearStateOnError: true,\r\n    wipeOutOtherParcelsOnReverseGeocodeOnly: false,\r\n    geocodeField: 'MAPREG',\r\n    parcelIdInGeocoder: 'dor_parcel_id',\r\n    getByLatLngIfIdFails: true\r\n  }\r\n}\r\n","export default {\r\n  regmaps: {\r\n    items: function(state) {\r\n      // console.log('main.js imageOverlayGroups', state)\r\n      return state.sources.regmaps.data;\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  water: {\r\n    options: {\r\n      topics: ['water'],\r\n      showWithBaseMapOnly: false\r\n    },\r\n    // TODO give these an id instead of using the label as a key\r\n    data: {\r\n      'Roof': {\r\n        'background-color': '#FEFF7F',\r\n      },\r\n      'Other Impervious Surface': {\r\n        'background-color': '#F2DCFF',\r\n      }\r\n    }\r\n  },\r\n  deeds: {\r\n    options: {\r\n      topics: ['deeds', 'zoning'],\r\n      showWithBaseMapOnly: true\r\n    },\r\n    data: {\r\n      // TODO give these an id instead of using the label as a key\r\n      'Easements': {\r\n        'border-color': 'rgb(255, 0, 197)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      },\r\n      'Trans Parcels': {\r\n        'border-color': 'rgb(0, 168, 132)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      },\r\n      'Rights of Way': {\r\n        'border-color': 'rgb(249, 147, 0)',\r\n        'border-style': 'solid',\r\n        'border-weight': '1px',\r\n        'width': '12px',\r\n        'height': '12px',\r\n        'font-size': '10px',\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  message: '\\\r\n    <h2>Atlas is your front door to the City of Philadelphia.</h2>\\\r\n    <p>Here are some things you can do with Atlas:</p>\\\r\n    <div class=\"callout\">\\\r\n      <ul>\\\r\n        <li>Get the history of permits, licenses, and inspections at any address</li>\\\r\n        <li>Research real estate information including property values, zoning, and document archives</li>\\\r\n        <li>Get easy access to a variety of hard-to-find City resources</li>\\\r\n        <li>View recent activity around your address, such as crimes, 311 service requests, and more</li>\\\r\n        <li>Explore historical imagery and maps</li>\\\r\n      </ul>\\\r\n    </div>\\\r\n    <p>To get started, click anywhere on the map, or type an address, intersection, property assessment account number, or Department of Records Map Registry number into the search box.</p>\\\r\n  ',\r\n}\r\n","export default {\r\n  id: 'divisions',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Political_Divisions/FeatureServer/0',\r\n  type: 'esri',\r\n  options: {\r\n    relationship: 'contains',\r\n  },\r\n  success(data) {\r\n    return data;\r\n  },\r\n};\r\n","export default {\r\n  id: 'dorCondoList',\r\n  type: 'http-get',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state){\r\n        return \"select * from condominium where mapref = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'\\\r\n                                          and status in (1,3)\"\r\n      },\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'histDesignated',\r\n  url: 'http://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Historic_sites_PhilReg/FeatureServer/0',\r\n  type: 'esri',\r\n  options: {\r\n    relationship: 'contains',\r\n  },\r\n};\r\n","export default {\r\n  id: 'liInspections',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_case_inspections where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liPermits',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_permits where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'historicNearby',\r\n  type: 'esri-nearby',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/ArcGIS/rest/services/Historic_sites_PhilReg/FeatureServer/0/query',\r\n  options: {\r\n    geometryServerUrl: 'https://gis-utils.databridge.phila.gov/arcgis/rest/services/Utilities/Geometry/GeometryServer',\r\n    calculateDistance: true,\r\n    distances: 660,\r\n    limit: 10\r\n  },\r\n}\r\n","export default {\r\nid: 'histLegalCards',\r\n type: 'http-get',\r\n url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/ArcGIS/rest/services/Legal_Cards/FeatureServer/0/query',\r\n options: {\r\n   params: {\r\n     where: function(feature) {\r\n       return \"SEG_ID = '\" + feature.properties.seg_id + \"'\";\r\n     },\r\n     outFields: \"OBJECTID, LINK, ST_NAME, IMAGE_, MODDATE, STATUS, SEG_ID\",\r\n     returnDistinctValues: 'true',\r\n     returnGeometry: 'false',\r\n     f: 'json'\r\n   },\r\n   success: function(data) {\r\n     // console.log('polling-places.js success, data:', data);\r\n     if (data.features[0]) {\r\n       return data.features[0].attributes;\r\n     } else {\r\n       return null;\r\n     }\r\n   },\r\n }\r\n}\r\n","export default {\r\nid: 'historicStreets',\r\n type: 'http-get',\r\n url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Historic_Streets/FeatureServer/0/query',\r\n options: {\r\n   params: {\r\n     where: function(feature) {\r\n       return \"SEG_ID = '\" + feature.properties.seg_id + \"'\";\r\n     },\r\n     outFields: \"PRIMARYROA, RESPONSIBL, SEG_ID, ON_STREET, CLASS\",\r\n     returnDistinctValues: 'true',\r\n     returnGeometry: 'false',\r\n     f: 'json'\r\n   },\r\n   success: function(data) {\r\n     // console.log('polling-places.js success, data:', data);\r\n     if (data.features[0]) {\r\n       return data.features[0].attributes;\r\n     } else {\r\n       return null;\r\n     }\r\n   },\r\n }\r\n}\r\n","export default {\r\n  id: 'liBusinessLicenses',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      // q: function(feature){ return \"select * from li_business_licenses where street_address = '\" + feature.properties.street_address + \"'\"},// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n      q: function(feature){ return \"select * from li_business_licenses where eclipse_addressobjectid = '\" + feature.properties.eclipse_location_id + \"'\"},// + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\",\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'liViolations',\r\n  type: 'http-get',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature){ return \"select * from li_violations where address = '\" + feature.properties.street_address + \"' or addresskey = '\" + feature.properties.li_address_key.toString() + \"'\"},\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'nearbyZoningAppeals',\r\n  type: 'http-get-nearby',\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    table: 'li_appeals',\r\n    dateMinNum: 1,\r\n    dateMinType: 'year',\r\n    dateField: 'decisiondate',\r\n  }\r\n}\r\n","export default {\r\n  id: 'neighConservation',\r\n  type: 'esri',\r\n  url: 'https://services.arcgis.com/fLeGjb7u4uXqeF9q/ArcGIS/rest/services/Zoning_Overlays/FeatureServer/0',\r\n  options: {\r\n    relationship: 'contains',\r\n    where: \"OVERLAY_NAME LIKE '%Neighborhood Conservation%'\",\r\n  },\r\n}\r\n","export default {\r\n  id: 'nextElectionAPI',\r\n  type: 'http-get',\r\n  url: 'https://apis.philadelphiavotes.com/election',\r\n  options: {\r\n  },\r\n  success: function(data) {\r\n    return data;\r\n  }\r\n}\r\n","export default {\r\n  id: 'opa',\r\n  type: 'http-get',\r\n  url: 'https://data.phila.gov/resource/w7rb-qrn8.json',\r\n  options: {\r\n    params: {\r\n      parcel_number: function(feature) {\r\n        if(feature.properties.opa_account_num) {\r\n          return feature.properties.opa_account_num\r\n        } else {\r\n          return feature.properties.BRT_ID;\r\n        }\r\n      }\r\n    },\r\n    success: function(data) {\r\n      return data[0];\r\n    }\r\n  }\r\n}\r\n","export default {\r\nid: 'pollingPlaces',\r\n type: 'http-get',\r\n url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/POLLING_PLACES/FeatureServer/0/query',\r\n options: {\r\n   params: {\r\n     where: function(feature) {\r\n       return \"PRECINCT = '\" + feature.properties.election_precinct + \"'\";\r\n     },\r\n     outFields: \"WARD, DIVISION, PRECINCT, PLACENAME,\\\r\n                 STREET_ADDRESS, ZIP_CODE, ACCESSIBILITY_CODE, PARKING_CODE,\\\r\n                 LAT, LON\",\r\n     returnDistinctValues: 'true',\r\n     returnGeometry: 'false',\r\n     f: 'json'\r\n   },\r\n   success: function(data) {\r\n     // console.log('polling-places.js success, data:', data);\r\n     if (data.features[0]) {\r\n       return data.features[0].attributes;\r\n     } else {\r\n       return null;\r\n     }\r\n   },\r\n }\r\n}\r\n","export default {\r\n  id: 'rco',\r\n  type: 'esri',\r\n  url: '//services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/Zoning_RCO/FeatureServer/0',\r\n  options: {\r\n    relationship: 'contains',\r\n  },\r\n  // success(data) {\r\n  //   // format phone numbers\r\n  //   console.log('rco success', data);\r\n  //\r\n  //   var s2 = (\"\"+s).replace(/\\D/g, '');\r\n  //   var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n  //   return (!m) ? null : \"(\" + m[1] + \") \" + m[2] + \"-\" + m[3];\r\n  //\r\n  //   return data;\r\n  // }\r\n}\r\n","export default {\r\n  id: 'zoningBase',\r\n  type: 'http-get',\r\n  dependent: 'parcel',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state) {\r\n        // console.log('feature:', feature, 'state.parcels.dor:', state.parcels.dor, 'state.parcels.dor.data[0]', state.parcels.dor.data[0]);\r\n        // var stmt = \"with all_zoning as (select * from zoning_basedistricts),\"\r\n        //          + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.MAPREG + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'),\"\r\n        //          + \"zp as (select all_zoning.* from all_zoning, parcel where st_intersects(parcel.the_geom, all_zoning.the_geom)),\"\r\n        //          // + \"select zp.source_object_id, zp.value, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as geom from zp, parcel\";\r\n        //          + \"total as (select zp.objectid, zp.long_code, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as overlap_area from zp, parcel)\"\r\n        //          + \"select * from total where overlap_area >= 0.01\"\r\n        //          // + \"select * from zp\";\r\n        var mapreg = feature.properties.MAPREG,\r\n            stmt = \"\\\r\n              WITH all_zoning AS \\\r\n                ( \\\r\n                  SELECT * \\\r\n                  FROM   phl.zoning_basedistricts \\\r\n                ), \\\r\n              parcel AS \\\r\n                ( \\\r\n                  SELECT * \\\r\n                  FROM   phl.dor_parcel \\\r\n                  WHERE  dor_parcel.mapreg = '\" + mapreg + \"' \\\r\n                ), \\\r\n              zp AS \\\r\n                ( \\\r\n                  SELECT all_zoning.* \\\r\n                  FROM   all_zoning, parcel \\\r\n                  WHERE  St_intersects(parcel.the_geom, all_zoning.the_geom) \\\r\n                ), \\\r\n              combine AS \\\r\n                ( \\\r\n                  SELECT zp.objectid, \\\r\n                  zp.long_code, \\\r\n                  zp.pending, \\\r\n                  zp.pendingbill, \\\r\n                  zp.pendingbillurl, \\\r\n                  St_area(St_intersection(zp.the_geom, parcel.the_geom)) / St_area(parcel.the_geom) AS overlap_area \\\r\n                  FROM zp, parcel \\\r\n                ), \\\r\n              total AS \\\r\n                ( \\\r\n                  SELECT long_code, pending, pendingbill, pendingbillurl, sum(overlap_area) as sum_overlap_area \\\r\n                  FROM combine \\\r\n                  GROUP BY long_code, pending, pendingbill, pendingbillurl \\\r\n                ) \\\r\n              SELECT * \\\r\n              FROM total \\\r\n              WHERE sum_overlap_area >= 0.01 \\\r\n            \";\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  id: 'zoningOverlay',\r\n  type: 'http-get',\r\n  dependent: 'parcel',\r\n  targets: {\r\n    get: function(state) {\r\n      return state.parcels.dor.data;\r\n    },\r\n    getTargetId: function(target) {\r\n      return target.properties.OBJECTID;\r\n    },\r\n  },\r\n  url: 'https://phl.carto.com/api/v2/sql',\r\n  options: {\r\n    params: {\r\n      q: function(feature, state) {\r\n        // var stmt = \"with all_zoning as (select * from zoning_overlays),\"\r\n        //          + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.dor_parcel_id + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + feature.properties.MAPREG + \"'),\"\r\n        //          // + \"parcel as (select * from dor_parcel where dor_parcel.mapreg = '\" + state.parcels.dor.data[0].properties.MAPREG + \"'),\"\r\n        //          + \"zp as (select all_zoning.* from all_zoning, parcel where st_intersects(parcel.the_geom, all_zoning.the_geom)),\"\r\n        //          + \"total as (select zp.*, st_area(st_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) as overlap_area from zp, parcel)\"\r\n        //          + \"select * from total where overlap_area >= 0.01\"\r\n        var mapreg = feature.properties.MAPREG,\r\n            stmt = \"\\\r\n            WITH all_zoning AS \\\r\n              ( \\\r\n                SELECT * \\\r\n                FROM   phl.zoning_overlays \\\r\n              ), \\\r\n            parcel AS \\\r\n              ( \\\r\n                SELECT * \\\r\n                FROM   phl.dor_parcel \\\r\n                WHERE  dor_parcel.mapreg = '\" + mapreg + \"' \\\r\n              ), \\\r\n            zp AS \\\r\n              ( \\\r\n                SELECT all_zoning.* \\\r\n                FROM all_zoning, parcel \\\r\n                WHERE st_intersects(parcel.the_geom, all_zoning.the_geom) \\\r\n              ), \\\r\n            total AS \\\r\n              ( \\\r\n                SELECT zp.*, st_area(St_intersection(zp.the_geom, parcel.the_geom)) / st_area(parcel.the_geom) AS overlap_area \\\r\n                FROM   zp, parcel \\\r\n              ) \\\r\n            SELECT cartodb_id, \\\r\n                  code_section, \\\r\n                  code_section_link, \\\r\n                  objectid, \\\r\n                  overlap_area, \\\r\n                  overlay_name, \\\r\n                  overlay_symbol, \\\r\n                  pending, \\\r\n                  pendingbill, \\\r\n                  pendingbillurl, \\\r\n                  sunset_date, \\\r\n                  type \\\r\n            FROM total \\\r\n            WHERE overlap_area >= 0.01 \\\r\n          \";\r\n        return stmt;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  key: 'property',\r\n  icon: 'home',\r\n  label: 'Property Assessments',\r\n  // REVIEW can these be calculated from vue deps?\r\n  dataSources: ['opa'],\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: '\\\r\n          Property assessment and sale information for this address. Source: Office of Property Assessments (OPA). OPA was formerly a part of the Bureau of Revision of Taxes (BRT) and some City records may still use that name.\\\r\n        '\r\n      }\r\n    },\r\n    {\r\n      type: 'vertical-table',\r\n      slots: {\r\n        fields: [\r\n          {\r\n            label: 'OPA Account #',\r\n            value: function(state) {\r\n              return state.geocode.data.properties.opa_account_num;\r\n            }\r\n          },\r\n          {\r\n            label: 'OPA Address',\r\n            value: function(state) {\r\n              return state.geocode.data.properties.opa_address;\r\n            }\r\n          },\r\n          {\r\n            label: 'Owners',\r\n            value: function(state) {\r\n              var owners = state.geocode.data.properties.opa_owners;\r\n              var ownersJoined = owners.join(', ');\r\n              return ownersJoined;\r\n            }\r\n          },\r\n          {\r\n            label: 'Assessed Value',// + new Date().getFullYear(),\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.market_value;\r\n              var result;\r\n              if (data) {\r\n                result = data.market_value;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'currency'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Sale Date',\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.sale_date;\r\n              var result;\r\n              if (data) {\r\n                result = data.sale_date;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'date'\r\n            ]\r\n          },\r\n          {\r\n            label: 'Sale Price',\r\n            value: function(state) {\r\n              var data = state.sources.opa.data;\r\n              // return data.sale_price;\r\n              var result;\r\n              if (data) {\r\n                result = data.sale_price;\r\n              } else {\r\n                result = 'no data';\r\n              }\r\n              return result;\r\n            },\r\n            transforms: [\r\n              'currency'\r\n            ]\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        id: 'opaData',\r\n        // requiredSources: ['opa'],\r\n        externalLink: {\r\n          action: function(count) {\r\n            return 'See more';\r\n          },\r\n          name: 'Property Search',\r\n          href: function(state) {\r\n            var id = state.geocode.data.properties.opa_account_num;\r\n            return 'http://property.phila.gov/?p=' + id;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //     ]\r\n    //   }\r\n    // }\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  // we might not need this anymore, now that we have identifyFeature\r\n  parcels: 'pwd',\r\n  errorMessage: function (state) {\r\n    var data = state.sources.condoList.data;\r\n        // features = data.features;\r\n\r\n    if (data) {\r\n      var numCondos = data.total_size;\r\n\r\n      if (numCondos > 0) {\r\n        var shouldPluralize = numCondos > 1,\r\n            isOrAre = shouldPluralize ? 'are' : 'is',\r\n            unitOrUnits = shouldPluralize ? 'units' : 'unit',\r\n            message = [\r\n              '<h3>',\r\n              'There ',\r\n              isOrAre,\r\n              // ' <strong>',\r\n              ' ',\r\n              numCondos,\r\n              ' condominium ',\r\n              unitOrUnits,\r\n              // '</strong> at this address.</h3>',\r\n              ' at this address.</h3>',\r\n              // ' at this address. ',\r\n              '<p>You can use the Condominiums tab below to see information for an individual unit.</p>'\r\n              // 'Please select a unit from the Condominiums tab below.'\r\n            ].join('');\r\n\r\n        return message;\r\n      }\r\n    } else {\r\n      return 'There is no property assessment record for this address.';\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  key: 'condos',\r\n  icon: 'building',\r\n  label: 'Condominiums',\r\n  dataSources: ['condoList'],\r\n  showTopicBasedOnOtherData: {\r\n    'otherData': {\r\n      'opa': {\r\n        data: undefined\r\n      }\r\n    },\r\n    'requiredData': {\r\n      'condoList': {\r\n        pathToDataArray: ['features'],\r\n        minDataLength: 1,\r\n      }\r\n    }\r\n  },\r\n  // showTopicOnlyIfDataExists can be overruled by showTopicBasedOnOtherData\r\n  showTopicOnlyIfDataExists: {\r\n    'condoList': {\r\n      pathToDataArray: ['features'],\r\n      minDataLength: 2,\r\n    }\r\n  },\r\n  components: [\r\n    {\r\n      type: 'callout',\r\n      slots: {\r\n        text: 'Condominium units at your search address, as recorded for property assessment purposes. Click one of the addresses below to see information for that unit.  Use the back button to return to this list. Source: Office of Property Assessment'\r\n      }\r\n    },\r\n    {\r\n      type: 'horizontal-table',\r\n      options: {\r\n        id: 'condoList',\r\n        useApiCount: true,\r\n        defaultIncrement: 25,\r\n        fields: [\r\n          {\r\n            label: 'Address',\r\n            value: function (state, item) {\r\n              var address = item.properties.street_address;\r\n              return '<a href=\"#/' + address + '/property\">' + address + '</a>';\r\n            },\r\n          },\r\n          {\r\n            label: 'OPA Account #',\r\n            value: function (state, item) {\r\n              return item.properties.opa_account_num;\r\n            },\r\n          },\r\n        ], // end fields\r\n        // sort: {\r\n        //   // this should return the val to sort on\r\n        //   getValue: function(item) {\r\n        //     // return item.attributes.RECORDING_DATE;\r\n        //     return item.attributes.DOCUMENT_DATE;\r\n        //   },\r\n        //   // asc or desc\r\n        //   order: 'desc'\r\n        // }\r\n      },\r\n      slots: {\r\n        title: 'Condominiums',\r\n        highestPageRetrieved: function(state) { return state.sources['condoList'].data.page },\r\n        pageCount: function(state) { return state.sources['condoList'].data.page_count },\r\n        totalSize: function(state) { return state.sources['condoList'].data.total_size },\r\n        items: function(state) {\r\n          var data = state.sources['condoList'].data.features;\r\n          var rows = data.map(function(row){\r\n            var itemRow = row;\r\n            return itemRow;\r\n          });\r\n          return rows;\r\n        },\r\n      } // end slots\r\n    },\r\n  ],\r\n  identifyFeature: 'address-marker',\r\n  // we might not need this anymore, now that we have identifyFeature\r\n  parcels: 'pwd'\r\n}\r\n","\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\nexport function toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nexport function fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\nexport function read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexport function write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nimport * as base64 from './base64'\nimport * as ieee754 from './ieee754'\nimport isArray from './isArray'\n\nexport var INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength()\nexport {_kMaxLength as kMaxLength};\nfunction typedArraySupport () {\n  return true;\n  // rollup issues\n  // try {\n  //   var arr = new Uint8Array(1)\n  //   arr.__proto__ = {\n  //     __proto__: Uint8Array.prototype,\n  //     foo: function () { return 42 }\n  //   }\n  //   return arr.foo() === 42 && // typed array instances can be augmented\n  //       typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n  //       arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  // } catch (e) {\n  //   return false\n  // }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    // Object.defineProperty(Buffer, Symbol.species, {\n    //   value: null,\n    //   configurable: true\n    // })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nexport function SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nexport function isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nexport function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nexport var title = 'browser';\nexport var platform = 'browser';\nexport var browser = true;\nexport var env = {};\nexport var argv = [];\nexport var version = ''; // empty string to avoid regexp issues\nexport var versions = {};\nexport var release = {};\nexport var config = {};\n\nfunction noop() {}\n\nexport var on = noop;\nexport var addListener = noop;\nexport var once = noop;\nexport var off = noop;\nexport var removeListener = noop;\nexport var removeAllListeners = noop;\nexport var emit = noop;\n\nexport function binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nexport function cwd () { return '/' }\nexport function chdir (dir) {\n    throw new Error('process.chdir is not supported');\n};\nexport function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nexport function hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nexport function uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nexport default {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","var toString = {}.toString;\n\nexport default Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n","import { parse as parseUrl } from 'url';\r\n\r\nclass Router {\r\n  constructor(opts) {\r\n    const config = this.config = opts.config;\r\n    this.store = opts.store;\r\n    this.controller = opts.controller;\r\n    this.dataManager = opts.dataManager;\r\n    this.history = window.history;\r\n\r\n    // check if the router should be silent (i.e. not update the url or listen\r\n    // for hash changes)\r\n    const silent = this.silent = !config.router || !config.router.enabled;\r\n\r\n    // only listen for route changes if routing is enabled\r\n    if (!silent) {\r\n      window.onhashchange = this.hashChanged.bind(this);\r\n    }\r\n  }\r\n\r\n  activeTopicConfig() {\r\n    const key = this.store.state.activeTopic;\r\n    let config;\r\n\r\n    // if no active topic, return null\r\n    if (key) {\r\n      config = this.config.topics.filter((topic) => {\r\n        return topic.key === key;\r\n      })[0];\r\n    }\r\n\r\n    return config || {};\r\n  }\r\n\r\n  activeParcelLayer() {\r\n    if (this.config.map) {\r\n      return this.activeTopicConfig().parcels || this.config.map.defaultBasemap;\r\n    } else {\r\n      return this.activeTopicConfig().parcels;\r\n    }\r\n  }\r\n\r\n  makeHash(address, topic) {\r\n    // console.log('make hash', address, topic);\r\n\r\n    // must have an address\r\n    if (!address || address.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let hash = `#/${encodeURIComponent(address)}`;\r\n    if (topic) {\r\n      hash += `/${topic}`;\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  getAddressFromState() {\r\n    // TODO add an address getter fn to config so this isn't ais-specific\r\n    const geocodeData = this.store.state.geocode.data || {};\r\n    const props = geocodeData.properties || {};\r\n    if (geocodeData.street_address) {\r\n      return geocodeData.street_address;\r\n    } else if (props.street_address) {\r\n      return props.street_address;\r\n    }\r\n  }\r\n\r\n  hashChanged() {\r\n    // console.log('hashChanged is running, this.store.state.activeTopic:', this.store.state.activeTopic);\r\n    const location = window.location;\r\n    const hash = location.hash;\r\n\r\n    // parse url\r\n    const comps = parseUrl(location.href);\r\n    const query = comps.query;\r\n\r\n    // TODO handle ?search entry point\r\n    // if (query && query.search) {\r\n    // }\r\n\r\n    // parse path\r\n    const pathComps = hash.split('/').splice(1);\r\n    const addressComp = pathComps[0];\r\n\r\n    // if there's no address, erase it\r\n    if (!addressComp) {\r\n      this.routeToModal('');\r\n      this.dataManager.resetGeocode();\r\n      return;\r\n    }\r\n\r\n    const nextAddress = decodeURIComponent(addressComp);\r\n    let nextTopic;\r\n\r\n    const modalKeys = this.config.modals || [];\r\n    // console.log('pathComps:', pathComps, 'modalKeys:', modalKeys);\r\n    if (modalKeys.includes(pathComps[0])) {\r\n      // console.log('if pathComps[0] is true');\r\n      this.routeToModal(pathComps[0]);\r\n      return;\r\n    }\r\n\r\n    if (pathComps.length > 1) {\r\n      nextTopic = decodeURIComponent(pathComps[1]);\r\n    }\r\n\r\n    if (this.store.state.lastSearchMethod) {\r\n      this.store.commit('setLastSearchMethod', 'geocode');\r\n    }\r\n\r\n    this.routeToAddress(nextAddress);\r\n    if (this.store.state.activeTopic || this.store.state.activeTopic === \"\") {\r\n      if (this.config.topics.length) {\r\n        this.routeToTopic(nextTopic);\r\n      }\r\n    }\r\n  }\r\n\r\n  routeToAddress(nextAddress, searchCategory) {\r\n    // console.log('Router.routeToAddress', nextAddress);\r\n    if (nextAddress) {\r\n      // check against current address\r\n      const prevAddress = this.getAddressFromState();\r\n\r\n      // if the hash address is different, geocode\r\n      if (!prevAddress || nextAddress !== prevAddress) {\r\n        // console.log('routeToAddress is calling datamanager.geocode(nextAddress):', nextAddress);\r\n        this.dataManager.geocode(nextAddress, searchCategory);\r\n        // this.dataManager.geocode(nextAddress, 'address')\r\n                        // .then(this.didGeocode.bind(this));\r\n      }\r\n    }\r\n  }\r\n\r\n  routeToOwner(nextOwner, searchCategory) {\r\n    // console.log('Router.routeToAddress', nextAddress);\r\n    if (nextOwner) {\r\n      // check against current address\r\n      // const prevOwner = this.getAddressFromState();\r\n\r\n      // if the hash address is different, geocode\r\n      // if (!prevAddress || nextAddress !== prevAddress) {\r\n        // console.log('routeToAddress is calling datamanager.geocode(nextAddress):', nextAddress);\r\n        this.dataManager.geocode(nextOwner, searchCategory);\r\n        // this.dataManager.geocode(nextOwner, 'owner')\r\n                        // .then(this.didGeocode.bind(this));\r\n      // }\r\n    }\r\n  }\r\n\r\n  configForBasemap(key) {\r\n    return this.config.map.basemaps[key];\r\n  }\r\n\r\n  routeToModal(selectedModal) {\r\n    // console.log('routeToModal is running, selectedModal:', selectedModal);\r\n    this.store.commit('setDidToggleModal', selectedModal);\r\n  }\r\n\r\n  // this gets called when you click a topic header.\r\n  routeToTopic(nextTopic, target) {\r\n    // console.log('router.js routeToTopic is running');\r\n    // check against active topic\r\n    const prevTopic = this.store.state.activeTopic;\r\n\r\n    if (!prevTopic || prevTopic !== nextTopic) {\r\n      this.store.commit('setActiveTopic', nextTopic);\r\n      this.store.commit('setActiveParcelLayer', this.activeParcelLayer());\r\n\r\n      if (this.store.state.map) {\r\n        const prevBasemap = this.store.state.map.basemap || null;\r\n        const nextTopicConfig = this.config.topics.filter(topic => {\r\n          return topic.key === nextTopic;\r\n        })[0] || {};\r\n        const nextBasemap = nextTopicConfig.parcels;\r\n        const nextImagery = nextTopicConfig.imagery;\r\n        if (prevBasemap !== nextBasemap) {\r\n          this.store.commit('setBasemap', nextTopicConfig.parcels);\r\n        }\r\n        if (nextImagery) {\r\n          this.store.commit('setShouldShowImagery', true);\r\n          this.store.commit('setImagery', nextImagery);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!this.silent) {\r\n      const address = this.getAddressFromState();\r\n      const nextHash = this.makeHash(address, nextTopic);\r\n      const lastHistoryState = this.history.state;\r\n      this.history.replaceState(lastHistoryState, null, nextHash);\r\n    }\r\n  }\r\n\r\n  didGeocode() {\r\n    const geocodeData = this.store.state.geocode.data;\r\n\r\n    // make hash if there is geocode data\r\n    // console.log('Router.didGeocode running - geocodeData:', geocodeData);\r\n    if (geocodeData) {\r\n      let address;\r\n\r\n      if (geocodeData.street_address) {\r\n        address = geocodeData.street_address;\r\n      } else if (geocodeData.properties.street_address) {\r\n        address = geocodeData.properties.street_address;\r\n      }\r\n\r\n      if (this.config.router.returnToDefaultTopicOnGeocode) {\r\n        this.store.commit('setActiveTopic', this.config.defaultTopic);\r\n      }\r\n\r\n      const topic = this.store.state.activeTopic;\r\n\r\n      // REVIEW this is only pushing state when routing is turned on. but maybe we\r\n      // want this to happen all the time, right?\r\n      if (!this.silent) {\r\n        // push state\r\n        const nextHistoryState = {\r\n          geocode: geocodeData\r\n        };\r\n        const nextHash = this.makeHash(address, topic);\r\n        // console.log('nextHistoryState', nextHistoryState, 'nextHash', nextHash);\r\n        this.history.pushState(nextHistoryState, null, nextHash);\r\n      }\r\n    } else {\r\n      // wipe out hash if a geocode fails\r\n      if (!this.silent) {\r\n        this.history.pushState(null, null, '#');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { getCoord } from '@turf/invariant';\nimport { degreesToRadians, isObject, radiansToLength } from '@turf/helpers';\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians((coordinates2[1] - coordinates1[1]));\n    var dLon = degreesToRadians((coordinates2[0] - coordinates1[0]));\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\nexport default distance;\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","class BaseClient {\r\n  constructor(opts) {\r\n    this.config = opts.config;\r\n    this.store = opts.store;\r\n    this.dataManager = opts.dataManager;\r\n  }\r\n\r\n  evaluateParams(feature, dataSource) {\r\n    // console.log('base-client evaluateParams is running')\r\n    const params = {};\r\n    if (!dataSource.options.params) { return params };\r\n    const paramEntries = Object.entries(dataSource.options.params);\r\n    const state = this.store.state;\r\n\r\n    for (let [key, valOrGetter] of paramEntries) {\r\n      let val;\r\n\r\n      if (typeof valOrGetter === 'function') {\r\n        val = valOrGetter(feature, state);\r\n      } else {\r\n        val = valOrGetter;\r\n      }\r\n\r\n      params[key] = val;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  assignFeatureIds(features, dataSourceKey, topicId) {\r\n    const featuresWithIds = [];\r\n\r\n    // REVIEW this was not working with Array.map for some reason\r\n    // it was returning an object when fetchJson was used\r\n    // that is now converted to an array in fetchJson\r\n    for (let i = 0; i < features.length; i++) {\r\n      const suffix = (topicId ? topicId + '-' : '') + i;\r\n      const id = `feat-${dataSourceKey}-${suffix}`;\r\n      const feature = features[i];\r\n      // console.log(dataSourceKey, feature);\r\n      try {\r\n        feature._featureId = id;\r\n      }\r\n      catch (e) {\r\n        console.warn(e);\r\n      }\r\n      featuresWithIds.push(feature);\r\n    }\r\n\r\n    // console.log(dataSourceKey, features, featuresWithIds);\r\n    return featuresWithIds;\r\n  }\r\n\r\n  didFetch(key, status, data, targetId) {\r\n    // console.log('DID FETCH DATA:', key, targetId || '', data);\r\n\r\n    const dataOrNull = status === 'error' ? null : data;\r\n    let stateData = dataOrNull;\r\n\r\n    // if this is an array, assign feature ids\r\n    if (Array.isArray(stateData)) {\r\n      stateData = this.assignFeatureIds(stateData, key, targetId);\r\n    }\r\n\r\n    // does this data source have targets?\r\n    // const targets = this.config.dataSources[key].targets;\r\n\r\n    // put data in state\r\n    const setSourceDataOpts = {\r\n      key,\r\n      data: stateData,\r\n    };\r\n    const setSourceStatusOpts = {\r\n      key,\r\n      status\r\n    };\r\n    if (targetId) {\r\n      setSourceDataOpts.targetId = targetId;\r\n      setSourceStatusOpts.targetId = targetId;\r\n    }\r\n\r\n    // commit\r\n    this.store.commit('setSourceData', setSourceDataOpts);\r\n    this.store.commit('setSourceStatus', setSourceStatusOpts);\r\n\r\n    // try fetching more data\r\n    console.log('171111 base-client js is calling fetchData()')\r\n    this.fetchData();\r\n  }\r\n}\r\n\r\nexport default BaseClient;\r\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import axios from 'axios';\r\nimport BaseClient from './base-client';\r\n\r\n// the high-level purpose of this is: take an address, geocode it, and put\r\n// the result in state.\r\nclass GeocodeClient extends BaseClient {\r\n  // fetch(input, category) {\r\n  fetch(input) {\r\n    console.log('geocode client fetch', input);\r\n\r\n    const store = this.store;\r\n    let geocodeConfig;\r\n\r\n    geocodeConfig = this.config.geocoder;\r\n    const url = geocodeConfig.url(input);\r\n    const params = geocodeConfig.params;\r\n\r\n    // update state\r\n    this.store.commit('setGeocodeStatus', 'waiting');\r\n\r\n    const success = this.success.bind(this);\r\n    const error = this.error.bind(this);\r\n\r\n    // return a promise that can accept further chaining\r\n    return axios.get(url, { params })\r\n      .then(success)\r\n      .catch(error);\r\n  }\r\n\r\n  success(response) {\r\n    const store = this.store;\r\n    const data = response.data;\r\n    const url = response.config.url;\r\n\r\n    // TODO handle multiple results\r\n\r\n    if (!data.features || data.features.length < 1) {\r\n      return;\r\n    }\r\n\r\n    let features = data.features;\r\n    features = this.assignFeatureIds(features, 'geocode');\r\n\r\n    // TODO do some checking here\r\n    let feature = features[0];\r\n    let relatedFeatures = [];\r\n    for (let relatedFeature of features.slice(1)){\r\n      if (!!feature.properties.address_high) {\r\n        if (relatedFeature.properties.address_high) {\r\n          relatedFeatures.push(relatedFeature);\r\n        }\r\n      } else {\r\n        relatedFeatures.push(relatedFeature);\r\n      }\r\n    }\r\n    store.commit('setGeocodeData', feature);\r\n    store.commit('setGeocodeRelated', relatedFeatures);\r\n    store.commit('setGeocodeStatus', 'success');\r\n    return feature;\r\n  }\r\n\r\n  error(error) {\r\n    const store = this.store;\r\n    store.commit('setGeocodeStatus', 'error');\r\n    store.commit('setGeocodeData', null);\r\n    store.commit('setGeocodeRelated', null);\r\n  }\r\n}\r\n\r\nexport default GeocodeClient;\r\n","import axios from 'axios';\r\nimport BaseClient from './base-client';\r\n\r\n// the high-level purpose of this is: take a person, search AIS for them, and put\r\n// the result in state.\r\nclass OwnerSearchClient extends BaseClient {\r\n  fetch(input) {\r\n    console.log('owner search client fetch', input);\r\n\r\n    const store = this.store;\r\n\r\n    const ownerSearchConfig = this.config.ownerSearch;\r\n    // console.log('owner search-client, ownerSearchConfig:', ownerSearchConfig);\r\n    const url = ownerSearchConfig.url(input);\r\n    const params = ownerSearchConfig.params;\r\n\r\n    // update state\r\n    this.store.commit('setOwnerSearchStatus', 'waiting');\r\n    // console.log('OWNER SEARCH CLIENT setting last search method to owner search');\r\n    // this.store.commit('setLastSearchMethod', 'owner search');\r\n\r\n    const success = this.success.bind(this);\r\n    const error = this.error.bind(this);\r\n\r\n    // return a promise that can accept further chaining\r\n    return axios.get(url, { params })\r\n      .then(success)\r\n      .catch(error);\r\n  }\r\n\r\n  success(response) {\r\n    console.log('owner search success', response.config.url);\r\n\r\n    const store = this.store;\r\n    const data = response.data;\r\n    const url = response.config.url;\r\n    // console.log(url)\r\n\r\n    // TODO handle multiple results\r\n\r\n    if (!data.features || data.features.length < 1) {\r\n      // console.log('owner search got no features', data);\r\n\r\n      return;\r\n    }\r\n\r\n    let features = data.features;\r\n    features = this.assignFeatureIds(features, 'owner');\r\n\r\n    // TODO do some checking here\r\n    // const feature = data.features[0];\r\n    // let relatedFeatures = [];\r\n    // for (let relatedFeature of data.features.slice(1)){\r\n    //   if (!!feature.properties.address_high) {\r\n    //     if (relatedFeature.properties.address_high) {\r\n    //       relatedFeatures.push(relatedFeature);\r\n    //     }\r\n    //   } else {\r\n    //     relatedFeatures.push(relatedFeature);\r\n    //   }\r\n    // }\r\n\r\n    store.commit('setOwnerSearchData', features);\r\n    // store.commit('setOwnerSearchData', data.features);\r\n    // store.commit('setOwnerSearchRelated', relatedFeatures);\r\n    store.commit('setOwnerSearchStatus', 'success');\r\n\r\n    return features;\r\n  }\r\n\r\n  error(error) {\r\n    console.log('owner search error', error);\r\n\r\n    const store = this.store;\r\n\r\n    store.commit('setOwnerSearchStatus', 'error');\r\n    store.commit('setOwnerSearchData', null);\r\n    // store.commit('setOwnerSearchRelated', null);\r\n  }\r\n}\r\n\r\nexport default OwnerSearchClient;\r\n","import axios from 'axios';\r\nimport { format, subHours, addHours, subDays, addDays, subWeeks, addWeeks, subMonths, addMonths, subYears, addYears, isWithinRange } from 'date-fns';\r\nimport BaseClient from './base-client';\r\n\r\nclass HttpClient extends BaseClient {\r\n  // evaluateParams(feature, dataSource) {\r\n  //   console.log('http-client evaluateParams is running');\r\n  //   const params = {};\r\n  //   if (!dataSource.options.params) { return params };\r\n  //   const paramEntries = Object.entries(dataSource.options.params);\r\n  //   const state = this.store.state;\r\n  //\r\n  //   for (let [key, valOrGetter] of paramEntries) {\r\n  //     let val;\r\n  //\r\n  //     if (typeof valOrGetter === 'function') {\r\n  //       val = valOrGetter(feature, state);\r\n  //     } else {\r\n  //       val = valOrGetter;\r\n  //     }\r\n  //\r\n  //     params[key] = val;\r\n  //   }\r\n  //\r\n  //   return params;\r\n  // }\r\n\r\n  fetch(feature, dataSource, dataSourceKey, targetIdFn) {\r\n    let params = this.evaluateParams(feature, dataSource);\r\n    // console.log('http-client fetch, feature:', feature, 'dataSource:', dataSource, 'dataSourceKey:', dataSourceKey, 'targetIdFn:', targetIdFn, 'params:', params);\r\n    let url = dataSource.url;\r\n    const options = dataSource.options;\r\n    const urlAddition = params.urlAddition;\r\n    if (urlAddition) {\r\n      url += encodeURIComponent(urlAddition);\r\n      // url += encodeURIComponent(urlAddition.properties.street_address);\r\n    }\r\n    // console.log('url', url);\r\n    // console.log('http-client fetch, feature:', feature, 'dataSource:', dataSource, 'dataSourceKey:', dataSourceKey, 'targetIdFn:', targetIdFn, 'params:', params);\r\n    const successFn = options.success;\r\n\r\n    if (params.urlAddition) {\r\n      delete params['urlAddition'];\r\n    }\r\n\r\n    // if the data is not dependent on other data\r\n    axios.get(url, { params }).then(response => {\r\n      // call success fn\r\n      let data = response.data;\r\n\r\n      if (successFn) {\r\n        data = successFn(data);\r\n      }\r\n\r\n      // get target id, if there should be one\r\n      let targetId;\r\n      if (targetIdFn) {\r\n        targetId = targetIdFn(feature);\r\n      }\r\n\r\n      this.dataManager.didFetchData(dataSourceKey, 'success', data, targetId);\r\n    }, response => {\r\n      console.log('fetch json error', response);\r\n      this.dataManager.didFetchData(dataSourceKey, 'error');\r\n    });\r\n  }\r\n\r\n  fetchMore(feature, dataSource, dataSourceKey, highestPageRetrieved) {\r\n    let params = this.evaluateParams(feature, dataSource);\r\n    params.page = highestPageRetrieved + 1;\r\n    let url = dataSource.url;\r\n    const options = dataSource.options;\r\n    const urlAddition = params.urlAddition;\r\n    if (urlAddition) {\r\n      // url += encodeURIComponent(urlAddition.properties.street_address);\r\n      url += encodeURIComponent(urlAddition);\r\n    }\r\n    const successFn = options.success;\r\n\r\n    // if the data is not dependent on other data\r\n    axios.get(url, { params }).then(response => {\r\n      // call success fn\r\n      let data = response.data;\r\n      if (successFn) {\r\n        data = successFn(data);\r\n      }\r\n      // console.log('data', data);\r\n      this.dataManager.didFetchMoreData(dataSourceKey, 'success', data);\r\n    }, response => {\r\n      console.log('fetch json error', response);\r\n      this.dataManager.didFetchMoreData(dataSourceKey, 'error');\r\n    });\r\n  }\r\n\r\n  fetchNearby(feature, dataSource, dataSourceKey, targetIdFn) {\r\n    const params = this.evaluateParams(feature, dataSource);\r\n    const url = dataSource.url;\r\n    const options = dataSource.options;\r\n    // const srid = options.srid || 4326;\r\n    const table = options.table;\r\n    // TODO generalize these options into something like a `sql` param that\r\n    // returns a sql statement\r\n    const dateMinNum = options.dateMinNum || null;\r\n    const dateMinType = options.dateMinType || null;\r\n    console.log('dateMinType:', dateMinType);\r\n    const dateField = options.dateField || null;\r\n    const successFn = options.success;\r\n    const distances = options.distances || 250;\r\n    // console.log('fetchNearby distances:', distances);\r\n\r\n    const distQuery = \"ST_Distance(the_geom::geography, ST_SetSRID(ST_Point(\"\r\n                    + feature.geometry.coordinates[0]\r\n                    + \",\" + feature.geometry.coordinates[1]\r\n                    + \"),4326)::geography)\";\r\n\r\n    const latQuery = \"ST_Y(the_geom)\";\r\n    const lngQuery = \"ST_X(the_geom)\";\r\n\r\n    // let select = '*'\r\n    // if (calculateDistance) {\r\n    const select = \"*, \" + distQuery + 'as distance,' + latQuery + 'as lat, ' + lngQuery + 'as lng';\r\n    // }\r\n\r\n    params['q'] = \"select\" + select + \" from \" + table + \" where \" + distQuery + \" < \" + distances;\r\n\r\n    let subFn;\r\n    if (dateMinNum) {\r\n      // let subFn, addFn;\r\n      switch (dateMinType) {\r\n        case 'hour':\r\n          subFn = subHours;\r\n          break;\r\n        case 'day':\r\n          subFn = subDays;\r\n          break;\r\n        case 'week':\r\n          subFn = subWeeks;\r\n          break;\r\n        case 'month':\r\n          subFn = subMonths;\r\n          break;\r\n        case 'year':\r\n          subFn = subYears;\r\n          break;\r\n      }\r\n\r\n      // let test = format(subFn(new Date(), dateMinNum), 'YYYY-MM-DD');\r\n      // params['q'] = params['q'] + \" and \" + dateField + \" > '\" + moment().subtract(dateMinNum, dateMinType).format('YYYY-MM-DD') + \"'\"\r\n      params['q'] = params['q'] + \" and \" + dateField + \" > '\" + format(subFn(new Date(), dateMinNum), 'YYYY-MM-DD') + \"'\"\r\n    }\r\n\r\n    // if the data is not dependent on other data\r\n    axios.get(url, { params }).then(response => {\r\n      // call success fn\r\n      for (let row of response.data.rows) {\r\n        row.distance = row.distance * 3.28084;\r\n      }\r\n      let data = response.data.rows;\r\n      // console.log('table and data', table, data);\r\n\r\n      if (successFn) {\r\n        data = successFn(data);\r\n      }\r\n\r\n      // get target id, if there should be one\r\n      let targetId;\r\n      if (targetIdFn) {\r\n        targetId = targetIdFn(feature);\r\n      }\r\n\r\n      this.dataManager.didFetchData(dataSourceKey, 'success', data, targetId);\r\n    }, response => {\r\n      console.log('fetch json error', response);\r\n      this.dataManager.didFetchData(dataSourceKey, 'error');\r\n    });\r\n  }\r\n}\r\n\r\nexport default HttpClient;\r\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nexport default clone;\n","import { coordEach, featureEach } from '@turf/meta';\nimport { featureCollection, point } from '@turf/helpers';\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n    var points = [];\n    if (geojson.type === 'FeatureCollection') {\n        featureEach(geojson, function (feature) {\n            coordEach(feature, function (coord) {\n                points.push(point(coord, feature.properties));\n            });\n        });\n    } else {\n        coordEach(geojson, function (coord) {\n            points.push(point(coord, geojson.properties));\n        });\n    }\n    return featureCollection(points);\n}\n\nexport default explode;\n","import axios from 'axios';\r\n\r\n// import * as turf from '@turf/turf';\r\n// import { point, polygon, distance, explode, nearest-point } from '@turf/turf';\r\n// import distance from '@turf/turf';\r\nimport { point, polygon } from '@turf/helpers';\r\nimport distance from '@turf/distance';\r\nimport explode from '@turf/explode';\r\nimport nearest from '@turf/nearest-point';\r\n\r\nimport proj4 from 'proj4';\r\nimport * as L from 'leaflet';\r\nimport { query as Query } from 'esri-leaflet';\r\nimport BaseClient from './base-client';\r\n\r\nclass EsriClient extends BaseClient {\r\n  fetch(feature, dataSource, dataSourceKey) {\r\n    // console.log('esriclient fetch, feature:', feature, 'dataSource:', dataSource, 'dataSourceKey:', dataSourceKey);\r\n\r\n    const url = dataSource.url;\r\n    const { relationship, targetGeometry, ...options } = dataSource.options;\r\n    const parameters = dataSource.parameters;\r\n    if (parameters) {\r\n      parameters['sourceValue'] = feature.properties[parameters.sourceField];\r\n    }\r\n\r\n    // check if a target geometry fn was specified. otherwise, use geocode feat\r\n    let geom;\r\n    if (targetGeometry) {\r\n      const state = this.store.state;\r\n      // pass leaflet to the targetgeom function so it can construct a custom\r\n      // geometry (such as the lat lng bounds of a set of parcels) if it needs\r\n      // to. use case: fetching regmaps.\r\n      geom = targetGeometry(state, L);\r\n    } else {\r\n      geom = feature.geometry;\r\n    }\r\n\r\n    // handle null geom\r\n    if (!geom) {\r\n      this.dataManager.didFetchData(dataSourceKey, 'error');\r\n      return;\r\n    }\r\n\r\n    this.fetchBySpatialQuery(dataSourceKey, url, relationship, geom, parameters, options);\r\n  }\r\n\r\n  fetchNearby(feature, dataSource, dataSourceKey) {\r\n    console.log('esri fetchNearby running, dataSource:', dataSource, 'dataSourceKey:', dataSourceKey);\r\n    const projection4326 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n    const projection2272 = \"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs\";\r\n\r\n    const dataSourceUrl = dataSource.url;\r\n    const {\r\n      calculateDistance,\r\n      geometryServerUrl,\r\n      distances,\r\n      ...options\r\n    } = dataSource.options;\r\n\r\n    console.log('distances:', distances)\r\n\r\n    // params.geometries = `[${feature.geometry.coordinates.join(', ')}]`\r\n    // TODO get some of these values from map, etc.\r\n    const coords = feature.geometry.coordinates;\r\n    const coords2272 = proj4(projection4326, projection2272, [coords[0], coords[1]]);\r\n    // console.log('coords:', coords, 'coords2272:', coords2272);\r\n    const params = {\r\n      // geometries: feature => '[' + feature.geometry.coordinates[0] + ', ' + feature.geometry.coordinates[1] + ']',\r\n      geometries: `[${coords2272.join(', ')}]`,\r\n      inSR: 2272,\r\n      outSR: 4326,\r\n      bufferSR: 2272,\r\n      distances: distances, //|| 0.0028,\r\n      // inSR: 4326,\r\n      // outSR: 4326,\r\n      // bufferSR: 4326,\r\n      // distances: distances, //|| 0.0028,\r\n      unionResults: true,\r\n      geodesic: false,\r\n      f: 'json',\r\n    };\r\n    console.log('esri nearby params', params);\r\n\r\n    // get buffer polygon\r\n    const bufferUrl = geometryServerUrl.replace(/\\/$/, '') + '/buffer';\r\n    // console.log('bufferUrl:', bufferUrl);\r\n\r\n    axios.get(bufferUrl, { params }).then(response => {\r\n      const data = response.data;\r\n      console.log('axios in esri fetchNearby is running, data:', data);\r\n\r\n      console.log('did get esri nearby buffer', data);\r\n\r\n      const geoms = data.geometries || [];\r\n      const geom = geoms[0] || {};\r\n      const rings = geom.rings || [];\r\n      const xyCoords = rings[0];\r\n\r\n      // check for xy coords\r\n      if (!xyCoords) {\r\n        // we can't do anything without coords, so bail out\r\n        this.dataManager.didFetchData(dataSourceKey, 'error');\r\n        return;\r\n      }\r\n\r\n      const latLngCoords = xyCoords.map(xyCoord => [...xyCoord].reverse());\r\n\r\n      // get nearby features using buffer\r\n      const buffer = L.polygon(latLngCoords);\r\n      const map = this.dataManager.store.state.map.map;\r\n\r\n      // DEBUG\r\n      // buffer.addTo(map);\r\n\r\n      //this is a space holder\r\n      const parameters = {};\r\n      // console.log('about to call fetchBySpatialQuery');\r\n      this.fetchBySpatialQuery(dataSourceKey,\r\n                               dataSourceUrl,\r\n                               'within',\r\n                               buffer,\r\n                               parameters,\r\n                               options,\r\n                               calculateDistance ? coords : null\r\n                              );\r\n    }, response => {\r\n      console.log('did fetch esri nearby error', response);\r\n\r\n      this.dataManager.didFetchData(dataSourceKey, 'error');\r\n    });\r\n  }\r\n\r\n  fetchBySpatialQuery(dataSourceKey, url, relationship, targetGeom, parameters = {}, options = {}, calculateDistancePt) {\r\n    // console.log('fetch esri spatial query, dataSourceKey:', dataSourceKey, 'url:', url, 'relationship:', relationship, 'targetGeom:', targetGeom, 'parameters:', parameters, 'options:', options, 'calculateDistancePt:', calculateDistancePt);\r\n\r\n    let query;\r\n    if (relationship === 'where') {\r\n      query = Query({ url })[relationship](parameters.targetField + \"='\" + parameters.sourceValue + \"'\");\r\n    } else {\r\n      query = Query({ url })[relationship](targetGeom);\r\n    }\r\n\r\n    // apply options by chaining esri leaflet option methods\r\n    const optionsKeys = Object.keys(options) || [];\r\n    query = optionsKeys.reduce((acc, optionsKey) => {\r\n      const optionsVal = options[optionsKey];\r\n      let optionsMethod;\r\n\r\n      try {\r\n        acc = acc[optionsKey](optionsVal);\r\n      } catch (e) {\r\n        throw new Error(`esri-leaflet query task does not support option:\r\n                         ${optionsKey}`);\r\n      }\r\n\r\n      return acc;\r\n    }, query);\r\n\r\n    query.run((error, featureCollection, response) => {\r\n      // console.log('did get esri spatial query', response, error);\r\n\r\n      let features = (featureCollection || {}).features;\r\n      const status = error ? 'error' : 'success';\r\n\r\n      // calculate distance\r\n      if (calculateDistancePt) {\r\n        const from = point(calculateDistancePt);\r\n\r\n        features = features.map(feature => {\r\n          const featureCoords = feature.geometry.coordinates;\r\n          // console.log('featureCoords:', featureCoords);\r\n          let dist;\r\n          if (Array.isArray(featureCoords[0])) {\r\n            let polygonInstance = polygon([featureCoords[0]]);\r\n            const vertices = explode(polygonInstance)\r\n            const closestVertex = nearest(from, vertices);\r\n            dist = distance(from, closestVertex, { units: 'miles' })\r\n          } else {\r\n            const to = point(featureCoords);\r\n            dist = distance(from, to, { units: 'miles' });\r\n          }\r\n\r\n          // TODO make distance units an option. for now, just hard code to ft.\r\n          const distFeet = parseInt(dist * 5280);\r\n          // console.log('distFeet:', distFeet);\r\n\r\n          feature._distance = distFeet;\r\n\r\n          return feature;\r\n        })\r\n      }\r\n\r\n      this.dataManager.didFetchData(dataSourceKey, status, features);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default EsriClient;\r\n","import clone from '@turf/clone';\nimport distance from '@turf/distance';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearestPoint\n * @param {Coord} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @returns {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var targetPoint = turf.point([28.965797, 41.010086], {\"marker-color\": \"#0F0\"});\n * var points = turf.featureCollection([\n *     turf.point([28.973865, 41.011122]),\n *     turf.point([28.948459, 41.024204]),\n *     turf.point([28.938674, 41.013324])\n * ]);\n *\n * var nearest = turf.nearestPoint(targetPoint, points);\n *\n * //addToMap\n * var addToMap = [targetPoint, points, nearest];\n * nearest.properties['marker-color'] = '#F00';\n */\nfunction nearestPoint(targetPoint, points) {\n    // Input validation\n    if (!targetPoint) throw new Error('targetPoint is required');\n    if (!points) throw new Error('points is required');\n\n    var nearest;\n    var minDist = Infinity;\n    featureEach(points, function (pt, featureIndex) {\n        var distanceToPoint = distance(targetPoint, pt);\n        if (distanceToPoint < minDist) {\n            nearest = clone(pt);\n            nearest.properties.featureIndex = featureIndex;\n            nearest.properties.distanceToPoint = distanceToPoint;\n            minDist = distanceToPoint;\n        }\n\n    });\n    return nearest;\n}\n\nexport default nearestPoint;\n","/*\r\nThe DataManager is responsible for fetching external data (mainly API responses)\r\nand storing them in state.\r\n\r\nThe router should own an instance of DataManager and make calls to it based on\r\nnavigation events.\r\n*/\r\nimport * as L from 'leaflet';\r\nimport { query as Query } from 'esri-leaflet';\r\n// import * as turf from '@turf/turf';\r\nimport { point, polygon } from '@turf/helpers';\r\nimport distance from '@turf/distance';\r\nimport area from '@turf/area';\r\nimport {\r\n  GeocodeClient,\r\n  OwnerSearchClient,\r\n  HttpClient,\r\n  EsriClient\r\n} from './clients';\r\n\r\nclass DataManager {\r\n  constructor(opts) {\r\n    const store = this.store = opts.store;\r\n    const config = this.config = opts.config;\r\n    // this.eventBus = opts.eventBus;\r\n    this.controller = opts.controller;\r\n\r\n    // create clients\r\n    this.clients = {};\r\n\r\n    // REVIEW do these need the store any more? or can they just pass the\r\n    // response back to this?\r\n    const clientOpts = { config, store, dataManager: this };\r\n    this.clients.geocode = new GeocodeClient(clientOpts);\r\n    this.clients.ownerSearch = new OwnerSearchClient(clientOpts);\r\n    this.clients.http = new HttpClient(clientOpts);\r\n    this.clients.esri = new EsriClient(clientOpts);\r\n  }\r\n\r\n  /* STATE HELPERS */\r\n\r\n  // REVIEW maybe the getXXXParcelsById methods should just take an argument\r\n  // activeParcelLayer? that's the only reason these are in here.\r\n\r\n  activeTopicConfig() {\r\n    const key = this.store.state.activeTopic;\r\n    let config;\r\n\r\n    // if no active topic, return null\r\n    if (key) {\r\n      config = this.config.topics.filter((topic) => {\r\n        return topic.key === key;\r\n      })[0];\r\n    }\r\n\r\n    return config || {};\r\n  }\r\n\r\n  /* DATA FETCHING METHODS */\r\n\r\n  fetchMoreData(dataSourceKey, highestPageRetrieved) {\r\n    const feature = this.store.state.geocode.data;\r\n    const dataSource = this.config.dataSources[dataSourceKey];\r\n\r\n    const state = this.store.state;\r\n    const type = dataSource.type;\r\n\r\n    // update secondary status to `waiting`\r\n    const setSecondarySourceStatusOpts = {\r\n      key: dataSourceKey,\r\n      secondaryStatus: 'waiting'\r\n    };\r\n    this.store.commit('setSecondarySourceStatus', setSecondarySourceStatusOpts);\r\n    console.log('INCREMENT - datamanager get 100 More was clicked, type', type, 'dataSource', dataSource, 'highestPageRetrieved', highestPageRetrieved);\r\n\r\n    switch(type) {\r\n      case 'http-get':\r\n        console.log('INCREMENT - http-get', dataSourceKey);\r\n        this.clients.http.fetchMore(feature,\r\n                                dataSource,\r\n                                dataSourceKey,\r\n                                highestPageRetrieved);\r\n        break;\r\n    }\r\n  }\r\n\r\n  didFetchMoreData(key, secondaryStatus, data) {\r\n    console.log('INCREMENT - DID FETCH More DATA:', key, secondaryStatus, data);\r\n\r\n    const dataOrNull = status === 'error' ? null : data;\r\n    let stateData = dataOrNull;\r\n\r\n    // if this is an array, assign feature ids\r\n    if (Array.isArray(stateData)) {\r\n      stateData = this.assignFeatureIds(stateData, key);\r\n    }\r\n\r\n    // console.log('stateData', stateData);\r\n    const nextPage = this.store.state.sources[key].data.page + 1;\r\n\r\n    // put data in state\r\n    const setSourceDataOpts = {\r\n      key,\r\n      data: stateData,\r\n      page: nextPage\r\n    };\r\n    const setSecondarySourceStatusOpts = {\r\n      key,\r\n      secondaryStatus\r\n    };\r\n\r\n    console.log('nextPage', nextPage, 'setSourceDataOpts', setSourceDataOpts);\r\n    // commit\r\n    this.store.commit('setSourceDataMore', setSourceDataOpts);\r\n    this.store.commit('setSecondarySourceStatus', setSecondarySourceStatusOpts);\r\n  }\r\n\r\n\r\n  fetchData() {\r\n    // console.log('\\nFETCH DATA');\r\n    // console.log('-----------');\r\n\r\n    const geocodeObj = this.store.state.geocode.data;\r\n\r\n    // we always need a good geocode before we can get data, so return\r\n    // if we don't have one yet.\r\n    // if (!geocodeObj) {\r\n    //   // console.log('fetch data but no geocode yet, returning');\r\n    //   return;\r\n    // }\r\n\r\n    let dataSources = this.config.dataSources || {};\r\n    let dataSourceKeys = Object.entries(dataSources);\r\n    // console.log('in fetchData, dataSources before filter:', dataSources, 'dataSourceKeys:', dataSourceKeys);\r\n\r\n    if (!geocodeObj) {\r\n      dataSourceKeys = dataSourceKeys.filter(dataSourceKey => {\r\n        if (dataSourceKey[1].dependent) {\r\n          if (dataSourceKey[1].dependent === 'parcel') {\r\n            return true;\r\n          }\r\n        }\r\n      })\r\n    }\r\n    // console.log('in fetchData, dataSources after filter:', dataSources);\r\n\r\n    // get \"ready\" data sources (ones whose deps have been met)\r\n    // for (let [dataSourceKey, dataSource] of Object.entries(dataSources)) {\r\n    for (let [dataSourceKey, dataSource] of dataSourceKeys) {\r\n      const state = this.store.state;\r\n      const type = dataSource.type;\r\n      const targetsDef = dataSource.targets;\r\n\r\n      // console.log('key:', dataSourceKey, type);\r\n\r\n      // if the data sources specifies a features getter, use that to source\r\n      // features for evaluating params/forming requests. otherwise,\r\n      // default to the geocode result.\r\n      let targets;\r\n      let targetIdFn;\r\n      let targetsFn;\r\n\r\n      if (targetsDef) {\r\n        targetsFn = targetsDef.get;\r\n        targetIdFn = targetsDef.getTargetId;\r\n\r\n        if (typeof targetsFn !== 'function') {\r\n          throw new Error(`Invalid targets getter for data source '${dataSourceKey}'`);\r\n        }\r\n        targets = targetsFn(state);\r\n\r\n        // check if target objs exist in state.\r\n        const targetIds = targets.map(targetIdFn);\r\n        const stateTargets = state.sources[dataSourceKey].targets;\r\n        const stateTargetIds = Object.keys(stateTargets);\r\n        // the inclusion check wasn't working because ids were strings in\r\n        // one set and ints in another, so do this.\r\n        const stateTargetIdsStr = stateTargetIds.map(String);\r\n        const shouldCreateTargets = !targetIds.every(targetId => {\r\n          const targetIdStr = String(targetId);\r\n          return stateTargetIdsStr.includes(targetIdStr);\r\n        });\r\n\r\n        // if not, create them.\r\n        if (shouldCreateTargets) {\r\n          // console.log('should create targets', targetIds, stateTargetIds);\r\n          this.store.commit('createEmptySourceTargets', {\r\n            key: dataSourceKey,\r\n            targetIds\r\n          });\r\n        }\r\n\r\n        if (!Array.isArray(targets)) {\r\n          throw new Error('Data source targets getter should return an array');\r\n        }\r\n      } else {\r\n        targets = [geocodeObj];\r\n      }\r\n\r\n      // console.log('in fetchData, dataSourceKey:', dataSourceKey, 'targets:', targets);\r\n\r\n      for (let target of targets) {\r\n        // get id of target\r\n        let targetId;\r\n        if (targetIdFn) {\r\n          targetId = targetIdFn(target);\r\n        }\r\n\r\n        // targetId && console.log('target:', targetId);\r\n\r\n        // check if it's ready\r\n        const isReady = this.checkDataSourceReady(dataSourceKey, dataSource, targetId);\r\n        if (!isReady) {\r\n          // console.log('not ready');\r\n          continue;\r\n        }\r\n\r\n        // update status to `waiting`\r\n        const setSourceStatusOpts = {\r\n          key: dataSourceKey,\r\n          status: 'waiting'\r\n        };\r\n        if (targetId) {\r\n          setSourceStatusOpts.targetId = targetId;\r\n        }\r\n        this.store.commit('setSourceStatus', setSourceStatusOpts);\r\n\r\n        // TODO do this for all targets\r\n        switch(type) {\r\n          case 'http-get':\r\n            // console.log('http-get, target:', target, 'dataSource:', dataSource, 'dataSourceKey:', dataSourceKey, 'targetIdFn:', targetIdFn);\r\n            this.clients.http.fetch(target,\r\n                                    dataSource,\r\n                                    dataSourceKey,\r\n                                    targetIdFn);\r\n            break;\r\n\r\n          case 'http-get-nearby':\r\n          // console.log('http-get-nearby', dataSourceKey, targetIdFn)\r\n            this.clients.http.fetchNearby(target,\r\n                                          dataSource,\r\n                                          dataSourceKey,\r\n                                          targetIdFn);\r\n            break;\r\n\r\n          case 'esri':\r\n            // console.log('esri', dataSourceKey)\r\n            // TODO add targets id fn\r\n            this.clients.esri.fetch(target, dataSource, dataSourceKey);\r\n            break;\r\n\r\n            break;\r\n          case 'esri-nearby':\r\n            // console.log('esri-nearby', dataSourceKey)\r\n            // TODO add targets id fn\r\n            this.clients.esri.fetchNearby(target, dataSource, dataSourceKey);\r\n            break;\r\n\r\n          default:\r\n            throw `Unknown data source type: ${type}`;\r\n            break;\r\n        }  // end of switch\r\n      }  // end of for targets loop\r\n      // console.log('end of targets loop for', dataSourceKey);\r\n    } // end of for dataSource loop\r\n    // console.log('end of outer loop');\r\n  }\r\n\r\n  didFetchData(key, status, data, targetId) {\r\n\r\n    const dataOrNull = status === 'error' ? null : data;\r\n    let stateData = dataOrNull;\r\n    // console.log('data-manager DID FETCH DATA:', key, targetId || '', data);\r\n    let rows;\r\n    if (stateData) {\r\n      rows = stateData.rows;\r\n    }\r\n\r\n    // if this is an array, assign feature ids\r\n    if (Array.isArray(stateData)) {\r\n      stateData = this.assignFeatureIds(stateData, key, targetId);\r\n    } else if (stateData) {\r\n      stateData.rows = this.assignFeatureIds(rows, key, targetId);\r\n    }\r\n\r\n    // does this data source have targets?\r\n    // const targets = this.config.dataSources[key].targets;\r\n\r\n    // put data in state\r\n    const setSourceDataOpts = {\r\n      key,\r\n      data: stateData,\r\n    };\r\n    const setSourceStatusOpts = {\r\n      key,\r\n      status\r\n    };\r\n    if (targetId) {\r\n      setSourceDataOpts.targetId = targetId;\r\n      setSourceStatusOpts.targetId = targetId;\r\n    }\r\n\r\n    // commit\r\n    this.store.commit('setSourceData', setSourceDataOpts);\r\n    this.store.commit('setSourceStatus', setSourceStatusOpts);\r\n\r\n    // try fetching more data\r\n    // console.log('171111 data-manager.js line 319 - didFetchData - is calling fetchData on targetId', targetId, 'key', key);\r\n    this.fetchData();\r\n  }\r\n\r\n  resetData() {\r\n      const dataSources = this.config.dataSources || {};\r\n\r\n      for (let dataSourceKey of Object.keys(dataSources)) {\r\n        const dataSource = dataSources[dataSourceKey];\r\n        const targetsDef = dataSource.targets;\r\n\r\n        // null out existing data in state\r\n        if (targetsDef) {\r\n          this.store.commit('clearSourceTargets', {\r\n            key: dataSourceKey\r\n          });\r\n        } else {\r\n          this.store.commit('setSourceData', {\r\n            key: dataSourceKey,\r\n            data: null\r\n          })\r\n          this.store.commit('setSourceStatus', {\r\n            key: dataSourceKey,\r\n            status: null\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    // this gets called when the current geocoded address is wiped out, such as\r\n    // when you click on the \"Atlas\" title and it navigates to an empty hash\r\n    resetGeocode() {\r\n      console.log('resetGeocode is running');\r\n      // reset geocode\r\n      this.store.commit('setGeocodeStatus', null);\r\n      this.store.commit('setGeocodeData', null);\r\n      this.store.commit('setGeocodeRelated', null);\r\n      this.store.commit('setGeocodeInput', null);\r\n\r\n      // reset parcels\r\n      if (this.config.parcels) {\r\n        this.store.commit('setParcelData', {\r\n          parcelLayer: 'dor',\r\n          multipleAllowed: true,\r\n          data: [],\r\n          status: null,\r\n          activeParcel: null,\r\n          activeAddress: null,\r\n          activeMapreg: null\r\n        });\r\n        this.store.commit('setParcelData', {\r\n          parcelLayer: 'pwd',\r\n          multipleAllowed: false,\r\n          data: null\r\n        });\r\n        this.store.commit('setActiveParcelLayer', 'pwd');\r\n      }\r\n\r\n      // reset other topic and map state\r\n      if (this.config.topics.length) {\r\n        if (this.config.defaultTopic || this.config.defaultTopic === null) {\r\n          this.store.commit('setActiveTopic', this.config.defaultTopic);\r\n        } else {\r\n          // console.log('about to setActiveTopic, config:', this.config.topics[0].key);\r\n          this.store.commit('setActiveTopic', this.config.topics[0].key);\r\n        }\r\n      }\r\n\r\n\r\n      if (this.store.state.map) {\r\n        this.store.commit('setBasemap', 'pwd');\r\n      }\r\n\r\n      // reset data sources\r\n      if (this.store.state.sources) {\r\n        this.resetData();\r\n      }\r\n    }\r\n\r\n  checkDataSourcesFetched(paths = []) {\r\n    // console.log('check data sources fetched', paths);\r\n\r\n    const state = this.store.state;\r\n\r\n    return paths.every(path => {\r\n      // deps can be deep keys, e.g. `dor.parcels`. split on periods to get\r\n      // a sequence of keys.\r\n      const pathKeys = path.split('.');\r\n\r\n      // TODO/TEMP restructure state so parcels and geocode live in\r\n      // state.sources? the following targets the dorDocuments data source.\r\n      const isDorParcels = (pathKeys.length === 2\r\n                            && pathKeys[1] === \"dor\");\r\n\r\n      // console.log('check data sources fetched', paths, 'pathKeys.length:', pathKeys.length, 'pathKeys[0]:', pathKeys[0], 'pathKeys[1]:', pathKeys[1], 'isDorParcels:', isDorParcels);\r\n\r\n      if (isDorParcels) {\r\n        return state.parcels.dor.status === 'success';\r\n      }\r\n\r\n      // traverse state to get the parent of the data object we need to\r\n      // check.\r\n      const stateObj = pathKeys.reduce((acc, pathKey) => {\r\n        return acc[pathKey];\r\n      }, state);\r\n\r\n      return stateObj.status === 'success';\r\n    });\r\n  }\r\n\r\n  checkDataSourceReady(key, options, targetId) {\r\n    // console.log(`check data source ready: ${key} ${targetId || ''}`, options);\r\n\r\n    const deps = options.deps;\r\n    // console.log('deps', deps);\r\n    const depsMet = this.checkDataSourcesFetched(deps);\r\n    // console.log('depsMet', depsMet);\r\n    let isReady = false;\r\n\r\n    // if data deps have been met\r\n    if (depsMet) {\r\n      // get the target obj\r\n      let targetObj = this.store.state.sources[key];\r\n      if (targetId) {\r\n        targetObj = targetObj.targets[targetId];\r\n      }\r\n\r\n      // if the target obj has a status of null, this data source is ready.\r\n      isReady = !targetObj.status;\r\n    }\r\n\r\n    // console.log('checkDataSourceReady isReady:', isReady);\r\n    return isReady;\r\n  }\r\n\r\n  assignFeatureIds(features, dataSourceKey, topicId) {\r\n    if (!features) {\r\n      return;\r\n    }\r\n    const featuresWithIds = [];\r\n\r\n    // REVIEW this was not working with Array.map for some reason\r\n    // it was returning an object when fetchJson was used\r\n    // that is now converted to an array in fetchJson\r\n    for (let i = 0; i < features.length; i++) {\r\n      const suffix = (topicId ? topicId + '-' : '') + i;\r\n      const id = `feat-${dataSourceKey}-${suffix}`;\r\n      const feature = features[i];\r\n      // console.log(dataSourceKey, feature);\r\n      try {\r\n        feature._featureId = id;\r\n      }\r\n      catch (e) {\r\n        console.warn(e);\r\n      }\r\n      featuresWithIds.push(feature);\r\n    }\r\n\r\n    // console.log(dataSourceKey, features, featuresWithIds);\r\n    return featuresWithIds;\r\n  }\r\n\r\n  evaluateParams(feature, dataSource) {\r\n    const params = {};\r\n    const paramEntries = Object.entries(dataSource.options.params);\r\n    const state = this.store.state;\r\n\r\n    for (let [key, valOrGetter] of paramEntries) {\r\n      let val;\r\n\r\n      if (typeof valOrGetter === 'function') {\r\n        val = valOrGetter(feature, state);\r\n      } else {\r\n        val = valOrGetter;\r\n      }\r\n\r\n      params[key] = val;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  /* GEOCODING */\r\n  geocode(input, category) {\r\n    // console.log('data-manager geocode is running, input:', input, 'category:', category);\r\n    if (category === 'address') {\r\n      const didGeocode = this.didGeocode.bind(this);\r\n      return this.clients.geocode.fetch(input).then(didGeocode);\r\n    } else if (category === 'owner') {\r\n      // console.log('category is owner');\r\n      const didOwnerSearch = this.didOwnerSearch.bind(this);\r\n      return this.clients.ownerSearch.fetch(input).then(didOwnerSearch);\r\n    } else if (category == null) {\r\n      // console.log('no category');\r\n      const didTryGeocode = this.didTryGeocode.bind(this);\r\n      const test = this.clients.geocode.fetch(input).then(didTryGeocode);\r\n    }\r\n  }\r\n\r\n  didOwnerSearch() {\r\n    console.log('callback from owner search is running');\r\n  }\r\n\r\n  didTryGeocode(feature) {\r\n    console.log('didTryGeocode is running, feature:', feature);\r\n    if (this.store.state.geocode.status === 'error') {\r\n      const input = this.store.state.geocode.input;\r\n      const didOwnerSearch = this.didOwnerSearch.bind(this);\r\n      return this.clients.ownerSearch.fetch(input).then(didOwnerSearch);\r\n    } else if (this.store.state.geocode.status === 'success') {\r\n      this.didGeocode(feature);\r\n      this.store.commit('setOwnerSearchStatus', null);\r\n      this.store.commit('setOwnerSearchData', null);\r\n      this.store.commit('setOwnerSearchInput', null);\r\n    }\r\n  }\r\n\r\n  didGeocode(feature) {\r\n    console.log('DataManager.didGeocode:', feature);\r\n    this.controller.router.didGeocode();\r\n    if (!this.config.parcels) {\r\n      if (this.store.state.map) {\r\n        this.store.commit('setMapZoom', 19);\r\n        this.store.commit('setMapCenter', feature.geometry.coordinates);\r\n      }\r\n      return\r\n    }\r\n\r\n    const activeParcelLayer = this.store.state.activeParcelLayer;\r\n    const lastSearchMethod = this.store.state.lastSearchMethod;\r\n    const configForActiveParcelLayer = this.config.parcels[activeParcelLayer];\r\n    // // const multipleAllowed = configForParcelLayer.multipleAllowed;\r\n    // const geocodeField = configForParcelLayer.geocodeField;\r\n    const parcelLayers = Object.keys(this.config.parcels || {});\r\n    const otherParcelLayers = Object.keys(this.config.parcels || {});\r\n    otherParcelLayers.splice(otherParcelLayers.indexOf(activeParcelLayer), 1);\r\n    // console.log('didGeocode - activeParcelLayer:', activeParcelLayer, 'parcelLayers:', parcelLayers, 'otherParcelLayers:', otherParcelLayers);\r\n\r\n    // if it is a dor parcel query, and the geocode fails, coordinates can still be used\r\n    // to get dor parcels which are not in ais\r\n    // set coords to the ais coords OR the click if there is no ais result\r\n    let coords, lat, lng, latlng;\r\n    // if geocode fails\r\n    if (!feature) {\r\n      console.log('didGeocode - no geom');\r\n      if (lastSearchMethod === 'reverseGeocode') {\r\n        const clickCoords = this.store.state.clickCoords;\r\n        coords = [clickCoords.lng, clickCoords.lat];\r\n        [lng, lat] = coords;\r\n        latlng = L.latLng(lat, lng);\r\n      }\r\n    // if geocode succeeds\r\n    } else {\r\n      // console.log('didGeocode - GEOM', feature);\r\n      coords = feature.geometry.coordinates;\r\n      [lng, lat] = coords;\r\n      latlng = L.latLng(lat, lng);\r\n    }\r\n\r\n    // if (coords) {\r\n    //   const [lng, lat] = coords;\r\n    //   const latlng = L.latLng(lat, lng);\r\n    // }\r\n\r\n    // all of this happens whether geocode failed or succeeded\r\n    // search box or onload - get parcels by id\r\n    // (unless it fails and you are allowed to get them by LatLng on failure)\r\n    if (lastSearchMethod === 'geocode') {\r\n      if (feature) {\r\n        // console.log('didGeocode lastSearchMethod:', lastSearchMethod, '- attempting to get all parcel layers:', parcelLayers, ' by ID');\r\n        // loop through the parcels, and get them by their ids\r\n        for (let parcelLayer of parcelLayers) {\r\n          const configForParcelLayer = this.config.parcels[parcelLayer];\r\n          const parcelIdInGeocoder = configForParcelLayer.parcelIdInGeocoder\r\n          const parcelId = feature.properties[parcelIdInGeocoder];\r\n          if (parcelId && parcelId.length > 0) {\r\n            this.getParcelsById(parcelId, parcelLayer);\r\n          } else {\r\n            if (configForParcelLayer.getByLatLngIfIdFails) {\r\n              // console.log(parcelLayer, 'Id failed - had to get by LatLng')\r\n              console.log('in if lastSearchMethod === geocode, parcelLayer:', parcelLayer);\r\n              this.getParcelsByLatLng(latlng, parcelLayer);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    // map-click - get pwd and dor parcels (whichever has not already been found) by latlng\r\n    // this is needed because it will not automatically get the dor parcels in case it does not find a pwd parcel\r\n    // and vice versa\r\n    } else if (lastSearchMethod === 'reverseGeocode') {\r\n      if (feature) {\r\n        // console.log('didGeocode lastSearchMethod:', lastSearchMethod, 'feature', feature, '- getting other parcel layers by id or latlng')\r\n        for (let otherParcelLayer of otherParcelLayers) {\r\n          const configForOtherParcelLayer = this.config.parcels[otherParcelLayer];\r\n          const parcelIdInGeocoder = configForOtherParcelLayer.parcelIdInGeocoder\r\n          const parcelId = feature.properties[parcelIdInGeocoder];\r\n          if (parcelId && parcelId.length > 0) {\r\n            this.getParcelsById(parcelId, otherParcelLayer);\r\n          } else {\r\n            if (configForOtherParcelLayer.getByLatLngIfIdFails) {\r\n              console.log('in if lastSearchMethod === reverseGeocode, otherParcelLayer:', otherParcelLayer, 'Id failed - had to get by LatLng')\r\n              this.getParcelsByLatLng(latlng, otherParcelLayer);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // console.log('didGeocode lastSearchMethod:', lastSearchMethod, 'NO feature', feature)\r\n        const geocodeFailAttemptParcel = configForActiveParcelLayer.geocodeFailAttemptParcel\r\n        if (geocodeFailAttemptParcel) {\r\n          // console.log('ran ais on a dor parcel and got no response - should try pwd parcel?', geocodeFailAttemptParcel);\r\n          const otherParcel = this.store.state.parcels[geocodeFailAttemptParcel];\r\n          // console.log('otherParcel:', otherParcel);\r\n          if (otherParcel) {\r\n            const configForOtherParcelLayer = this.config.parcels[geocodeFailAttemptParcel];\r\n            const geocodeField = configForOtherParcelLayer.geocodeField;\r\n            // console.log('running ais again on the pwd parcel', otherParcel.properties[geocodeField]);\r\n            this.store.commit('setLastSearchMethod', 'reverseGeocode-secondAttempt')\r\n            this.geocode(otherParcel.properties[geocodeField]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log('in didGeocode, activeTopicConfig:', this.activeTopicConfig());\r\n    const activeTopicConfig = this.activeTopicConfig();\r\n    // console.log('activeTopicConfig.zoomToShape:', activeTopicConfig.zoomToShape);\r\n    // const geocodeData = this.store.state.geocode.data || null;\r\n    // const geocodeProperties = geocodeData.properties || null;\r\n    // const newShape = geocodeProperties.opa_account_num || null;\r\n\r\n    // only recenter the map on geocode\r\n    if (lastSearchMethod === 'geocode' && this.store.state.geocode.status !== 'error') {\r\n      if (!activeTopicConfig.zoomToShape) {\r\n        // console.log('NO ZOOM TO SHAPE - NOW IT SHOULD NOT BE ZOOMING TO THE SHAPE ON GEOCODE');\r\n        if (this.store.state.map) {\r\n          this.store.commit('setMapCenter', coords);\r\n          this.store.commit('setMapZoom', 19);\r\n        }\r\n      } else {\r\n        // console.log('ZOOM TO SHAPE - NOW IT SHOULD BE ZOOMING TO THE SHAPE ON GEOCODE');\r\n        // this.store.commit('setMapBoundsBasedOnShape', newShape);\r\n      }\r\n\r\n    } else if (activeTopicConfig.zoomToShape && lastSearchMethod === 'reverseGeocode' && this.store.state.geocode.status !== 'error') {\r\n      // console.log('ZOOM TO SHAPE - NOW IT SHOULD BE ZOOMING TO THE SHAPE ON REVERSE GEOCODE');\r\n      // this.store.commit('setMapBoundsBasedOnShape', newShape);\r\n    }\r\n\r\n    // reset data only when not a rev geocode second attempt\r\n    if (lastSearchMethod !== 'reverseGeocode-secondAttempt') {\r\n      this.resetData();\r\n    }\r\n\r\n    // as long as it is not an intersection, fetch new data\r\n    if (feature) {\r\n      if (feature.street_address) {\r\n        return;\r\n      } else if (feature.properties.street_address) {\r\n        this.fetchData();\r\n      }\r\n    } else {\r\n      this.fetchData();\r\n    }\r\n  } // end didGeocode\r\n\r\n  getParcelsById(id, parcelLayer) {\r\n    // console.log('getParcelsById', parcelLayer);\r\n\r\n    const url = this.config.map.featureLayers[parcelLayer+'Parcels'].url;\r\n    const configForParcelLayer = this.config.parcels[parcelLayer];\r\n    const geocodeField = configForParcelLayer.geocodeField;\r\n    const parcelQuery = Query({ url });\r\n    parcelQuery.where(geocodeField + \" = '\" + id + \"'\");\r\n    // console.log('parcelQuery:', parcelQuery);\r\n    parcelQuery.run((function(error, featureCollection, response) {\r\n        // console.log('171111 getParcelsById parcelQuery ran, response:', response);\r\n        this.didGetParcels(error, featureCollection, response, parcelLayer);\r\n      }).bind(this)\r\n    )\r\n  }\r\n\r\n  getParcelsByLatLng(latlng, parcelLayer, fetch) {\r\n    // console.log('getParcelsByLatLng, latlng:', latlng, 'parcelLayer:', parcelLayer, 'fetch:', fetch, 'this.config.map.featureLayers:', this.config.map.featureLayers);\r\n    const latLng = L.latLng(latlng.lat, latlng.lng);\r\n    const url = this.config.map.featureLayers[parcelLayer+'Parcels'].url;\r\n    const parcelQuery = Query({ url });\r\n    parcelQuery.contains(latLng);\r\n    const test = 5;\r\n    parcelQuery.run((function(error, featureCollection, response) {\r\n        this.didGetParcels(error, featureCollection, response, parcelLayer, fetch);\r\n      }).bind(this)\r\n    )\r\n  }\r\n\r\n  didGetParcels(error, featureCollection, response, parcelLayer, fetch) {\r\n    // console.log('180405 didGetParcels is running parcelLayer', parcelLayer, 'fetch', fetch, 'response', response);\r\n    const configForParcelLayer = this.config.parcels[parcelLayer];\r\n    const multipleAllowed = configForParcelLayer.multipleAllowed;\r\n    const geocodeField = configForParcelLayer.geocodeField;\r\n    const otherParcelLayers = Object.keys(this.config.parcels || {});\r\n    otherParcelLayers.splice(otherParcelLayers.indexOf(parcelLayer), 1);\r\n    const lastSearchMethod = this.store.state.lastSearchMethod;\r\n    const activeParcelLayer = this.store.state.activeParcelLayer;\r\n    // console.log('didGetParcels - parcelLayer:', parcelLayer, 'otherParcelLayers:', otherParcelLayers, 'configForParcelLayer:', configForParcelLayer);\r\n\r\n    if (error) {\r\n      // update state\r\n      if (configForParcelLayer.clearStateOnError) {\r\n      // this.store.commit('setParcelData', { parcelLayer, [] });\r\n      // this.store.commit('setParcelStatus', { parcelLayer }, 'error' });\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!featureCollection) {\r\n      return;\r\n    }\r\n\r\n    const features = featureCollection.features;\r\n\r\n    if (features.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const featuresSorted = this.sortDorParcelFeatures(features);\r\n    let feature;\r\n\r\n    if (!multipleAllowed) {\r\n      feature = features[0];\r\n    // dor\r\n    } else {\r\n      feature = featuresSorted[0];\r\n    }\r\n\r\n    // use turf to get area and perimeter of all parcels returned\r\n    for (let featureSorted of featuresSorted) {\r\n\r\n      let coords = featureSorted.geometry.coordinates;\r\n\r\n      // console.log('featureSorted:', featureSorted, 'coords.length:', coords.length);\r\n      if (coords.length > 1) {\r\n        let distances = [];\r\n        let areas = [];\r\n        for (let coordsSet of coords) {\r\n          // console.log('coordsSet:', coordsSet);\r\n          const turfPolygon = polygon(coordsSet);\r\n          distances.push(this.getDistances(coordsSet).reduce(function(acc, val) { return acc + val; }));\r\n          areas.push(area(turfPolygon) * 10.7639);\r\n        }\r\n        featureSorted.properties.TURF_PERIMETER = distances.reduce(function(acc, val) { return acc + val; });\r\n        featureSorted.properties.TURF_AREA = areas.reduce(function(acc, val) { return acc + val; });\r\n      } else {\r\n        // console.log('coords:', coords);\r\n        const turfPolygon = polygon(coords);\r\n        let distances = this.getDistances(coords);\r\n        featureSorted.properties.TURF_PERIMETER = distances.reduce(function(acc, val) { return acc + val; });\r\n        featureSorted.properties.TURF_AREA = area(turfPolygon) * 10.7639;\r\n      }\r\n      // console.log('after calcs, featureSorted:', featureSorted);\r\n    }\r\n\r\n    // at this point there is definitely a feature or features - put it in state\r\n    this.setParcelsInState(parcelLayer, multipleAllowed, feature, featuresSorted);\r\n\r\n    // shouldGeocode - true only if:\r\n    // 1. didGetParcels is running because the map was clicked (lastSearchMethod = reverseGeocode)\r\n    // 2. didGetParcels' parameter \"parcelLayer\" = activeParcelLayer\r\n    const shouldGeocode = (\r\n      activeParcelLayer === parcelLayer &&\r\n      lastSearchMethod === 'reverseGeocode'\r\n    );\r\n\r\n    // console.log('didGetParcels - shouldGeocode is', shouldGeocode);\r\n    if (shouldGeocode) {\r\n      // since we definitely have a new parcel, and will attempt to geocode it:\r\n      // 1. wipe out state data on other parcels\r\n      // 2. attempt to replace\r\n      // if (lastSearchMethod === 'reverseGeocode') { // || !configForParcelLayer.wipeOutOtherParcelsOnReverseGeocodeOnly) {\r\n      const clickCoords = this.store.state.clickCoords;\r\n      const coords = [clickCoords.lng, clickCoords.lat];\r\n      const [lng, lat] = coords;\r\n      const latlng = L.latLng(lat, lng);\r\n\r\n      // console.log('didGetParcels is wiping out the', otherParcelLayers, 'parcels in state');\r\n      for (let otherParcelLayer of otherParcelLayers) {\r\n        // console.log('for let otherParcelLayer of otherParcelLayers is running');\r\n        const configForOtherParcelLayer = this.config.parcels[otherParcelLayer];\r\n        const otherMultipleAllowed = configForOtherParcelLayer.multipleAllowed;\r\n        this.setParcelsInState(otherParcelLayer, otherMultipleAllowed, null, [])\r\n        this.getParcelsByLatLng(latlng, otherParcelLayer, 'noFetch')\r\n      }\r\n\r\n      // console.log('didGetParcels - shouldGeocode is running');\r\n      const props = feature.properties || {};\r\n      const id = props[geocodeField];\r\n      if (id) this.controller.router.routeToAddress(id);\r\n    } else {\r\n      // console.log('180405 data-manager.js didGetParcels - if shouldGeocode is NOT running');\r\n      // if (lastSearchMethod != 'reverseGeocode-secondAttempt') {\r\n      // if (fetch !== 'noFetch') {\r\n      if (fetch !== 'noFetch' && lastSearchMethod != 'reverseGeocode-secondAttempt') {\r\n        // console.log('180405 data-manager.js - didGetParcels - is calling fetchData() on feature w address', feature.properties.street_address);\r\n        this.fetchData();\r\n      }\r\n    }\r\n  }\r\n\r\n  getDistances(coords) {\r\n    let turfCoordinates = []\r\n    for (let coordinate of coords[0]) {\r\n      turfCoordinates.push(point(coordinate));\r\n    }\r\n    let distances = [];\r\n    for (let i=0; i<turfCoordinates.length - 1; i++) {\r\n      distances[i] = distance(turfCoordinates[i], turfCoordinates[i+1], {units: 'feet'});\r\n    }\r\n    return distances;\r\n  }\r\n\r\n  setParcelsInState(parcelLayer, multipleAllowed, feature, featuresSorted) {\r\n    let payload;\r\n    // pwd\r\n    if (!multipleAllowed) {\r\n      payload = {\r\n        parcelLayer,\r\n        multipleAllowed,\r\n        data: feature\r\n      }\r\n    // dor\r\n    } else {\r\n      payload = {\r\n        parcelLayer,\r\n        multipleAllowed,\r\n        data: featuresSorted,\r\n        status: 'success',\r\n        activeParcel: feature ? feature.id : null,\r\n        // TODO apply concatDorAddress in client config - this global is no\r\n        // longer available\r\n        // activeAddress: feature ? concatDorAddress(feature) : null,\r\n        activeAddress: null,\r\n        activeMapreg: feature ? feature.properties.MAPREG : null\r\n      }\r\n    }\r\n    // update state\r\n    this.store.commit('setParcelData', payload);\r\n  }\r\n\r\n  sortDorParcelFeatures(features) {\r\n    // map parcel status to a numeric priority\r\n    // (basically so remainders come before inactives)\r\n    const STATUS_PRIORITY = {\r\n      1: 1,\r\n      2: 3,\r\n      3: 2\r\n    }\r\n\r\n    // first sort by mapreg (descending)\r\n    features.sort((a, b) => {\r\n      const mapregA = a.properties.MAPREG;\r\n      const mapregB = b.properties.MAPREG;\r\n\r\n      if (mapregA < mapregB) return 1;\r\n      if (mapregA > mapregB) return -1;\r\n      return 0;\r\n    });\r\n\r\n    // then sort by status\r\n    features.sort((a, b) => {\r\n      const statusA = STATUS_PRIORITY[a.properties.STATUS];\r\n      const statusB = STATUS_PRIORITY[b.properties.STATUS];\r\n\r\n      if (statusA < statusB) return -1;\r\n      if (statusA > statusB) return 1;\r\n      return 0;\r\n    });\r\n\r\n    return features;\r\n  }\r\n}\r\n\r\nexport default DataManager;\r\n","/*\r\nThe Controller handles events from the UI that have some effect on routing or\r\ndata fetching. It is a \"thin\" class that mostly proxies events to the router and\r\ndata manager, and facilitates communication between them.\r\n*/\r\n\r\nimport Vue from 'vue';\r\nimport Router from './router';\r\nimport DataManager from './data-manager';\r\n\r\nclass Controller {\r\n  constructor(opts) {\r\n    const store = this.store = opts.store;\r\n    const config = this.config = opts.config;\r\n    // const eventBus = this.eventBus = opts.eventBus;\r\n    this.history = window.history;\r\n\r\n    // the router and data manager need a ref to the controller\r\n    opts.controller = this;\r\n\r\n    // create data manager\r\n    const dataManager = this.dataManager = new DataManager(opts);\r\n\r\n    // create router\r\n    opts.dataManager = dataManager;\r\n    this.router = new Router(opts);\r\n  }\r\n\r\n  /*\r\n  EVENT HANDLERS\r\n  */\r\n\r\n  appDidLoad() {\r\n    // route once on load\r\n    this.router.hashChanged();\r\n  }\r\n\r\n  test() {\r\n    console.log('controller test is firing');\r\n  }\r\n\r\n  getMoreRecords(dataSource, highestPageRetrieved) {\r\n    this.dataManager.fetchMoreData(dataSource, highestPageRetrieved);\r\n  }\r\n\r\n  filterInputSubmit(value, process, searchCategory) {\r\n    console.log('controller filterInputSubmit is running, value:', value, 'process:', process);\r\n    if (process === 'mapboard') {\r\n      this.handleSearchFormSubmit(value);\r\n    } else {\r\n      this.handleConfigurableInputSubmit(value, searchCategory);\r\n    }\r\n  }\r\n\r\n  handleConfigurableInputSubmit(value, searchCategory) {\r\n    console.log('controller handleConfigurableInputSubmit is running, value:', value, 'searchCategory:', searchCategory);\r\n    if (searchCategory === 'address') {\r\n      this.handleSearchFormSubmit(value, searchCategory);\r\n    } else if (searchCategory === 'owner') {\r\n      console.log('searchCategory is owner');\r\n      this.handleSearchFormSubmit(value, searchCategory);\r\n    }\r\n  }\r\n\r\n  handleSearchFormSubmit(value, searchCategory) {\r\n    const input = value\r\n    // console.log('phila-vue-datafetch controller.js, handleSearchFormSubmit is running', value, this);\r\n\r\n    this.store.commit('setGeocodeStatus', null);\r\n    if (!searchCategory || searchCategory === 'address') {\r\n      this.store.commit('setGeocodeInput', input);\r\n    } else if (searchCategory === 'owner') {\r\n      this.store.commit('setOwnerSearchInput', input);\r\n    }\r\n    this.store.commit('setShouldShowAddressCandidateList', false);\r\n    if (this.store.state.lastSearchMethod) {\r\n      this.store.commit('setLastSearchMethod', 'geocode');\r\n    }\r\n    if (this.store.state.clickCoords) {\r\n      this.store.commit('setClickCoords', null);\r\n    }\r\n\r\n    // clear out state\r\n    const parcelLayers = Object.keys(this.config.parcels || {});\r\n\r\n    for (let parcelLayer of parcelLayers) {\r\n      const configForParcelLayer = this.config.parcels[parcelLayer];\r\n      const multipleAllowed = configForParcelLayer.multipleAllowed;\r\n      let payload;\r\n      // pwd\r\n      if (!multipleAllowed) {\r\n        payload = {\r\n          parcelLayer: parcelLayer,\r\n          multipleAllowed,\r\n          data: null\r\n        }\r\n      // dor\r\n      } else {\r\n        payload = {\r\n          parcelLayer: parcelLayer,\r\n          multipleAllowed,\r\n          data: [],\r\n          status: null,\r\n          activeParcel: null,\r\n          activeAddress: null,\r\n          activeMapreg: null\r\n        }\r\n      }\r\n      // update state\r\n      this.store.commit('setParcelData', payload);\r\n    }\r\n\r\n    // tell router\r\n    console.log('phila-vue-datafetch controller.js, handleSearchFormSubmit is about to call routeToAddress, input:', input);\r\n    if (!searchCategory || searchCategory === 'address') {\r\n      this.router.routeToAddress(input, searchCategory);\r\n    } else if (searchCategory === 'owner') {\r\n      console.log('searchCategory is owner');\r\n      this.router.routeToOwner(input, searchCategory);\r\n    }\r\n  }\r\n\r\n  handleMapClick(e) {\r\n    // console.log('handle map click', e, this);\r\n\r\n    // TODO figure out why form submits via enter key are generating a map\r\n    // click event and remove this\r\n    if (e.originalEvent.keyCode === 13) {\r\n      return;\r\n    }\r\n    this.store.commit('setLastSearchMethod', 'reverseGeocode');\r\n    this.store.commit('setClickCoords', null);\r\n\r\n    // get parcels that intersect map click xy\r\n    const latLng = e.latlng;\r\n    this.store.commit('setClickCoords', latLng);\r\n    this.store.commit('setGeocodeInput', null);\r\n\r\n    // if click is on a topic with pwd parcels, you do not want to find dor parcels unless the\r\n    // click was actually on a pwd parcel that could be geocoded, because just running\r\n    // getDorParcelsByLatLng changes the Deeds topic in the UI, and the click could have been\r\n    // on the road\r\n    // there is a callback after geocode to get dor parcels\r\n    const activeParcelLayer = this.store.state.activeParcelLayer;\r\n    // console.log('in handleMapClick, latlng:', latLng, 'activeParcelLayer:', activeParcelLayer);\r\n    this.dataManager.getParcelsByLatLng(latLng, activeParcelLayer);\r\n  }\r\n\r\n  // util for making sure topic headers are visible after clicking on one\r\n  // adapted from: https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\r\n  // REVIEW this is returning true even when the topic header isn't visible,\r\n  // probably because of a timing issue. it's good enough without this check for\r\n  // now. commenting out.\r\n  // isElementInViewport(el) {\r\n  //   const rect = el.getBoundingClientRect();\r\n  //\r\n  //   // check visibility of each side of bounding rect\r\n  //   const topVisible = rect.top >= 0;\r\n  //   const leftVisible = rect.left >= 0;\r\n  //   const bottomVisible = rect.bottom <= (\r\n  //     window.innerHeight || document.documentElement.clientHeight\r\n  //   );\r\n  //   const rightVisible = rect.right <= (\r\n  //     window.innerWidth || document.documentElement.clientWidth\r\n  //   );\r\n  //\r\n  //   return (topVisible && leftVisible && bottomVisible && rightVisible);\r\n  // }\r\n\r\n  handleTopicHeaderClick(topic) {\r\n    // console.log('Controller.handleTopicHeaderClick', topic);\r\n\r\n    this.router.routeToTopic(topic);//.then(function(targetExists) {\r\n\r\n    /*\r\n    scroll to top of topic header\r\n    */\r\n\r\n    // get element\r\n    const els = document.querySelectorAll(`[data-topic-key='${topic}']`);\r\n    const el = els.length === 1 && els[0];\r\n\r\n    // handle null el - this shouldn't happen, but just in case\r\n    if (!el) return;\r\n\r\n    Vue.nextTick(() => {\r\n      // REVIEW this check is returning true even when the header el isn't\r\n      // really visible, probbaly because of a timing issue. it works well\r\n      // enough without it. commenting out for now.\r\n      // const visible = this.isElementInViewport(el);\r\n\r\n      // if (!visible) {\r\n        el.scrollIntoView();\r\n      // }\r\n    });\r\n  }\r\n\r\n  goToDefaultAddress(address) {\r\n    this.router.routeToAddress(address);\r\n  }\r\n}\r\n\r\nexport default Controller;\r\n","\r\n\r\nconst initialState = {\r\n  // this gets set to the parcel layer for the default (aka first) topic in\r\n  // DataManager.resetGeocode, which is called by Router.hashChanged on app\r\n  // load.\r\n  activeTopic: '',\r\n  activeParcelLayer: '',\r\n  clickCoords: null,\r\n  // should addresscandidate be here if neither pvm or pvc were included?\r\n  shouldShowAddressCandidateList: false,\r\n  // the ais feature\r\n  geocode: {\r\n    status: null,\r\n    data: null,\r\n    input: null,\r\n    related: null,\r\n  },\r\n  ownerSearch: {\r\n    status: null,\r\n    data: null,\r\n    input: null,\r\n  },\r\n  lastSearchMethod: 'geocode',\r\n};\r\n\r\nconst pvdStore = {\r\n  createSources(config) {\r\n    console.log('createSources is running, config:', config);\r\n    const sourceKeys = Object.keys(config.dataSources || {});\r\n    const sources = sourceKeys.reduce((o, key) => {\r\n      let val;\r\n      // if the source has targets, just set it to be an empty object\r\n      if (config.dataSources[key].targets) {\r\n        val = {\r\n          targets: {}\r\n        };\r\n      } else {\r\n        val = {\r\n         // we have to define these here, because vue can't observe properties that\r\n         // are added later.\r\n         status: null,\r\n         secondaryStatus: null,\r\n         data: null\r\n       };\r\n      }\r\n\r\n      o[key] = val;\r\n\r\n      return o;\r\n    }, {});\r\n    return sources;\r\n  },\r\n\r\n  createParcels(config) {\r\n    const parcelKeys = Object.keys(config.parcels || {});\r\n    const parcels = parcelKeys.reduce((o, key) => {\r\n      let val;\r\n      if (config.parcels[key].multipleAllowed) {\r\n        val = {\r\n          data: [],\r\n          status: null,\r\n          activeParcel: null,\r\n          activeAddress: null,\r\n          activeMapreg: null\r\n        };\r\n      } else {\r\n        val = null;\r\n        // val = {\r\n        //   geometry: null,\r\n        //   id: null,\r\n        //   properties: null,\r\n        //   type: null\r\n        // };\r\n      }\r\n\r\n      o[key] = val;\r\n\r\n      return o;\r\n    }, {});\r\n    return parcels;\r\n  },\r\n\r\n  store: {\r\n    state: initialState,\r\n    mutations: {\r\n      setActiveParcelLayer(state, payload) {\r\n        state.activeParcelLayer = payload;\r\n      },\r\n      setActiveTopic(state, payload) {\r\n        state.activeTopic = payload;\r\n      },\r\n      setClickCoords(state, payload) {\r\n        state.clickCoords = payload;\r\n      },\r\n      setSourceStatus(state, payload) {\r\n        const key = payload.key;\r\n        const status = payload.status;\r\n\r\n        // if a target id was passed in, set the status for that target\r\n        const targetId = payload.targetId;\r\n\r\n        if (targetId) {\r\n          // console.log('store.js setSourceStatus, key:', key, 'status:', status, 'targetId:', targetId);\r\n          state.sources[key].targets[targetId].status = status;\r\n        } else {\r\n          state.sources[key].status = status;\r\n        }\r\n      },\r\n      setSecondarySourceStatus(state, payload) {\r\n        const key = payload.key;\r\n        const secondaryStatus = payload.secondaryStatus;\r\n\r\n        // if a target id was passed in, set the status for that target\r\n        const targetId = payload.targetId;\r\n\r\n        // if (targetId) {\r\n        //   state.sources[key].targets[targetId].status = status;\r\n        // } else {\r\n        state.sources[key].secondaryStatus = secondaryStatus;\r\n        // }\r\n      },\r\n      setSourceData(state, payload) {\r\n        // console.log('store setSourceData payload:', payload);\r\n        const key = payload.key;\r\n        const data = payload.data;\r\n\r\n        // if a target id was passed in, set the data object for that target\r\n        const targetId = payload.targetId;\r\n\r\n        if (targetId) {\r\n          if (state.sources[key].targets[targetId]) {\r\n            state.sources[key].targets[targetId].data = data;\r\n          }\r\n        } else {\r\n          state.sources[key].data = data;\r\n        }\r\n      },\r\n      setSourceDataMore(state, payload) {\r\n        const key = payload.key;\r\n        const data = payload.data;\r\n        const nextPage = payload.page;\r\n        const oldData = state.sources[key].data;\r\n        // console.log('oldData features', oldData.features, 'data features', data.features);\r\n        const allData = oldData.features.concat(data.features);\r\n        // console.log('allData', allData);\r\n        // if a target id was passed in, set the data object for that target\r\n        // const targetId = payload.targetId;\r\n\r\n        // if (targetId) {\r\n        //   state.sources[key].targets[targetId].data = data;\r\n        // } else {\r\n\r\n        state.sources[key].data.features = allData;\r\n        state.sources[key].data.page = nextPage;\r\n        // }\r\n      },\r\n      // this sets empty targets for a data source\r\n      createEmptySourceTargets(state, payload) {\r\n        const {key, targetIds} = payload;\r\n        state.sources[key].targets = targetIds.reduce((acc, targetId) => {\r\n          acc[targetId] = {\r\n            status: null,\r\n            data: null\r\n          };\r\n          return acc;\r\n        }, {});\r\n      },\r\n      clearSourceTargets(state, payload) {\r\n        const key = payload.key;\r\n        state.sources[key].targets = {};\r\n      },\r\n      // this is the map center as an xy coordinate array (not latlng)\r\n      setMapCenter(state, payload) {\r\n        state.map.center = payload;\r\n      },\r\n      setMapZoom(state, payload) {\r\n        state.map.zoom = payload;\r\n      },\r\n      setParcelData(state, payload) {\r\n        // console.log('store setParcelData payload:', payload);\r\n        const { parcelLayer, data, multipleAllowed, status, activeParcel, activeAddress, activeMapreg } = payload || {};\r\n        // console.log('store setParcelData parcelLayer:', parcelLayer, 'data:', data, 'multipleAllowed:', multipleAllowed, 'status:', status, 'activeParcel:', activeParcel);\r\n        if (!multipleAllowed) {\r\n          state.parcels[parcelLayer] = data;\r\n        } else {\r\n          state.parcels[parcelLayer].data = data;\r\n          state.parcels[parcelLayer].status = status;\r\n          state.parcels[parcelLayer].activeParcel = activeParcel;\r\n          state.parcels[parcelLayer].activeAddress = activeAddress;\r\n          state.parcels[parcelLayer].activeMapreg = activeMapreg;\r\n        }\r\n      },\r\n      setLastSearchMethod(state, payload) {\r\n        state.lastSearchMethod = payload;\r\n      },\r\n      setGeocodeStatus(state, payload) {\r\n        state.geocode.status = payload;\r\n      },\r\n      setGeocodeData(state, payload) {\r\n        state.geocode.data = payload;\r\n      },\r\n      setGeocodeRelated(state, payload) {\r\n        state.geocode.related = payload;\r\n      },\r\n      setGeocodeInput(state, payload) {\r\n        state.geocode.input = payload;\r\n      },\r\n      setOwnerSearchStatus(state, payload) {\r\n        state.ownerSearch.status = payload;\r\n      },\r\n      setOwnerSearchData(state, payload) {\r\n        state.ownerSearch.data = payload;\r\n      },\r\n      setOwnerSearchInput(state, payload) {\r\n        state.ownerSearch.input = payload;\r\n      },\r\n      setBasemap(state, payload) {\r\n        state.map.basemap = payload;\r\n      },\r\n      setImagery(state, payload) {\r\n        state.map.imagery = payload;\r\n      },\r\n      setShouldShowImagery(state, payload) {\r\n        state.map.shouldShowImagery = payload;\r\n      },\r\n      setShouldShowAddressCandidateList(state, payload) {\r\n        state.shouldShowAddressCandidateList = payload;\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nexport default pvdStore;\r\n","import Controller from './controller';\r\nimport pvdStore from './store';\r\n\r\nfunction controllerMixin(Vue, opts) {\r\n  const controller = new Controller(opts);\r\n\r\n  Vue.mixin({\r\n    created() {\r\n      this.$controller = controller;\r\n    }\r\n  });\r\n}\r\n\r\nexport default { controllerMixin, pvdStore };\r\n","var map = {\n\t\"./en-SG\": 195,\n\t\"./en-SG.js\": 195,\n\t\"./en-au\": 194,\n\t\"./en-au.js\": 194,\n\t\"./en-ca\": 193,\n\t\"./en-ca.js\": 193,\n\t\"./en-gb\": 192,\n\t\"./en-gb.js\": 192,\n\t\"./en-ie\": 191,\n\t\"./en-ie.js\": 191,\n\t\"./en-il\": 190,\n\t\"./en-il.js\": 190,\n\t\"./en-nz\": 189,\n\t\"./en-nz.js\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 573;","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".greeting > h2 {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.greeting > .callout {\\r\\n  border-color: #58c04d;\\r\\n  background: #fff;\\r\\n  /*margin: 0 0 1rem 0;*/\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n.greeting > .callout > ul {\\r\\n  margin: 0 0 0 1.42857rem;\\r\\n  padding: 0 0 0 1.42857rem;\\r\\n}\\r\\n\\r\\n#application .site-header, #application .app-footer {\\r\\n\\tbackground: #2176d2;\\r\\n}\\r\\n\\r\\n#application .site-header .page-title-container h1 {\\r\\n\\tfont-size: 2.14286rem;\\r\\n}\\r\\n\\r\\n/*this fixes an issue with the topic panel scrolling over the footer padding*/\\r\\n#application .app-footer {\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\n/*small*/\\r\\n@media screen and (max-width: 39.9375em) {\\r\\n\\t.logo {\\r\\n\\t\\tfloat: left;\\r\\n\\t}\\r\\n\\r\\n\\t.page-title-container {\\r\\n\\t\\tfloat: right;\\r\\n\\t}\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"index.html\";"],"sourceRoot":""}